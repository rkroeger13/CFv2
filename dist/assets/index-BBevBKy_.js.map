{"version":3,"file":"index-BBevBKy_.js","sources":["../../node_modules/react-dom/client.js","../../node_modules/date-fns/toDate.mjs","../../node_modules/date-fns/constructFrom.mjs","../../node_modules/date-fns/addDays.mjs","../../node_modules/date-fns/constants.mjs","../../node_modules/date-fns/_lib/defaultOptions.mjs","../../node_modules/date-fns/startOfWeek.mjs","../../node_modules/date-fns/startOfISOWeek.mjs","../../node_modules/date-fns/getISOWeekYear.mjs","../../node_modules/date-fns/startOfDay.mjs","../../node_modules/date-fns/_lib/getTimezoneOffsetInMilliseconds.mjs","../../node_modules/date-fns/differenceInCalendarDays.mjs","../../node_modules/date-fns/startOfISOWeekYear.mjs","../../node_modules/date-fns/isDate.mjs","../../node_modules/date-fns/isValid.mjs","../../node_modules/date-fns/startOfYear.mjs","../../node_modules/date-fns/locale/en-US/_lib/formatDistance.mjs","../../node_modules/date-fns/locale/_lib/buildFormatLongFn.mjs","../../node_modules/date-fns/locale/en-US/_lib/formatLong.mjs","../../node_modules/date-fns/locale/en-US/_lib/formatRelative.mjs","../../node_modules/date-fns/locale/_lib/buildLocalizeFn.mjs","../../node_modules/date-fns/locale/en-US/_lib/localize.mjs","../../node_modules/date-fns/locale/_lib/buildMatchFn.mjs","../../node_modules/date-fns/locale/_lib/buildMatchPatternFn.mjs","../../node_modules/date-fns/locale/en-US/_lib/match.mjs","../../node_modules/date-fns/locale/en-US.mjs","../../node_modules/date-fns/getDayOfYear.mjs","../../node_modules/date-fns/getISOWeek.mjs","../../node_modules/date-fns/getWeekYear.mjs","../../node_modules/date-fns/startOfWeekYear.mjs","../../node_modules/date-fns/getWeek.mjs","../../node_modules/date-fns/_lib/addLeadingZeros.mjs","../../node_modules/date-fns/_lib/format/lightFormatters.mjs","../../node_modules/date-fns/_lib/format/formatters.mjs","../../node_modules/date-fns/_lib/format/longFormatters.mjs","../../node_modules/date-fns/_lib/protectedTokens.mjs","../../node_modules/date-fns/format.mjs","../../node_modules/date-fns/getDefaultOptions.mjs","../../node_modules/date-fns/getISODay.mjs","../../node_modules/date-fns/transpose.mjs","../../node_modules/date-fns/parse/_lib/Setter.mjs","../../node_modules/date-fns/parse/_lib/Parser.mjs","../../node_modules/date-fns/parse/_lib/parsers/EraParser.mjs","../../node_modules/date-fns/parse/_lib/constants.mjs","../../node_modules/date-fns/parse/_lib/utils.mjs","../../node_modules/date-fns/parse/_lib/parsers/YearParser.mjs","../../node_modules/date-fns/parse/_lib/parsers/LocalWeekYearParser.mjs","../../node_modules/date-fns/parse/_lib/parsers/ISOWeekYearParser.mjs","../../node_modules/date-fns/parse/_lib/parsers/ExtendedYearParser.mjs","../../node_modules/date-fns/parse/_lib/parsers/QuarterParser.mjs","../../node_modules/date-fns/parse/_lib/parsers/StandAloneQuarterParser.mjs","../../node_modules/date-fns/parse/_lib/parsers/MonthParser.mjs","../../node_modules/date-fns/parse/_lib/parsers/StandAloneMonthParser.mjs","../../node_modules/date-fns/setWeek.mjs","../../node_modules/date-fns/parse/_lib/parsers/LocalWeekParser.mjs","../../node_modules/date-fns/setISOWeek.mjs","../../node_modules/date-fns/parse/_lib/parsers/ISOWeekParser.mjs","../../node_modules/date-fns/parse/_lib/parsers/DateParser.mjs","../../node_modules/date-fns/parse/_lib/parsers/DayOfYearParser.mjs","../../node_modules/date-fns/setDay.mjs","../../node_modules/date-fns/parse/_lib/parsers/DayParser.mjs","../../node_modules/date-fns/parse/_lib/parsers/LocalDayParser.mjs","../../node_modules/date-fns/parse/_lib/parsers/StandAloneLocalDayParser.mjs","../../node_modules/date-fns/setISODay.mjs","../../node_modules/date-fns/parse/_lib/parsers/ISODayParser.mjs","../../node_modules/date-fns/parse/_lib/parsers/AMPMParser.mjs","../../node_modules/date-fns/parse/_lib/parsers/AMPMMidnightParser.mjs","../../node_modules/date-fns/parse/_lib/parsers/DayPeriodParser.mjs","../../node_modules/date-fns/parse/_lib/parsers/Hour1to12Parser.mjs","../../node_modules/date-fns/parse/_lib/parsers/Hour0to23Parser.mjs","../../node_modules/date-fns/parse/_lib/parsers/Hour0To11Parser.mjs","../../node_modules/date-fns/parse/_lib/parsers/Hour1To24Parser.mjs","../../node_modules/date-fns/parse/_lib/parsers/MinuteParser.mjs","../../node_modules/date-fns/parse/_lib/parsers/SecondParser.mjs","../../node_modules/date-fns/parse/_lib/parsers/FractionOfSecondParser.mjs","../../node_modules/date-fns/parse/_lib/parsers/ISOTimezoneWithZParser.mjs","../../node_modules/date-fns/parse/_lib/parsers/ISOTimezoneParser.mjs","../../node_modules/date-fns/parse/_lib/parsers/TimestampSecondsParser.mjs","../../node_modules/date-fns/parse/_lib/parsers/TimestampMillisecondsParser.mjs","../../node_modules/date-fns/parse/_lib/parsers.mjs","../../node_modules/date-fns/parse.mjs","../../node_modules/zustand/esm/vanilla.mjs","../../node_modules/use-sync-external-store/cjs/use-sync-external-store-shim.production.js","../../node_modules/use-sync-external-store/shim/index.js","../../node_modules/use-sync-external-store/cjs/use-sync-external-store-shim/with-selector.production.js","../../node_modules/use-sync-external-store/shim/with-selector.js","../../node_modules/zustand/esm/index.mjs","../../src/services/validation.ts","../../src/services/storage.ts","../../src/stores/cashFlowStore.ts","../../src/components/CashFlowChart.tsx","../../node_modules/@mui/icons-material/utils/createSvgIcon.js","../../node_modules/@mui/icons-material/InfoOutlined.js","../../src/components/CashFlowSummary.tsx","../../node_modules/@mui/icons-material/Edit.js","../../src/components/AddCashAccountDialog.tsx","../../node_modules/@mui/icons-material/Close.js","../../src/components/EditCashAccountDialog.tsx","../../src/components/CashAccountsList.tsx","../../src/components/CashFlow.tsx","../../src/App.tsx","../../src/main.tsx"],"sourcesContent":["'use strict';\n\nvar m = require('react-dom');\nif (process.env.NODE_ENV === 'production') {\n  exports.createRoot = m.createRoot;\n  exports.hydrateRoot = m.hydrateRoot;\n} else {\n  var i = m.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n  exports.createRoot = function(c, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.createRoot(c, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n  exports.hydrateRoot = function(c, h, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.hydrateRoot(c, h, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n}\n","/**\n * @name toDate\n * @category Common Helpers\n * @summary Convert the given argument to an instance of Date.\n *\n * @description\n * Convert the given argument to an instance of Date.\n *\n * If the argument is an instance of Date, the function returns its clone.\n *\n * If the argument is a number, it is treated as a timestamp.\n *\n * If the argument is none of the above, the function returns Invalid Date.\n *\n * **Note**: *all* Date arguments passed to any *date-fns* function is processed by `toDate`.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param argument - The value to convert\n *\n * @returns The parsed date in the local time zone\n *\n * @example\n * // Clone the date:\n * const result = toDate(new Date(2014, 1, 11, 11, 30, 30))\n * //=> Tue Feb 11 2014 11:30:30\n *\n * @example\n * // Convert the timestamp to date:\n * const result = toDate(1392098430000)\n * //=> Tue Feb 11 2014 11:30:30\n */\nexport function toDate(argument) {\n  const argStr = Object.prototype.toString.call(argument);\n\n  // Clone the date\n  if (\n    argument instanceof Date ||\n    (typeof argument === \"object\" && argStr === \"[object Date]\")\n  ) {\n    // Prevent the date to lose the milliseconds when passed to new Date() in IE10\n    return new argument.constructor(+argument);\n  } else if (\n    typeof argument === \"number\" ||\n    argStr === \"[object Number]\" ||\n    typeof argument === \"string\" ||\n    argStr === \"[object String]\"\n  ) {\n    // TODO: Can we get rid of as?\n    return new Date(argument);\n  } else {\n    // TODO: Can we get rid of as?\n    return new Date(NaN);\n  }\n}\n\n// Fallback for modularized imports:\nexport default toDate;\n","/**\n * @name constructFrom\n * @category Generic Helpers\n * @summary Constructs a date using the reference date and the value\n *\n * @description\n * The function constructs a new date using the constructor from the reference\n * date and the given value. It helps to build generic functions that accept\n * date extensions.\n *\n * It defaults to `Date` if the passed reference date is a number or a string.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The reference date to take constructor from\n * @param value - The value to create the date\n *\n * @returns Date initialized using the given date and value\n *\n * @example\n * import { constructFrom } from 'date-fns'\n *\n * // A function that clones a date preserving the original type\n * function cloneDate<DateType extends Date(date: DateType): DateType {\n *   return constructFrom(\n *     date, // Use contrustor from the given date\n *     date.getTime() // Use the date value to create a new date\n *   )\n * }\n */\nexport function constructFrom(date, value) {\n  if (date instanceof Date) {\n    return new date.constructor(value);\n  } else {\n    return new Date(value);\n  }\n}\n\n// Fallback for modularized imports:\nexport default constructFrom;\n","import { toDate } from \"./toDate.mjs\";\nimport { constructFrom } from \"./constructFrom.mjs\";\n\n/**\n * @name addDays\n * @category Day Helpers\n * @summary Add the specified number of days to the given date.\n *\n * @description\n * Add the specified number of days to the given date.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The date to be changed\n * @param amount - The amount of days to be added.\n *\n * @returns The new date with the days added\n *\n * @example\n * // Add 10 days to 1 September 2014:\n * const result = addDays(new Date(2014, 8, 1), 10)\n * //=> Thu Sep 11 2014 00:00:00\n */\nexport function addDays(date, amount) {\n  const _date = toDate(date);\n  if (isNaN(amount)) return constructFrom(date, NaN);\n  if (!amount) {\n    // If 0 days, no-op to avoid changing times in the hour before end of DST\n    return _date;\n  }\n  _date.setDate(_date.getDate() + amount);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default addDays;\n","/**\n * @module constants\n * @summary Useful constants\n * @description\n * Collection of useful date constants.\n *\n * The constants could be imported from `date-fns/constants`:\n *\n * ```ts\n * import { maxTime, minTime } from \"./constants/date-fns/constants\";\n *\n * function isAllowedTime(time) {\n *   return time <= maxTime && time >= minTime;\n * }\n * ```\n */\n\n/**\n * @constant\n * @name daysInWeek\n * @summary Days in 1 week.\n */\nexport const daysInWeek = 7;\n\n/**\n * @constant\n * @name daysInYear\n * @summary Days in 1 year.\n *\n * @description\n * How many days in a year.\n *\n * One years equals 365.2425 days according to the formula:\n *\n * > Leap year occures every 4 years, except for years that are divisable by 100 and not divisable by 400.\n * > 1 mean year = (365+1/4-1/100+1/400) days = 365.2425 days\n */\nexport const daysInYear = 365.2425;\n\n/**\n * @constant\n * @name maxTime\n * @summary Maximum allowed time.\n *\n * @example\n * import { maxTime } from \"./constants/date-fns/constants\";\n *\n * const isValid = 8640000000000001 <= maxTime;\n * //=> false\n *\n * new Date(8640000000000001);\n * //=> Invalid Date\n */\nexport const maxTime = Math.pow(10, 8) * 24 * 60 * 60 * 1000;\n\n/**\n * @constant\n * @name minTime\n * @summary Minimum allowed time.\n *\n * @example\n * import { minTime } from \"./constants/date-fns/constants\";\n *\n * const isValid = -8640000000000001 >= minTime;\n * //=> false\n *\n * new Date(-8640000000000001)\n * //=> Invalid Date\n */\nexport const minTime = -maxTime;\n\n/**\n * @constant\n * @name millisecondsInWeek\n * @summary Milliseconds in 1 week.\n */\nexport const millisecondsInWeek = 604800000;\n\n/**\n * @constant\n * @name millisecondsInDay\n * @summary Milliseconds in 1 day.\n */\nexport const millisecondsInDay = 86400000;\n\n/**\n * @constant\n * @name millisecondsInMinute\n * @summary Milliseconds in 1 minute\n */\nexport const millisecondsInMinute = 60000;\n\n/**\n * @constant\n * @name millisecondsInHour\n * @summary Milliseconds in 1 hour\n */\nexport const millisecondsInHour = 3600000;\n\n/**\n * @constant\n * @name millisecondsInSecond\n * @summary Milliseconds in 1 second\n */\nexport const millisecondsInSecond = 1000;\n\n/**\n * @constant\n * @name minutesInYear\n * @summary Minutes in 1 year.\n */\nexport const minutesInYear = 525600;\n\n/**\n * @constant\n * @name minutesInMonth\n * @summary Minutes in 1 month.\n */\nexport const minutesInMonth = 43200;\n\n/**\n * @constant\n * @name minutesInDay\n * @summary Minutes in 1 day.\n */\nexport const minutesInDay = 1440;\n\n/**\n * @constant\n * @name minutesInHour\n * @summary Minutes in 1 hour.\n */\nexport const minutesInHour = 60;\n\n/**\n * @constant\n * @name monthsInQuarter\n * @summary Months in 1 quarter.\n */\nexport const monthsInQuarter = 3;\n\n/**\n * @constant\n * @name monthsInYear\n * @summary Months in 1 year.\n */\nexport const monthsInYear = 12;\n\n/**\n * @constant\n * @name quartersInYear\n * @summary Quarters in 1 year\n */\nexport const quartersInYear = 4;\n\n/**\n * @constant\n * @name secondsInHour\n * @summary Seconds in 1 hour.\n */\nexport const secondsInHour = 3600;\n\n/**\n * @constant\n * @name secondsInMinute\n * @summary Seconds in 1 minute.\n */\nexport const secondsInMinute = 60;\n\n/**\n * @constant\n * @name secondsInDay\n * @summary Seconds in 1 day.\n */\nexport const secondsInDay = secondsInHour * 24;\n\n/**\n * @constant\n * @name secondsInWeek\n * @summary Seconds in 1 week.\n */\nexport const secondsInWeek = secondsInDay * 7;\n\n/**\n * @constant\n * @name secondsInYear\n * @summary Seconds in 1 year.\n */\nexport const secondsInYear = secondsInDay * daysInYear;\n\n/**\n * @constant\n * @name secondsInMonth\n * @summary Seconds in 1 month\n */\nexport const secondsInMonth = secondsInYear / 12;\n\n/**\n * @constant\n * @name secondsInQuarter\n * @summary Seconds in 1 quarter.\n */\nexport const secondsInQuarter = secondsInMonth * 3;\n","let defaultOptions = {};\n\nexport function getDefaultOptions() {\n  return defaultOptions;\n}\n\nexport function setDefaultOptions(newOptions) {\n  defaultOptions = newOptions;\n}\n","import { toDate } from \"./toDate.mjs\";\nimport { getDefaultOptions } from \"./_lib/defaultOptions.mjs\";\n\n/**\n * The {@link startOfWeek} function options.\n */\n\n/**\n * @name startOfWeek\n * @category Week Helpers\n * @summary Return the start of a week for the given date.\n *\n * @description\n * Return the start of a week for the given date.\n * The result will be in the local timezone.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The original date\n * @param options - An object with options\n *\n * @returns The start of a week\n *\n * @example\n * // The start of a week for 2 September 2014 11:55:00:\n * const result = startOfWeek(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Sun Aug 31 2014 00:00:00\n *\n * @example\n * // If the week starts on Monday, the start of the week for 2 September 2014 11:55:00:\n * const result = startOfWeek(new Date(2014, 8, 2, 11, 55, 0), { weekStartsOn: 1 })\n * //=> Mon Sep 01 2014 00:00:00\n */\nexport function startOfWeek(date, options) {\n  const defaultOptions = getDefaultOptions();\n  const weekStartsOn =\n    options?.weekStartsOn ??\n    options?.locale?.options?.weekStartsOn ??\n    defaultOptions.weekStartsOn ??\n    defaultOptions.locale?.options?.weekStartsOn ??\n    0;\n\n  const _date = toDate(date);\n  const day = _date.getDay();\n  const diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;\n\n  _date.setDate(_date.getDate() - diff);\n  _date.setHours(0, 0, 0, 0);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default startOfWeek;\n","import { startOfWeek } from \"./startOfWeek.mjs\";\n\n/**\n * @name startOfISOWeek\n * @category ISO Week Helpers\n * @summary Return the start of an ISO week for the given date.\n *\n * @description\n * Return the start of an ISO week for the given date.\n * The result will be in the local timezone.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The original date\n *\n * @returns The start of an ISO week\n *\n * @example\n * // The start of an ISO week for 2 September 2014 11:55:00:\n * const result = startOfISOWeek(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Mon Sep 01 2014 00:00:00\n */\nexport function startOfISOWeek(date) {\n  return startOfWeek(date, { weekStartsOn: 1 });\n}\n\n// Fallback for modularized imports:\nexport default startOfISOWeek;\n","import { constructFrom } from \"./constructFrom.mjs\";\nimport { startOfISOWeek } from \"./startOfISOWeek.mjs\";\nimport { toDate } from \"./toDate.mjs\";\n\n/**\n * @name getISOWeekYear\n * @category ISO Week-Numbering Year Helpers\n * @summary Get the ISO week-numbering year of the given date.\n *\n * @description\n * Get the ISO week-numbering year of the given date,\n * which always starts 3 days before the year's first Thursday.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The given date\n *\n * @returns The ISO week-numbering year\n *\n * @example\n * // Which ISO-week numbering year is 2 January 2005?\n * const result = getISOWeekYear(new Date(2005, 0, 2))\n * //=> 2004\n */\nexport function getISOWeekYear(date) {\n  const _date = toDate(date);\n  const year = _date.getFullYear();\n\n  const fourthOfJanuaryOfNextYear = constructFrom(date, 0);\n  fourthOfJanuaryOfNextYear.setFullYear(year + 1, 0, 4);\n  fourthOfJanuaryOfNextYear.setHours(0, 0, 0, 0);\n  const startOfNextYear = startOfISOWeek(fourthOfJanuaryOfNextYear);\n\n  const fourthOfJanuaryOfThisYear = constructFrom(date, 0);\n  fourthOfJanuaryOfThisYear.setFullYear(year, 0, 4);\n  fourthOfJanuaryOfThisYear.setHours(0, 0, 0, 0);\n  const startOfThisYear = startOfISOWeek(fourthOfJanuaryOfThisYear);\n\n  if (_date.getTime() >= startOfNextYear.getTime()) {\n    return year + 1;\n  } else if (_date.getTime() >= startOfThisYear.getTime()) {\n    return year;\n  } else {\n    return year - 1;\n  }\n}\n\n// Fallback for modularized imports:\nexport default getISOWeekYear;\n","import { toDate } from \"./toDate.mjs\";\n\n/**\n * @name startOfDay\n * @category Day Helpers\n * @summary Return the start of a day for the given date.\n *\n * @description\n * Return the start of a day for the given date.\n * The result will be in the local timezone.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The original date\n *\n * @returns The start of a day\n *\n * @example\n * // The start of a day for 2 September 2014 11:55:00:\n * const result = startOfDay(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Sep 02 2014 00:00:00\n */\nexport function startOfDay(date) {\n  const _date = toDate(date);\n  _date.setHours(0, 0, 0, 0);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default startOfDay;\n","import { toDate } from \"../toDate.mjs\";\n\n/**\n * Google Chrome as of 67.0.3396.87 introduced timezones with offset that includes seconds.\n * They usually appear for dates that denote time before the timezones were introduced\n * (e.g. for 'Europe/Prague' timezone the offset is GMT+00:57:44 before 1 October 1891\n * and GMT+01:00:00 after that date)\n *\n * Date#getTimezoneOffset returns the offset in minutes and would return 57 for the example above,\n * which would lead to incorrect calculations.\n *\n * This function returns the timezone offset in milliseconds that takes seconds in account.\n */\nexport function getTimezoneOffsetInMilliseconds(date) {\n  const _date = toDate(date);\n  const utcDate = new Date(\n    Date.UTC(\n      _date.getFullYear(),\n      _date.getMonth(),\n      _date.getDate(),\n      _date.getHours(),\n      _date.getMinutes(),\n      _date.getSeconds(),\n      _date.getMilliseconds(),\n    ),\n  );\n  utcDate.setUTCFullYear(_date.getFullYear());\n  return +date - +utcDate;\n}\n","import { millisecondsInDay } from \"./constants.mjs\";\nimport { startOfDay } from \"./startOfDay.mjs\";\nimport { getTimezoneOffsetInMilliseconds } from \"./_lib/getTimezoneOffsetInMilliseconds.mjs\";\n\n/**\n * @name differenceInCalendarDays\n * @category Day Helpers\n * @summary Get the number of calendar days between the given dates.\n *\n * @description\n * Get the number of calendar days between the given dates. This means that the times are removed\n * from the dates and then the difference in days is calculated.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param dateLeft - The later date\n * @param dateRight - The earlier date\n *\n * @returns The number of calendar days\n *\n * @example\n * // How many calendar days are between\n * // 2 July 2011 23:00:00 and 2 July 2012 00:00:00?\n * const result = differenceInCalendarDays(\n *   new Date(2012, 6, 2, 0, 0),\n *   new Date(2011, 6, 2, 23, 0)\n * )\n * //=> 366\n * // How many calendar days are between\n * // 2 July 2011 23:59:00 and 3 July 2011 00:01:00?\n * const result = differenceInCalendarDays(\n *   new Date(2011, 6, 3, 0, 1),\n *   new Date(2011, 6, 2, 23, 59)\n * )\n * //=> 1\n */\nexport function differenceInCalendarDays(dateLeft, dateRight) {\n  const startOfDayLeft = startOfDay(dateLeft);\n  const startOfDayRight = startOfDay(dateRight);\n\n  const timestampLeft =\n    +startOfDayLeft - getTimezoneOffsetInMilliseconds(startOfDayLeft);\n  const timestampRight =\n    +startOfDayRight - getTimezoneOffsetInMilliseconds(startOfDayRight);\n\n  // Round the number of days to the nearest integer because the number of\n  // milliseconds in a day is not constant (e.g. it's different in the week of\n  // the daylight saving time clock shift).\n  return Math.round((timestampLeft - timestampRight) / millisecondsInDay);\n}\n\n// Fallback for modularized imports:\nexport default differenceInCalendarDays;\n","import { getISOWeekYear } from \"./getISOWeekYear.mjs\";\nimport { startOfISOWeek } from \"./startOfISOWeek.mjs\";\nimport { constructFrom } from \"./constructFrom.mjs\";\n\n/**\n * @name startOfISOWeekYear\n * @category ISO Week-Numbering Year Helpers\n * @summary Return the start of an ISO week-numbering year for the given date.\n *\n * @description\n * Return the start of an ISO week-numbering year,\n * which always starts 3 days before the year's first Thursday.\n * The result will be in the local timezone.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The original date\n *\n * @returns The start of an ISO week-numbering year\n *\n * @example\n * // The start of an ISO week-numbering year for 2 July 2005:\n * const result = startOfISOWeekYear(new Date(2005, 6, 2))\n * //=> Mon Jan 03 2005 00:00:00\n */\nexport function startOfISOWeekYear(date) {\n  const year = getISOWeekYear(date);\n  const fourthOfJanuary = constructFrom(date, 0);\n  fourthOfJanuary.setFullYear(year, 0, 4);\n  fourthOfJanuary.setHours(0, 0, 0, 0);\n  return startOfISOWeek(fourthOfJanuary);\n}\n\n// Fallback for modularized imports:\nexport default startOfISOWeekYear;\n","/**\n * @name isDate\n * @category Common Helpers\n * @summary Is the given value a date?\n *\n * @description\n * Returns true if the given value is an instance of Date. The function works for dates transferred across iframes.\n *\n * @param value - The value to check\n *\n * @returns True if the given value is a date\n *\n * @example\n * // For a valid date:\n * const result = isDate(new Date())\n * //=> true\n *\n * @example\n * // For an invalid date:\n * const result = isDate(new Date(NaN))\n * //=> true\n *\n * @example\n * // For some value:\n * const result = isDate('2014-02-31')\n * //=> false\n *\n * @example\n * // For an object:\n * const result = isDate({})\n * //=> false\n */\nexport function isDate(value) {\n  return (\n    value instanceof Date ||\n    (typeof value === \"object\" &&\n      Object.prototype.toString.call(value) === \"[object Date]\")\n  );\n}\n\n// Fallback for modularized imports:\nexport default isDate;\n","import { isDate } from \"./isDate.mjs\";\nimport { toDate } from \"./toDate.mjs\";\n\n/**\n * @name isValid\n * @category Common Helpers\n * @summary Is the given date valid?\n *\n * @description\n * Returns false if argument is Invalid Date and true otherwise.\n * Argument is converted to Date using `toDate`. See [toDate](https://date-fns.org/docs/toDate)\n * Invalid Date is a Date, whose time value is NaN.\n *\n * Time value of Date: http://es5.github.io/#x15.9.1.1\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The date to check\n *\n * @returns The date is valid\n *\n * @example\n * // For the valid date:\n * const result = isValid(new Date(2014, 1, 31))\n * //=> true\n *\n * @example\n * // For the value, convertable into a date:\n * const result = isValid(1393804800000)\n * //=> true\n *\n * @example\n * // For the invalid date:\n * const result = isValid(new Date(''))\n * //=> false\n */\nexport function isValid(date) {\n  if (!isDate(date) && typeof date !== \"number\") {\n    return false;\n  }\n  const _date = toDate(date);\n  return !isNaN(Number(_date));\n}\n\n// Fallback for modularized imports:\nexport default isValid;\n","import { toDate } from \"./toDate.mjs\";\nimport { constructFrom } from \"./constructFrom.mjs\";\n\n/**\n * @name startOfYear\n * @category Year Helpers\n * @summary Return the start of a year for the given date.\n *\n * @description\n * Return the start of a year for the given date.\n * The result will be in the local timezone.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The original date\n *\n * @returns The start of a year\n *\n * @example\n * // The start of a year for 2 September 2014 11:55:00:\n * const result = startOfYear(new Date(2014, 8, 2, 11, 55, 00))\n * //=> Wed Jan 01 2014 00:00:00\n */\nexport function startOfYear(date) {\n  const cleanDate = toDate(date);\n  const _date = constructFrom(date, 0);\n  _date.setFullYear(cleanDate.getFullYear(), 0, 1);\n  _date.setHours(0, 0, 0, 0);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default startOfYear;\n","const formatDistanceLocale = {\n  lessThanXSeconds: {\n    one: \"less than a second\",\n    other: \"less than {{count}} seconds\",\n  },\n\n  xSeconds: {\n    one: \"1 second\",\n    other: \"{{count}} seconds\",\n  },\n\n  halfAMinute: \"half a minute\",\n\n  lessThanXMinutes: {\n    one: \"less than a minute\",\n    other: \"less than {{count}} minutes\",\n  },\n\n  xMinutes: {\n    one: \"1 minute\",\n    other: \"{{count}} minutes\",\n  },\n\n  aboutXHours: {\n    one: \"about 1 hour\",\n    other: \"about {{count}} hours\",\n  },\n\n  xHours: {\n    one: \"1 hour\",\n    other: \"{{count}} hours\",\n  },\n\n  xDays: {\n    one: \"1 day\",\n    other: \"{{count}} days\",\n  },\n\n  aboutXWeeks: {\n    one: \"about 1 week\",\n    other: \"about {{count}} weeks\",\n  },\n\n  xWeeks: {\n    one: \"1 week\",\n    other: \"{{count}} weeks\",\n  },\n\n  aboutXMonths: {\n    one: \"about 1 month\",\n    other: \"about {{count}} months\",\n  },\n\n  xMonths: {\n    one: \"1 month\",\n    other: \"{{count}} months\",\n  },\n\n  aboutXYears: {\n    one: \"about 1 year\",\n    other: \"about {{count}} years\",\n  },\n\n  xYears: {\n    one: \"1 year\",\n    other: \"{{count}} years\",\n  },\n\n  overXYears: {\n    one: \"over 1 year\",\n    other: \"over {{count}} years\",\n  },\n\n  almostXYears: {\n    one: \"almost 1 year\",\n    other: \"almost {{count}} years\",\n  },\n};\n\nexport const formatDistance = (token, count, options) => {\n  let result;\n\n  const tokenValue = formatDistanceLocale[token];\n  if (typeof tokenValue === \"string\") {\n    result = tokenValue;\n  } else if (count === 1) {\n    result = tokenValue.one;\n  } else {\n    result = tokenValue.other.replace(\"{{count}}\", count.toString());\n  }\n\n  if (options?.addSuffix) {\n    if (options.comparison && options.comparison > 0) {\n      return \"in \" + result;\n    } else {\n      return result + \" ago\";\n    }\n  }\n\n  return result;\n};\n","export function buildFormatLongFn(args) {\n  return (options = {}) => {\n    // TODO: Remove String()\n    const width = options.width ? String(options.width) : args.defaultWidth;\n    const format = args.formats[width] || args.formats[args.defaultWidth];\n    return format;\n  };\n}\n","import { buildFormatLongFn } from \"../../_lib/buildFormatLongFn.mjs\";\n\nconst dateFormats = {\n  full: \"EEEE, MMMM do, y\",\n  long: \"MMMM do, y\",\n  medium: \"MMM d, y\",\n  short: \"MM/dd/yyyy\",\n};\n\nconst timeFormats = {\n  full: \"h:mm:ss a zzzz\",\n  long: \"h:mm:ss a z\",\n  medium: \"h:mm:ss a\",\n  short: \"h:mm a\",\n};\n\nconst dateTimeFormats = {\n  full: \"{{date}} 'at' {{time}}\",\n  long: \"{{date}} 'at' {{time}}\",\n  medium: \"{{date}}, {{time}}\",\n  short: \"{{date}}, {{time}}\",\n};\n\nexport const formatLong = {\n  date: buildFormatLongFn({\n    formats: dateFormats,\n    defaultWidth: \"full\",\n  }),\n\n  time: buildFormatLongFn({\n    formats: timeFormats,\n    defaultWidth: \"full\",\n  }),\n\n  dateTime: buildFormatLongFn({\n    formats: dateTimeFormats,\n    defaultWidth: \"full\",\n  }),\n};\n","const formatRelativeLocale = {\n  lastWeek: \"'last' eeee 'at' p\",\n  yesterday: \"'yesterday at' p\",\n  today: \"'today at' p\",\n  tomorrow: \"'tomorrow at' p\",\n  nextWeek: \"eeee 'at' p\",\n  other: \"P\",\n};\n\nexport const formatRelative = (token, _date, _baseDate, _options) =>\n  formatRelativeLocale[token];\n","/* eslint-disable no-unused-vars */\n\n/**\n * The localize function argument callback which allows to convert raw value to\n * the actual type.\n *\n * @param value - The value to convert\n *\n * @returns The converted value\n */\n\n/**\n * The map of localized values for each width.\n */\n\n/**\n * The index type of the locale unit value. It types conversion of units of\n * values that don't start at 0 (i.e. quarters).\n */\n\n/**\n * Converts the unit value to the tuple of values.\n */\n\n/**\n * The tuple of localized era values. The first element represents BC,\n * the second element represents AD.\n */\n\n/**\n * The tuple of localized quarter values. The first element represents Q1.\n */\n\n/**\n * The tuple of localized day values. The first element represents Sunday.\n */\n\n/**\n * The tuple of localized month values. The first element represents January.\n */\n\nexport function buildLocalizeFn(args) {\n  return (value, options) => {\n    const context = options?.context ? String(options.context) : \"standalone\";\n\n    let valuesArray;\n    if (context === \"formatting\" && args.formattingValues) {\n      const defaultWidth = args.defaultFormattingWidth || args.defaultWidth;\n      const width = options?.width ? String(options.width) : defaultWidth;\n\n      valuesArray =\n        args.formattingValues[width] || args.formattingValues[defaultWidth];\n    } else {\n      const defaultWidth = args.defaultWidth;\n      const width = options?.width ? String(options.width) : args.defaultWidth;\n\n      valuesArray = args.values[width] || args.values[defaultWidth];\n    }\n    const index = args.argumentCallback ? args.argumentCallback(value) : value;\n\n    // @ts-expect-error - For some reason TypeScript just don't want to match it, no matter how hard we try. I challenge you to try to remove it!\n    return valuesArray[index];\n  };\n}\n","import { buildLocalizeFn } from \"../../_lib/buildLocalizeFn.mjs\";\n\nconst eraValues = {\n  narrow: [\"B\", \"A\"],\n  abbreviated: [\"BC\", \"AD\"],\n  wide: [\"Before Christ\", \"Anno Domini\"],\n};\n\nconst quarterValues = {\n  narrow: [\"1\", \"2\", \"3\", \"4\"],\n  abbreviated: [\"Q1\", \"Q2\", \"Q3\", \"Q4\"],\n  wide: [\"1st quarter\", \"2nd quarter\", \"3rd quarter\", \"4th quarter\"],\n};\n\n// Note: in English, the names of days of the week and months are capitalized.\n// If you are making a new locale based on this one, check if the same is true for the language you're working on.\n// Generally, formatted dates should look like they are in the middle of a sentence,\n// e.g. in Spanish language the weekdays and months should be in the lowercase.\nconst monthValues = {\n  narrow: [\"J\", \"F\", \"M\", \"A\", \"M\", \"J\", \"J\", \"A\", \"S\", \"O\", \"N\", \"D\"],\n  abbreviated: [\n    \"Jan\",\n    \"Feb\",\n    \"Mar\",\n    \"Apr\",\n    \"May\",\n    \"Jun\",\n    \"Jul\",\n    \"Aug\",\n    \"Sep\",\n    \"Oct\",\n    \"Nov\",\n    \"Dec\",\n  ],\n\n  wide: [\n    \"January\",\n    \"February\",\n    \"March\",\n    \"April\",\n    \"May\",\n    \"June\",\n    \"July\",\n    \"August\",\n    \"September\",\n    \"October\",\n    \"November\",\n    \"December\",\n  ],\n};\n\nconst dayValues = {\n  narrow: [\"S\", \"M\", \"T\", \"W\", \"T\", \"F\", \"S\"],\n  short: [\"Su\", \"Mo\", \"Tu\", \"We\", \"Th\", \"Fr\", \"Sa\"],\n  abbreviated: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n  wide: [\n    \"Sunday\",\n    \"Monday\",\n    \"Tuesday\",\n    \"Wednesday\",\n    \"Thursday\",\n    \"Friday\",\n    \"Saturday\",\n  ],\n};\n\nconst dayPeriodValues = {\n  narrow: {\n    am: \"a\",\n    pm: \"p\",\n    midnight: \"mi\",\n    noon: \"n\",\n    morning: \"morning\",\n    afternoon: \"afternoon\",\n    evening: \"evening\",\n    night: \"night\",\n  },\n  abbreviated: {\n    am: \"AM\",\n    pm: \"PM\",\n    midnight: \"midnight\",\n    noon: \"noon\",\n    morning: \"morning\",\n    afternoon: \"afternoon\",\n    evening: \"evening\",\n    night: \"night\",\n  },\n  wide: {\n    am: \"a.m.\",\n    pm: \"p.m.\",\n    midnight: \"midnight\",\n    noon: \"noon\",\n    morning: \"morning\",\n    afternoon: \"afternoon\",\n    evening: \"evening\",\n    night: \"night\",\n  },\n};\n\nconst formattingDayPeriodValues = {\n  narrow: {\n    am: \"a\",\n    pm: \"p\",\n    midnight: \"mi\",\n    noon: \"n\",\n    morning: \"in the morning\",\n    afternoon: \"in the afternoon\",\n    evening: \"in the evening\",\n    night: \"at night\",\n  },\n  abbreviated: {\n    am: \"AM\",\n    pm: \"PM\",\n    midnight: \"midnight\",\n    noon: \"noon\",\n    morning: \"in the morning\",\n    afternoon: \"in the afternoon\",\n    evening: \"in the evening\",\n    night: \"at night\",\n  },\n  wide: {\n    am: \"a.m.\",\n    pm: \"p.m.\",\n    midnight: \"midnight\",\n    noon: \"noon\",\n    morning: \"in the morning\",\n    afternoon: \"in the afternoon\",\n    evening: \"in the evening\",\n    night: \"at night\",\n  },\n};\n\nconst ordinalNumber = (dirtyNumber, _options) => {\n  const number = Number(dirtyNumber);\n\n  // If ordinal numbers depend on context, for example,\n  // if they are different for different grammatical genders,\n  // use `options.unit`.\n  //\n  // `unit` can be 'year', 'quarter', 'month', 'week', 'date', 'dayOfYear',\n  // 'day', 'hour', 'minute', 'second'.\n\n  const rem100 = number % 100;\n  if (rem100 > 20 || rem100 < 10) {\n    switch (rem100 % 10) {\n      case 1:\n        return number + \"st\";\n      case 2:\n        return number + \"nd\";\n      case 3:\n        return number + \"rd\";\n    }\n  }\n  return number + \"th\";\n};\n\nexport const localize = {\n  ordinalNumber,\n\n  era: buildLocalizeFn({\n    values: eraValues,\n    defaultWidth: \"wide\",\n  }),\n\n  quarter: buildLocalizeFn({\n    values: quarterValues,\n    defaultWidth: \"wide\",\n    argumentCallback: (quarter) => quarter - 1,\n  }),\n\n  month: buildLocalizeFn({\n    values: monthValues,\n    defaultWidth: \"wide\",\n  }),\n\n  day: buildLocalizeFn({\n    values: dayValues,\n    defaultWidth: \"wide\",\n  }),\n\n  dayPeriod: buildLocalizeFn({\n    values: dayPeriodValues,\n    defaultWidth: \"wide\",\n    formattingValues: formattingDayPeriodValues,\n    defaultFormattingWidth: \"wide\",\n  }),\n};\n","export function buildMatchFn(args) {\n  return (string, options = {}) => {\n    const width = options.width;\n\n    const matchPattern =\n      (width && args.matchPatterns[width]) ||\n      args.matchPatterns[args.defaultMatchWidth];\n    const matchResult = string.match(matchPattern);\n\n    if (!matchResult) {\n      return null;\n    }\n    const matchedString = matchResult[0];\n\n    const parsePatterns =\n      (width && args.parsePatterns[width]) ||\n      args.parsePatterns[args.defaultParseWidth];\n\n    const key = Array.isArray(parsePatterns)\n      ? findIndex(parsePatterns, (pattern) => pattern.test(matchedString))\n      : // eslint-disable-next-line @typescript-eslint/no-explicit-any -- I challange you to fix the type\n        findKey(parsePatterns, (pattern) => pattern.test(matchedString));\n\n    let value;\n\n    value = args.valueCallback ? args.valueCallback(key) : key;\n    value = options.valueCallback\n      ? // eslint-disable-next-line @typescript-eslint/no-explicit-any -- I challange you to fix the type\n        options.valueCallback(value)\n      : value;\n\n    const rest = string.slice(matchedString.length);\n\n    return { value, rest };\n  };\n}\n\nfunction findKey(object, predicate) {\n  for (const key in object) {\n    if (\n      Object.prototype.hasOwnProperty.call(object, key) &&\n      predicate(object[key])\n    ) {\n      return key;\n    }\n  }\n  return undefined;\n}\n\nfunction findIndex(array, predicate) {\n  for (let key = 0; key < array.length; key++) {\n    if (predicate(array[key])) {\n      return key;\n    }\n  }\n  return undefined;\n}\n","export function buildMatchPatternFn(args) {\n  return (string, options = {}) => {\n    const matchResult = string.match(args.matchPattern);\n    if (!matchResult) return null;\n    const matchedString = matchResult[0];\n\n    const parseResult = string.match(args.parsePattern);\n    if (!parseResult) return null;\n    let value = args.valueCallback\n      ? args.valueCallback(parseResult[0])\n      : parseResult[0];\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any -- I challange you to fix the type\n    value = options.valueCallback ? options.valueCallback(value) : value;\n\n    const rest = string.slice(matchedString.length);\n\n    return { value, rest };\n  };\n}\n","import { buildMatchFn } from \"../../_lib/buildMatchFn.mjs\";\nimport { buildMatchPatternFn } from \"../../_lib/buildMatchPatternFn.mjs\";\n\nconst matchOrdinalNumberPattern = /^(\\d+)(th|st|nd|rd)?/i;\nconst parseOrdinalNumberPattern = /\\d+/i;\n\nconst matchEraPatterns = {\n  narrow: /^(b|a)/i,\n  abbreviated: /^(b\\.?\\s?c\\.?|b\\.?\\s?c\\.?\\s?e\\.?|a\\.?\\s?d\\.?|c\\.?\\s?e\\.?)/i,\n  wide: /^(before christ|before common era|anno domini|common era)/i,\n};\nconst parseEraPatterns = {\n  any: [/^b/i, /^(a|c)/i],\n};\n\nconst matchQuarterPatterns = {\n  narrow: /^[1234]/i,\n  abbreviated: /^q[1234]/i,\n  wide: /^[1234](th|st|nd|rd)? quarter/i,\n};\nconst parseQuarterPatterns = {\n  any: [/1/i, /2/i, /3/i, /4/i],\n};\n\nconst matchMonthPatterns = {\n  narrow: /^[jfmasond]/i,\n  abbreviated: /^(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)/i,\n  wide: /^(january|february|march|april|may|june|july|august|september|october|november|december)/i,\n};\nconst parseMonthPatterns = {\n  narrow: [\n    /^j/i,\n    /^f/i,\n    /^m/i,\n    /^a/i,\n    /^m/i,\n    /^j/i,\n    /^j/i,\n    /^a/i,\n    /^s/i,\n    /^o/i,\n    /^n/i,\n    /^d/i,\n  ],\n\n  any: [\n    /^ja/i,\n    /^f/i,\n    /^mar/i,\n    /^ap/i,\n    /^may/i,\n    /^jun/i,\n    /^jul/i,\n    /^au/i,\n    /^s/i,\n    /^o/i,\n    /^n/i,\n    /^d/i,\n  ],\n};\n\nconst matchDayPatterns = {\n  narrow: /^[smtwf]/i,\n  short: /^(su|mo|tu|we|th|fr|sa)/i,\n  abbreviated: /^(sun|mon|tue|wed|thu|fri|sat)/i,\n  wide: /^(sunday|monday|tuesday|wednesday|thursday|friday|saturday)/i,\n};\nconst parseDayPatterns = {\n  narrow: [/^s/i, /^m/i, /^t/i, /^w/i, /^t/i, /^f/i, /^s/i],\n  any: [/^su/i, /^m/i, /^tu/i, /^w/i, /^th/i, /^f/i, /^sa/i],\n};\n\nconst matchDayPeriodPatterns = {\n  narrow: /^(a|p|mi|n|(in the|at) (morning|afternoon|evening|night))/i,\n  any: /^([ap]\\.?\\s?m\\.?|midnight|noon|(in the|at) (morning|afternoon|evening|night))/i,\n};\nconst parseDayPeriodPatterns = {\n  any: {\n    am: /^a/i,\n    pm: /^p/i,\n    midnight: /^mi/i,\n    noon: /^no/i,\n    morning: /morning/i,\n    afternoon: /afternoon/i,\n    evening: /evening/i,\n    night: /night/i,\n  },\n};\n\nexport const match = {\n  ordinalNumber: buildMatchPatternFn({\n    matchPattern: matchOrdinalNumberPattern,\n    parsePattern: parseOrdinalNumberPattern,\n    valueCallback: (value) => parseInt(value, 10),\n  }),\n\n  era: buildMatchFn({\n    matchPatterns: matchEraPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseEraPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  quarter: buildMatchFn({\n    matchPatterns: matchQuarterPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseQuarterPatterns,\n    defaultParseWidth: \"any\",\n    valueCallback: (index) => index + 1,\n  }),\n\n  month: buildMatchFn({\n    matchPatterns: matchMonthPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseMonthPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  day: buildMatchFn({\n    matchPatterns: matchDayPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseDayPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  dayPeriod: buildMatchFn({\n    matchPatterns: matchDayPeriodPatterns,\n    defaultMatchWidth: \"any\",\n    parsePatterns: parseDayPeriodPatterns,\n    defaultParseWidth: \"any\",\n  }),\n};\n","import { formatDistance } from \"./en-US/_lib/formatDistance.mjs\";\nimport { formatLong } from \"./en-US/_lib/formatLong.mjs\";\nimport { formatRelative } from \"./en-US/_lib/formatRelative.mjs\";\nimport { localize } from \"./en-US/_lib/localize.mjs\";\nimport { match } from \"./en-US/_lib/match.mjs\";\n\n/**\n * @category Locales\n * @summary English locale (United States).\n * @language English\n * @iso-639-2 eng\n * @author Sasha Koss [@kossnocorp](https://github.com/kossnocorp)\n * @author Lesha Koss [@leshakoss](https://github.com/leshakoss)\n */\nexport const enUS = {\n  code: \"en-US\",\n  formatDistance: formatDistance,\n  formatLong: formatLong,\n  formatRelative: formatRelative,\n  localize: localize,\n  match: match,\n  options: {\n    weekStartsOn: 0 /* Sunday */,\n    firstWeekContainsDate: 1,\n  },\n};\n\n// Fallback for modularized imports:\nexport default enUS;\n","import { differenceInCalendarDays } from \"./differenceInCalendarDays.mjs\";\nimport { startOfYear } from \"./startOfYear.mjs\";\nimport { toDate } from \"./toDate.mjs\";\n\n/**\n * @name getDayOfYear\n * @category Day Helpers\n * @summary Get the day of the year of the given date.\n *\n * @description\n * Get the day of the year of the given date.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The given date\n *\n * @returns The day of year\n *\n * @example\n * // Which day of the year is 2 July 2014?\n * const result = getDayOfYear(new Date(2014, 6, 2))\n * //=> 183\n */\nexport function getDayOfYear(date) {\n  const _date = toDate(date);\n  const diff = differenceInCalendarDays(_date, startOfYear(_date));\n  const dayOfYear = diff + 1;\n  return dayOfYear;\n}\n\n// Fallback for modularized imports:\nexport default getDayOfYear;\n","import { millisecondsInWeek } from \"./constants.mjs\";\nimport { startOfISOWeek } from \"./startOfISOWeek.mjs\";\nimport { startOfISOWeekYear } from \"./startOfISOWeekYear.mjs\";\nimport { toDate } from \"./toDate.mjs\";\n\n/**\n * @name getISOWeek\n * @category ISO Week Helpers\n * @summary Get the ISO week of the given date.\n *\n * @description\n * Get the ISO week of the given date.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The given date\n *\n * @returns The ISO week\n *\n * @example\n * // Which week of the ISO-week numbering year is 2 January 2005?\n * const result = getISOWeek(new Date(2005, 0, 2))\n * //=> 53\n */\nexport function getISOWeek(date) {\n  const _date = toDate(date);\n  const diff = +startOfISOWeek(_date) - +startOfISOWeekYear(_date);\n\n  // Round the number of weeks to the nearest integer because the number of\n  // milliseconds in a week is not constant (e.g. it's different in the week of\n  // the daylight saving time clock shift).\n  return Math.round(diff / millisecondsInWeek) + 1;\n}\n\n// Fallback for modularized imports:\nexport default getISOWeek;\n","import { constructFrom } from \"./constructFrom.mjs\";\nimport { startOfWeek } from \"./startOfWeek.mjs\";\nimport { toDate } from \"./toDate.mjs\";\nimport { getDefaultOptions } from \"./_lib/defaultOptions.mjs\";\n\n/**\n * The {@link getWeekYear} function options.\n */\n\n/**\n * @name getWeekYear\n * @category Week-Numbering Year Helpers\n * @summary Get the local week-numbering year of the given date.\n *\n * @description\n * Get the local week-numbering year of the given date.\n * The exact calculation depends on the values of\n * `options.weekStartsOn` (which is the index of the first day of the week)\n * and `options.firstWeekContainsDate` (which is the day of January, which is always in\n * the first week of the week-numbering year)\n *\n * Week numbering: https://en.wikipedia.org/wiki/Week#The_ISO_week_date_system\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The given date\n * @param options - An object with options.\n *\n * @returns The local week-numbering year\n *\n * @example\n * // Which week numbering year is 26 December 2004 with the default settings?\n * const result = getWeekYear(new Date(2004, 11, 26))\n * //=> 2005\n *\n * @example\n * // Which week numbering year is 26 December 2004 if week starts on Saturday?\n * const result = getWeekYear(new Date(2004, 11, 26), { weekStartsOn: 6 })\n * //=> 2004\n *\n * @example\n * // Which week numbering year is 26 December 2004 if the first week contains 4 January?\n * const result = getWeekYear(new Date(2004, 11, 26), { firstWeekContainsDate: 4 })\n * //=> 2004\n */\nexport function getWeekYear(date, options) {\n  const _date = toDate(date);\n  const year = _date.getFullYear();\n\n  const defaultOptions = getDefaultOptions();\n  const firstWeekContainsDate =\n    options?.firstWeekContainsDate ??\n    options?.locale?.options?.firstWeekContainsDate ??\n    defaultOptions.firstWeekContainsDate ??\n    defaultOptions.locale?.options?.firstWeekContainsDate ??\n    1;\n\n  const firstWeekOfNextYear = constructFrom(date, 0);\n  firstWeekOfNextYear.setFullYear(year + 1, 0, firstWeekContainsDate);\n  firstWeekOfNextYear.setHours(0, 0, 0, 0);\n  const startOfNextYear = startOfWeek(firstWeekOfNextYear, options);\n\n  const firstWeekOfThisYear = constructFrom(date, 0);\n  firstWeekOfThisYear.setFullYear(year, 0, firstWeekContainsDate);\n  firstWeekOfThisYear.setHours(0, 0, 0, 0);\n  const startOfThisYear = startOfWeek(firstWeekOfThisYear, options);\n\n  if (_date.getTime() >= startOfNextYear.getTime()) {\n    return year + 1;\n  } else if (_date.getTime() >= startOfThisYear.getTime()) {\n    return year;\n  } else {\n    return year - 1;\n  }\n}\n\n// Fallback for modularized imports:\nexport default getWeekYear;\n","import { constructFrom } from \"./constructFrom.mjs\";\nimport { getWeekYear } from \"./getWeekYear.mjs\";\nimport { startOfWeek } from \"./startOfWeek.mjs\";\nimport { getDefaultOptions } from \"./_lib/defaultOptions.mjs\";\n\n/**\n * The {@link startOfWeekYear} function options.\n */\n\n/**\n * @name startOfWeekYear\n * @category Week-Numbering Year Helpers\n * @summary Return the start of a local week-numbering year for the given date.\n *\n * @description\n * Return the start of a local week-numbering year.\n * The exact calculation depends on the values of\n * `options.weekStartsOn` (which is the index of the first day of the week)\n * and `options.firstWeekContainsDate` (which is the day of January, which is always in\n * the first week of the week-numbering year)\n *\n * Week numbering: https://en.wikipedia.org/wiki/Week#The_ISO_week_date_system\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The original date\n * @param options - An object with options\n *\n * @returns The start of a week-numbering year\n *\n * @example\n * // The start of an a week-numbering year for 2 July 2005 with default settings:\n * const result = startOfWeekYear(new Date(2005, 6, 2))\n * //=> Sun Dec 26 2004 00:00:00\n *\n * @example\n * // The start of a week-numbering year for 2 July 2005\n * // if Monday is the first day of week\n * // and 4 January is always in the first week of the year:\n * const result = startOfWeekYear(new Date(2005, 6, 2), {\n *   weekStartsOn: 1,\n *   firstWeekContainsDate: 4\n * })\n * //=> Mon Jan 03 2005 00:00:00\n */\nexport function startOfWeekYear(date, options) {\n  const defaultOptions = getDefaultOptions();\n  const firstWeekContainsDate =\n    options?.firstWeekContainsDate ??\n    options?.locale?.options?.firstWeekContainsDate ??\n    defaultOptions.firstWeekContainsDate ??\n    defaultOptions.locale?.options?.firstWeekContainsDate ??\n    1;\n\n  const year = getWeekYear(date, options);\n  const firstWeek = constructFrom(date, 0);\n  firstWeek.setFullYear(year, 0, firstWeekContainsDate);\n  firstWeek.setHours(0, 0, 0, 0);\n  const _date = startOfWeek(firstWeek, options);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default startOfWeekYear;\n","import { millisecondsInWeek } from \"./constants.mjs\";\nimport { startOfWeek } from \"./startOfWeek.mjs\";\nimport { startOfWeekYear } from \"./startOfWeekYear.mjs\";\nimport { toDate } from \"./toDate.mjs\";\n\n/**\n * The {@link getWeek} function options.\n */\n\n/**\n * @name getWeek\n * @category Week Helpers\n * @summary Get the local week index of the given date.\n *\n * @description\n * Get the local week index of the given date.\n * The exact calculation depends on the values of\n * `options.weekStartsOn` (which is the index of the first day of the week)\n * and `options.firstWeekContainsDate` (which is the day of January, which is always in\n * the first week of the week-numbering year)\n *\n * Week numbering: https://en.wikipedia.org/wiki/Week#The_ISO_week_date_system\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The given date\n * @param options - An object with options\n *\n * @returns The week\n *\n * @example\n * // Which week of the local week numbering year is 2 January 2005 with default options?\n * const result = getWeek(new Date(2005, 0, 2))\n * //=> 2\n *\n * @example\n * // Which week of the local week numbering year is 2 January 2005,\n * // if Monday is the first day of the week,\n * // and the first week of the year always contains 4 January?\n * const result = getWeek(new Date(2005, 0, 2), {\n *   weekStartsOn: 1,\n *   firstWeekContainsDate: 4\n * })\n * //=> 53\n */\n\nexport function getWeek(date, options) {\n  const _date = toDate(date);\n  const diff = +startOfWeek(_date, options) - +startOfWeekYear(_date, options);\n\n  // Round the number of weeks to the nearest integer because the number of\n  // milliseconds in a week is not constant (e.g. it's different in the week of\n  // the daylight saving time clock shift).\n  return Math.round(diff / millisecondsInWeek) + 1;\n}\n\n// Fallback for modularized imports:\nexport default getWeek;\n","export function addLeadingZeros(number, targetLength) {\n  const sign = number < 0 ? \"-\" : \"\";\n  const output = Math.abs(number).toString().padStart(targetLength, \"0\");\n  return sign + output;\n}\n","import { addLeadingZeros } from \"../addLeadingZeros.mjs\";\n\n/*\n * |     | Unit                           |     | Unit                           |\n * |-----|--------------------------------|-----|--------------------------------|\n * |  a  | AM, PM                         |  A* |                                |\n * |  d  | Day of month                   |  D  |                                |\n * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |\n * |  m  | Minute                         |  M  | Month                          |\n * |  s  | Second                         |  S  | Fraction of second             |\n * |  y  | Year (abs)                     |  Y  |                                |\n *\n * Letters marked by * are not implemented but reserved by Unicode standard.\n */\n\nexport const lightFormatters = {\n  // Year\n  y(date, token) {\n    // From http://www.unicode.org/reports/tr35/tr35-31/tr35-dates.html#Date_Format_tokens\n    // | Year     |     y | yy |   yyy |  yyyy | yyyyy |\n    // |----------|-------|----|-------|-------|-------|\n    // | AD 1     |     1 | 01 |   001 |  0001 | 00001 |\n    // | AD 12    |    12 | 12 |   012 |  0012 | 00012 |\n    // | AD 123   |   123 | 23 |   123 |  0123 | 00123 |\n    // | AD 1234  |  1234 | 34 |  1234 |  1234 | 01234 |\n    // | AD 12345 | 12345 | 45 | 12345 | 12345 | 12345 |\n\n    const signedYear = date.getFullYear();\n    // Returns 1 for 1 BC (which is year 0 in JavaScript)\n    const year = signedYear > 0 ? signedYear : 1 - signedYear;\n    return addLeadingZeros(token === \"yy\" ? year % 100 : year, token.length);\n  },\n\n  // Month\n  M(date, token) {\n    const month = date.getMonth();\n    return token === \"M\" ? String(month + 1) : addLeadingZeros(month + 1, 2);\n  },\n\n  // Day of the month\n  d(date, token) {\n    return addLeadingZeros(date.getDate(), token.length);\n  },\n\n  // AM or PM\n  a(date, token) {\n    const dayPeriodEnumValue = date.getHours() / 12 >= 1 ? \"pm\" : \"am\";\n\n    switch (token) {\n      case \"a\":\n      case \"aa\":\n        return dayPeriodEnumValue.toUpperCase();\n      case \"aaa\":\n        return dayPeriodEnumValue;\n      case \"aaaaa\":\n        return dayPeriodEnumValue[0];\n      case \"aaaa\":\n      default:\n        return dayPeriodEnumValue === \"am\" ? \"a.m.\" : \"p.m.\";\n    }\n  },\n\n  // Hour [1-12]\n  h(date, token) {\n    return addLeadingZeros(date.getHours() % 12 || 12, token.length);\n  },\n\n  // Hour [0-23]\n  H(date, token) {\n    return addLeadingZeros(date.getHours(), token.length);\n  },\n\n  // Minute\n  m(date, token) {\n    return addLeadingZeros(date.getMinutes(), token.length);\n  },\n\n  // Second\n  s(date, token) {\n    return addLeadingZeros(date.getSeconds(), token.length);\n  },\n\n  // Fraction of second\n  S(date, token) {\n    const numberOfDigits = token.length;\n    const milliseconds = date.getMilliseconds();\n    const fractionalSeconds = Math.trunc(\n      milliseconds * Math.pow(10, numberOfDigits - 3),\n    );\n    return addLeadingZeros(fractionalSeconds, token.length);\n  },\n};\n","import { getDayOfYear } from \"../../getDayOfYear.mjs\";\nimport { getISOWeek } from \"../../getISOWeek.mjs\";\nimport { getISOWeekYear } from \"../../getISOWeekYear.mjs\";\nimport { getWeek } from \"../../getWeek.mjs\";\nimport { getWeekYear } from \"../../getWeekYear.mjs\";\nimport { addLeadingZeros } from \"../addLeadingZeros.mjs\";\nimport { lightFormatters } from \"./lightFormatters.mjs\";\n\nconst dayPeriodEnum = {\n  am: \"am\",\n  pm: \"pm\",\n  midnight: \"midnight\",\n  noon: \"noon\",\n  morning: \"morning\",\n  afternoon: \"afternoon\",\n  evening: \"evening\",\n  night: \"night\",\n};\n\n/*\n * |     | Unit                           |     | Unit                           |\n * |-----|--------------------------------|-----|--------------------------------|\n * |  a  | AM, PM                         |  A* | Milliseconds in day            |\n * |  b  | AM, PM, noon, midnight         |  B  | Flexible day period            |\n * |  c  | Stand-alone local day of week  |  C* | Localized hour w/ day period   |\n * |  d  | Day of month                   |  D  | Day of year                    |\n * |  e  | Local day of week              |  E  | Day of week                    |\n * |  f  |                                |  F* | Day of week in month           |\n * |  g* | Modified Julian day            |  G  | Era                            |\n * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |\n * |  i! | ISO day of week                |  I! | ISO week of year               |\n * |  j* | Localized hour w/ day period   |  J* | Localized hour w/o day period  |\n * |  k  | Hour [1-24]                    |  K  | Hour [0-11]                    |\n * |  l* | (deprecated)                   |  L  | Stand-alone month              |\n * |  m  | Minute                         |  M  | Month                          |\n * |  n  |                                |  N  |                                |\n * |  o! | Ordinal number modifier        |  O  | Timezone (GMT)                 |\n * |  p! | Long localized time            |  P! | Long localized date            |\n * |  q  | Stand-alone quarter            |  Q  | Quarter                        |\n * |  r* | Related Gregorian year         |  R! | ISO week-numbering year        |\n * |  s  | Second                         |  S  | Fraction of second             |\n * |  t! | Seconds timestamp              |  T! | Milliseconds timestamp         |\n * |  u  | Extended year                  |  U* | Cyclic year                    |\n * |  v* | Timezone (generic non-locat.)  |  V* | Timezone (location)            |\n * |  w  | Local week of year             |  W* | Week of month                  |\n * |  x  | Timezone (ISO-8601 w/o Z)      |  X  | Timezone (ISO-8601)            |\n * |  y  | Year (abs)                     |  Y  | Local week-numbering year      |\n * |  z  | Timezone (specific non-locat.) |  Z* | Timezone (aliases)             |\n *\n * Letters marked by * are not implemented but reserved by Unicode standard.\n *\n * Letters marked by ! are non-standard, but implemented by date-fns:\n * - `o` modifies the previous token to turn it into an ordinal (see `format` docs)\n * - `i` is ISO day of week. For `i` and `ii` is returns numeric ISO week days,\n *   i.e. 7 for Sunday, 1 for Monday, etc.\n * - `I` is ISO week of year, as opposed to `w` which is local week of year.\n * - `R` is ISO week-numbering year, as opposed to `Y` which is local week-numbering year.\n *   `R` is supposed to be used in conjunction with `I` and `i`\n *   for universal ISO week-numbering date, whereas\n *   `Y` is supposed to be used in conjunction with `w` and `e`\n *   for week-numbering date specific to the locale.\n * - `P` is long localized date format\n * - `p` is long localized time format\n */\n\nexport const formatters = {\n  // Era\n  G: function (date, token, localize) {\n    const era = date.getFullYear() > 0 ? 1 : 0;\n    switch (token) {\n      // AD, BC\n      case \"G\":\n      case \"GG\":\n      case \"GGG\":\n        return localize.era(era, { width: \"abbreviated\" });\n      // A, B\n      case \"GGGGG\":\n        return localize.era(era, { width: \"narrow\" });\n      // Anno Domini, Before Christ\n      case \"GGGG\":\n      default:\n        return localize.era(era, { width: \"wide\" });\n    }\n  },\n\n  // Year\n  y: function (date, token, localize) {\n    // Ordinal number\n    if (token === \"yo\") {\n      const signedYear = date.getFullYear();\n      // Returns 1 for 1 BC (which is year 0 in JavaScript)\n      const year = signedYear > 0 ? signedYear : 1 - signedYear;\n      return localize.ordinalNumber(year, { unit: \"year\" });\n    }\n\n    return lightFormatters.y(date, token);\n  },\n\n  // Local week-numbering year\n  Y: function (date, token, localize, options) {\n    const signedWeekYear = getWeekYear(date, options);\n    // Returns 1 for 1 BC (which is year 0 in JavaScript)\n    const weekYear = signedWeekYear > 0 ? signedWeekYear : 1 - signedWeekYear;\n\n    // Two digit year\n    if (token === \"YY\") {\n      const twoDigitYear = weekYear % 100;\n      return addLeadingZeros(twoDigitYear, 2);\n    }\n\n    // Ordinal number\n    if (token === \"Yo\") {\n      return localize.ordinalNumber(weekYear, { unit: \"year\" });\n    }\n\n    // Padding\n    return addLeadingZeros(weekYear, token.length);\n  },\n\n  // ISO week-numbering year\n  R: function (date, token) {\n    const isoWeekYear = getISOWeekYear(date);\n\n    // Padding\n    return addLeadingZeros(isoWeekYear, token.length);\n  },\n\n  // Extended year. This is a single number designating the year of this calendar system.\n  // The main difference between `y` and `u` localizers are B.C. years:\n  // | Year | `y` | `u` |\n  // |------|-----|-----|\n  // | AC 1 |   1 |   1 |\n  // | BC 1 |   1 |   0 |\n  // | BC 2 |   2 |  -1 |\n  // Also `yy` always returns the last two digits of a year,\n  // while `uu` pads single digit years to 2 characters and returns other years unchanged.\n  u: function (date, token) {\n    const year = date.getFullYear();\n    return addLeadingZeros(year, token.length);\n  },\n\n  // Quarter\n  Q: function (date, token, localize) {\n    const quarter = Math.ceil((date.getMonth() + 1) / 3);\n    switch (token) {\n      // 1, 2, 3, 4\n      case \"Q\":\n        return String(quarter);\n      // 01, 02, 03, 04\n      case \"QQ\":\n        return addLeadingZeros(quarter, 2);\n      // 1st, 2nd, 3rd, 4th\n      case \"Qo\":\n        return localize.ordinalNumber(quarter, { unit: \"quarter\" });\n      // Q1, Q2, Q3, Q4\n      case \"QQQ\":\n        return localize.quarter(quarter, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n      case \"QQQQQ\":\n        return localize.quarter(quarter, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // 1st quarter, 2nd quarter, ...\n      case \"QQQQ\":\n      default:\n        return localize.quarter(quarter, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // Stand-alone quarter\n  q: function (date, token, localize) {\n    const quarter = Math.ceil((date.getMonth() + 1) / 3);\n    switch (token) {\n      // 1, 2, 3, 4\n      case \"q\":\n        return String(quarter);\n      // 01, 02, 03, 04\n      case \"qq\":\n        return addLeadingZeros(quarter, 2);\n      // 1st, 2nd, 3rd, 4th\n      case \"qo\":\n        return localize.ordinalNumber(quarter, { unit: \"quarter\" });\n      // Q1, Q2, Q3, Q4\n      case \"qqq\":\n        return localize.quarter(quarter, {\n          width: \"abbreviated\",\n          context: \"standalone\",\n        });\n      // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n      case \"qqqqq\":\n        return localize.quarter(quarter, {\n          width: \"narrow\",\n          context: \"standalone\",\n        });\n      // 1st quarter, 2nd quarter, ...\n      case \"qqqq\":\n      default:\n        return localize.quarter(quarter, {\n          width: \"wide\",\n          context: \"standalone\",\n        });\n    }\n  },\n\n  // Month\n  M: function (date, token, localize) {\n    const month = date.getMonth();\n    switch (token) {\n      case \"M\":\n      case \"MM\":\n        return lightFormatters.M(date, token);\n      // 1st, 2nd, ..., 12th\n      case \"Mo\":\n        return localize.ordinalNumber(month + 1, { unit: \"month\" });\n      // Jan, Feb, ..., Dec\n      case \"MMM\":\n        return localize.month(month, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      // J, F, ..., D\n      case \"MMMMM\":\n        return localize.month(month, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // January, February, ..., December\n      case \"MMMM\":\n      default:\n        return localize.month(month, { width: \"wide\", context: \"formatting\" });\n    }\n  },\n\n  // Stand-alone month\n  L: function (date, token, localize) {\n    const month = date.getMonth();\n    switch (token) {\n      // 1, 2, ..., 12\n      case \"L\":\n        return String(month + 1);\n      // 01, 02, ..., 12\n      case \"LL\":\n        return addLeadingZeros(month + 1, 2);\n      // 1st, 2nd, ..., 12th\n      case \"Lo\":\n        return localize.ordinalNumber(month + 1, { unit: \"month\" });\n      // Jan, Feb, ..., Dec\n      case \"LLL\":\n        return localize.month(month, {\n          width: \"abbreviated\",\n          context: \"standalone\",\n        });\n      // J, F, ..., D\n      case \"LLLLL\":\n        return localize.month(month, {\n          width: \"narrow\",\n          context: \"standalone\",\n        });\n      // January, February, ..., December\n      case \"LLLL\":\n      default:\n        return localize.month(month, { width: \"wide\", context: \"standalone\" });\n    }\n  },\n\n  // Local week of year\n  w: function (date, token, localize, options) {\n    const week = getWeek(date, options);\n\n    if (token === \"wo\") {\n      return localize.ordinalNumber(week, { unit: \"week\" });\n    }\n\n    return addLeadingZeros(week, token.length);\n  },\n\n  // ISO week of year\n  I: function (date, token, localize) {\n    const isoWeek = getISOWeek(date);\n\n    if (token === \"Io\") {\n      return localize.ordinalNumber(isoWeek, { unit: \"week\" });\n    }\n\n    return addLeadingZeros(isoWeek, token.length);\n  },\n\n  // Day of the month\n  d: function (date, token, localize) {\n    if (token === \"do\") {\n      return localize.ordinalNumber(date.getDate(), { unit: \"date\" });\n    }\n\n    return lightFormatters.d(date, token);\n  },\n\n  // Day of year\n  D: function (date, token, localize) {\n    const dayOfYear = getDayOfYear(date);\n\n    if (token === \"Do\") {\n      return localize.ordinalNumber(dayOfYear, { unit: \"dayOfYear\" });\n    }\n\n    return addLeadingZeros(dayOfYear, token.length);\n  },\n\n  // Day of week\n  E: function (date, token, localize) {\n    const dayOfWeek = date.getDay();\n    switch (token) {\n      // Tue\n      case \"E\":\n      case \"EE\":\n      case \"EEE\":\n        return localize.day(dayOfWeek, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      // T\n      case \"EEEEE\":\n        return localize.day(dayOfWeek, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // Tu\n      case \"EEEEEE\":\n        return localize.day(dayOfWeek, {\n          width: \"short\",\n          context: \"formatting\",\n        });\n      // Tuesday\n      case \"EEEE\":\n      default:\n        return localize.day(dayOfWeek, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // Local day of week\n  e: function (date, token, localize, options) {\n    const dayOfWeek = date.getDay();\n    const localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;\n    switch (token) {\n      // Numerical value (Nth day of week with current locale or weekStartsOn)\n      case \"e\":\n        return String(localDayOfWeek);\n      // Padded numerical value\n      case \"ee\":\n        return addLeadingZeros(localDayOfWeek, 2);\n      // 1st, 2nd, ..., 7th\n      case \"eo\":\n        return localize.ordinalNumber(localDayOfWeek, { unit: \"day\" });\n      case \"eee\":\n        return localize.day(dayOfWeek, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      // T\n      case \"eeeee\":\n        return localize.day(dayOfWeek, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // Tu\n      case \"eeeeee\":\n        return localize.day(dayOfWeek, {\n          width: \"short\",\n          context: \"formatting\",\n        });\n      // Tuesday\n      case \"eeee\":\n      default:\n        return localize.day(dayOfWeek, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // Stand-alone local day of week\n  c: function (date, token, localize, options) {\n    const dayOfWeek = date.getDay();\n    const localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;\n    switch (token) {\n      // Numerical value (same as in `e`)\n      case \"c\":\n        return String(localDayOfWeek);\n      // Padded numerical value\n      case \"cc\":\n        return addLeadingZeros(localDayOfWeek, token.length);\n      // 1st, 2nd, ..., 7th\n      case \"co\":\n        return localize.ordinalNumber(localDayOfWeek, { unit: \"day\" });\n      case \"ccc\":\n        return localize.day(dayOfWeek, {\n          width: \"abbreviated\",\n          context: \"standalone\",\n        });\n      // T\n      case \"ccccc\":\n        return localize.day(dayOfWeek, {\n          width: \"narrow\",\n          context: \"standalone\",\n        });\n      // Tu\n      case \"cccccc\":\n        return localize.day(dayOfWeek, {\n          width: \"short\",\n          context: \"standalone\",\n        });\n      // Tuesday\n      case \"cccc\":\n      default:\n        return localize.day(dayOfWeek, {\n          width: \"wide\",\n          context: \"standalone\",\n        });\n    }\n  },\n\n  // ISO day of week\n  i: function (date, token, localize) {\n    const dayOfWeek = date.getDay();\n    const isoDayOfWeek = dayOfWeek === 0 ? 7 : dayOfWeek;\n    switch (token) {\n      // 2\n      case \"i\":\n        return String(isoDayOfWeek);\n      // 02\n      case \"ii\":\n        return addLeadingZeros(isoDayOfWeek, token.length);\n      // 2nd\n      case \"io\":\n        return localize.ordinalNumber(isoDayOfWeek, { unit: \"day\" });\n      // Tue\n      case \"iii\":\n        return localize.day(dayOfWeek, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      // T\n      case \"iiiii\":\n        return localize.day(dayOfWeek, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // Tu\n      case \"iiiiii\":\n        return localize.day(dayOfWeek, {\n          width: \"short\",\n          context: \"formatting\",\n        });\n      // Tuesday\n      case \"iiii\":\n      default:\n        return localize.day(dayOfWeek, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // AM or PM\n  a: function (date, token, localize) {\n    const hours = date.getHours();\n    const dayPeriodEnumValue = hours / 12 >= 1 ? \"pm\" : \"am\";\n\n    switch (token) {\n      case \"a\":\n      case \"aa\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      case \"aaa\":\n        return localize\n          .dayPeriod(dayPeriodEnumValue, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          })\n          .toLowerCase();\n      case \"aaaaa\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      case \"aaaa\":\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // AM, PM, midnight, noon\n  b: function (date, token, localize) {\n    const hours = date.getHours();\n    let dayPeriodEnumValue;\n    if (hours === 12) {\n      dayPeriodEnumValue = dayPeriodEnum.noon;\n    } else if (hours === 0) {\n      dayPeriodEnumValue = dayPeriodEnum.midnight;\n    } else {\n      dayPeriodEnumValue = hours / 12 >= 1 ? \"pm\" : \"am\";\n    }\n\n    switch (token) {\n      case \"b\":\n      case \"bb\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      case \"bbb\":\n        return localize\n          .dayPeriod(dayPeriodEnumValue, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          })\n          .toLowerCase();\n      case \"bbbbb\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      case \"bbbb\":\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // in the morning, in the afternoon, in the evening, at night\n  B: function (date, token, localize) {\n    const hours = date.getHours();\n    let dayPeriodEnumValue;\n    if (hours >= 17) {\n      dayPeriodEnumValue = dayPeriodEnum.evening;\n    } else if (hours >= 12) {\n      dayPeriodEnumValue = dayPeriodEnum.afternoon;\n    } else if (hours >= 4) {\n      dayPeriodEnumValue = dayPeriodEnum.morning;\n    } else {\n      dayPeriodEnumValue = dayPeriodEnum.night;\n    }\n\n    switch (token) {\n      case \"B\":\n      case \"BB\":\n      case \"BBB\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      case \"BBBBB\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      case \"BBBB\":\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // Hour [1-12]\n  h: function (date, token, localize) {\n    if (token === \"ho\") {\n      let hours = date.getHours() % 12;\n      if (hours === 0) hours = 12;\n      return localize.ordinalNumber(hours, { unit: \"hour\" });\n    }\n\n    return lightFormatters.h(date, token);\n  },\n\n  // Hour [0-23]\n  H: function (date, token, localize) {\n    if (token === \"Ho\") {\n      return localize.ordinalNumber(date.getHours(), { unit: \"hour\" });\n    }\n\n    return lightFormatters.H(date, token);\n  },\n\n  // Hour [0-11]\n  K: function (date, token, localize) {\n    const hours = date.getHours() % 12;\n\n    if (token === \"Ko\") {\n      return localize.ordinalNumber(hours, { unit: \"hour\" });\n    }\n\n    return addLeadingZeros(hours, token.length);\n  },\n\n  // Hour [1-24]\n  k: function (date, token, localize) {\n    let hours = date.getHours();\n    if (hours === 0) hours = 24;\n\n    if (token === \"ko\") {\n      return localize.ordinalNumber(hours, { unit: \"hour\" });\n    }\n\n    return addLeadingZeros(hours, token.length);\n  },\n\n  // Minute\n  m: function (date, token, localize) {\n    if (token === \"mo\") {\n      return localize.ordinalNumber(date.getMinutes(), { unit: \"minute\" });\n    }\n\n    return lightFormatters.m(date, token);\n  },\n\n  // Second\n  s: function (date, token, localize) {\n    if (token === \"so\") {\n      return localize.ordinalNumber(date.getSeconds(), { unit: \"second\" });\n    }\n\n    return lightFormatters.s(date, token);\n  },\n\n  // Fraction of second\n  S: function (date, token) {\n    return lightFormatters.S(date, token);\n  },\n\n  // Timezone (ISO-8601. If offset is 0, output is always `'Z'`)\n  X: function (date, token, _localize) {\n    const timezoneOffset = date.getTimezoneOffset();\n\n    if (timezoneOffset === 0) {\n      return \"Z\";\n    }\n\n    switch (token) {\n      // Hours and optional minutes\n      case \"X\":\n        return formatTimezoneWithOptionalMinutes(timezoneOffset);\n\n      // Hours, minutes and optional seconds without `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `XX`\n      case \"XXXX\":\n      case \"XX\": // Hours and minutes without `:` delimiter\n        return formatTimezone(timezoneOffset);\n\n      // Hours, minutes and optional seconds with `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `XXX`\n      case \"XXXXX\":\n      case \"XXX\": // Hours and minutes with `:` delimiter\n      default:\n        return formatTimezone(timezoneOffset, \":\");\n    }\n  },\n\n  // Timezone (ISO-8601. If offset is 0, output is `'+00:00'` or equivalent)\n  x: function (date, token, _localize) {\n    const timezoneOffset = date.getTimezoneOffset();\n\n    switch (token) {\n      // Hours and optional minutes\n      case \"x\":\n        return formatTimezoneWithOptionalMinutes(timezoneOffset);\n\n      // Hours, minutes and optional seconds without `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `xx`\n      case \"xxxx\":\n      case \"xx\": // Hours and minutes without `:` delimiter\n        return formatTimezone(timezoneOffset);\n\n      // Hours, minutes and optional seconds with `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `xxx`\n      case \"xxxxx\":\n      case \"xxx\": // Hours and minutes with `:` delimiter\n      default:\n        return formatTimezone(timezoneOffset, \":\");\n    }\n  },\n\n  // Timezone (GMT)\n  O: function (date, token, _localize) {\n    const timezoneOffset = date.getTimezoneOffset();\n\n    switch (token) {\n      // Short\n      case \"O\":\n      case \"OO\":\n      case \"OOO\":\n        return \"GMT\" + formatTimezoneShort(timezoneOffset, \":\");\n      // Long\n      case \"OOOO\":\n      default:\n        return \"GMT\" + formatTimezone(timezoneOffset, \":\");\n    }\n  },\n\n  // Timezone (specific non-location)\n  z: function (date, token, _localize) {\n    const timezoneOffset = date.getTimezoneOffset();\n\n    switch (token) {\n      // Short\n      case \"z\":\n      case \"zz\":\n      case \"zzz\":\n        return \"GMT\" + formatTimezoneShort(timezoneOffset, \":\");\n      // Long\n      case \"zzzz\":\n      default:\n        return \"GMT\" + formatTimezone(timezoneOffset, \":\");\n    }\n  },\n\n  // Seconds timestamp\n  t: function (date, token, _localize) {\n    const timestamp = Math.trunc(date.getTime() / 1000);\n    return addLeadingZeros(timestamp, token.length);\n  },\n\n  // Milliseconds timestamp\n  T: function (date, token, _localize) {\n    const timestamp = date.getTime();\n    return addLeadingZeros(timestamp, token.length);\n  },\n};\n\nfunction formatTimezoneShort(offset, delimiter = \"\") {\n  const sign = offset > 0 ? \"-\" : \"+\";\n  const absOffset = Math.abs(offset);\n  const hours = Math.trunc(absOffset / 60);\n  const minutes = absOffset % 60;\n  if (minutes === 0) {\n    return sign + String(hours);\n  }\n  return sign + String(hours) + delimiter + addLeadingZeros(minutes, 2);\n}\n\nfunction formatTimezoneWithOptionalMinutes(offset, delimiter) {\n  if (offset % 60 === 0) {\n    const sign = offset > 0 ? \"-\" : \"+\";\n    return sign + addLeadingZeros(Math.abs(offset) / 60, 2);\n  }\n  return formatTimezone(offset, delimiter);\n}\n\nfunction formatTimezone(offset, delimiter = \"\") {\n  const sign = offset > 0 ? \"-\" : \"+\";\n  const absOffset = Math.abs(offset);\n  const hours = addLeadingZeros(Math.trunc(absOffset / 60), 2);\n  const minutes = addLeadingZeros(absOffset % 60, 2);\n  return sign + hours + delimiter + minutes;\n}\n","const dateLongFormatter = (pattern, formatLong) => {\n  switch (pattern) {\n    case \"P\":\n      return formatLong.date({ width: \"short\" });\n    case \"PP\":\n      return formatLong.date({ width: \"medium\" });\n    case \"PPP\":\n      return formatLong.date({ width: \"long\" });\n    case \"PPPP\":\n    default:\n      return formatLong.date({ width: \"full\" });\n  }\n};\n\nconst timeLongFormatter = (pattern, formatLong) => {\n  switch (pattern) {\n    case \"p\":\n      return formatLong.time({ width: \"short\" });\n    case \"pp\":\n      return formatLong.time({ width: \"medium\" });\n    case \"ppp\":\n      return formatLong.time({ width: \"long\" });\n    case \"pppp\":\n    default:\n      return formatLong.time({ width: \"full\" });\n  }\n};\n\nconst dateTimeLongFormatter = (pattern, formatLong) => {\n  const matchResult = pattern.match(/(P+)(p+)?/) || [];\n  const datePattern = matchResult[1];\n  const timePattern = matchResult[2];\n\n  if (!timePattern) {\n    return dateLongFormatter(pattern, formatLong);\n  }\n\n  let dateTimeFormat;\n\n  switch (datePattern) {\n    case \"P\":\n      dateTimeFormat = formatLong.dateTime({ width: \"short\" });\n      break;\n    case \"PP\":\n      dateTimeFormat = formatLong.dateTime({ width: \"medium\" });\n      break;\n    case \"PPP\":\n      dateTimeFormat = formatLong.dateTime({ width: \"long\" });\n      break;\n    case \"PPPP\":\n    default:\n      dateTimeFormat = formatLong.dateTime({ width: \"full\" });\n      break;\n  }\n\n  return dateTimeFormat\n    .replace(\"{{date}}\", dateLongFormatter(datePattern, formatLong))\n    .replace(\"{{time}}\", timeLongFormatter(timePattern, formatLong));\n};\n\nexport const longFormatters = {\n  p: timeLongFormatter,\n  P: dateTimeLongFormatter,\n};\n","const dayOfYearTokenRE = /^D+$/;\nconst weekYearTokenRE = /^Y+$/;\n\nconst throwTokens = [\"D\", \"DD\", \"YY\", \"YYYY\"];\n\nexport function isProtectedDayOfYearToken(token) {\n  return dayOfYearTokenRE.test(token);\n}\n\nexport function isProtectedWeekYearToken(token) {\n  return weekYearTokenRE.test(token);\n}\n\nexport function warnOrThrowProtectedError(token, format, input) {\n  const _message = message(token, format, input);\n  console.warn(_message);\n  if (throwTokens.includes(token)) throw new RangeError(_message);\n}\n\nfunction message(token, format, input) {\n  const subject = token[0] === \"Y\" ? \"years\" : \"days of the month\";\n  return `Use \\`${token.toLowerCase()}\\` instead of \\`${token}\\` (in \\`${format}\\`) for formatting ${subject} to the input \\`${input}\\`; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md`;\n}\n","import { defaultLocale } from \"./_lib/defaultLocale.mjs\";\nimport { getDefaultOptions } from \"./_lib/defaultOptions.mjs\";\nimport { formatters } from \"./_lib/format/formatters.mjs\";\nimport { longFormatters } from \"./_lib/format/longFormatters.mjs\";\nimport {\n  isProtectedDayOfYearToken,\n  isProtectedWeekYearToken,\n  warnOrThrowProtectedError,\n} from \"./_lib/protectedTokens.mjs\";\nimport { isValid } from \"./isValid.mjs\";\nimport { toDate } from \"./toDate.mjs\";\n\n// Rexports of internal for libraries to use.\n// See: https://github.com/date-fns/date-fns/issues/3638#issuecomment-1877082874\nexport { formatters, longFormatters };\n\n// This RegExp consists of three parts separated by `|`:\n// - [yYQqMLwIdDecihHKkms]o matches any available ordinal number token\n//   (one of the certain letters followed by `o`)\n// - (\\w)\\1* matches any sequences of the same letter\n// - '' matches two quote characters in a row\n// - '(''|[^'])+('|$) matches anything surrounded by two quote characters ('),\n//   except a single quote symbol, which ends the sequence.\n//   Two quote characters do not end the sequence.\n//   If there is no matching single quote\n//   then the sequence will continue until the end of the string.\n// - . matches any single character unmatched by previous parts of the RegExps\nconst formattingTokensRegExp =\n  /[yYQqMLwIdDecihHKkms]o|(\\w)\\1*|''|'(''|[^'])+('|$)|./g;\n\n// This RegExp catches symbols escaped by quotes, and also\n// sequences of symbols P, p, and the combinations like `PPPPPPPppppp`\nconst longFormattingTokensRegExp = /P+p+|P+|p+|''|'(''|[^'])+('|$)|./g;\n\nconst escapedStringRegExp = /^'([^]*?)'?$/;\nconst doubleQuoteRegExp = /''/g;\nconst unescapedLatinCharacterRegExp = /[a-zA-Z]/;\n\nexport { format as formatDate };\n\n/**\n * The {@link format} function options.\n */\n\n/**\n * @name format\n * @alias formatDate\n * @category Common Helpers\n * @summary Format the date.\n *\n * @description\n * Return the formatted date string in the given format. The result may vary by locale.\n *\n * > ⚠️ Please note that the `format` tokens differ from Moment.js and other libraries.\n * > See: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n *\n * The characters wrapped between two single quotes characters (') are escaped.\n * Two single quotes in a row, whether inside or outside a quoted sequence, represent a 'real' single quote.\n * (see the last example)\n *\n * Format of the string is based on Unicode Technical Standard #35:\n * https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table\n * with a few additions (see note 7 below the table).\n *\n * Accepted patterns:\n * | Unit                            | Pattern | Result examples                   | Notes |\n * |---------------------------------|---------|-----------------------------------|-------|\n * | Era                             | G..GGG  | AD, BC                            |       |\n * |                                 | GGGG    | Anno Domini, Before Christ        | 2     |\n * |                                 | GGGGG   | A, B                              |       |\n * | Calendar year                   | y       | 44, 1, 1900, 2017                 | 5     |\n * |                                 | yo      | 44th, 1st, 0th, 17th              | 5,7   |\n * |                                 | yy      | 44, 01, 00, 17                    | 5     |\n * |                                 | yyy     | 044, 001, 1900, 2017              | 5     |\n * |                                 | yyyy    | 0044, 0001, 1900, 2017            | 5     |\n * |                                 | yyyyy   | ...                               | 3,5   |\n * | Local week-numbering year       | Y       | 44, 1, 1900, 2017                 | 5     |\n * |                                 | Yo      | 44th, 1st, 1900th, 2017th         | 5,7   |\n * |                                 | YY      | 44, 01, 00, 17                    | 5,8   |\n * |                                 | YYY     | 044, 001, 1900, 2017              | 5     |\n * |                                 | YYYY    | 0044, 0001, 1900, 2017            | 5,8   |\n * |                                 | YYYYY   | ...                               | 3,5   |\n * | ISO week-numbering year         | R       | -43, 0, 1, 1900, 2017             | 5,7   |\n * |                                 | RR      | -43, 00, 01, 1900, 2017           | 5,7   |\n * |                                 | RRR     | -043, 000, 001, 1900, 2017        | 5,7   |\n * |                                 | RRRR    | -0043, 0000, 0001, 1900, 2017     | 5,7   |\n * |                                 | RRRRR   | ...                               | 3,5,7 |\n * | Extended year                   | u       | -43, 0, 1, 1900, 2017             | 5     |\n * |                                 | uu      | -43, 01, 1900, 2017               | 5     |\n * |                                 | uuu     | -043, 001, 1900, 2017             | 5     |\n * |                                 | uuuu    | -0043, 0001, 1900, 2017           | 5     |\n * |                                 | uuuuu   | ...                               | 3,5   |\n * | Quarter (formatting)            | Q       | 1, 2, 3, 4                        |       |\n * |                                 | Qo      | 1st, 2nd, 3rd, 4th                | 7     |\n * |                                 | QQ      | 01, 02, 03, 04                    |       |\n * |                                 | QQQ     | Q1, Q2, Q3, Q4                    |       |\n * |                                 | QQQQ    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 | QQQQQ   | 1, 2, 3, 4                        | 4     |\n * | Quarter (stand-alone)           | q       | 1, 2, 3, 4                        |       |\n * |                                 | qo      | 1st, 2nd, 3rd, 4th                | 7     |\n * |                                 | qq      | 01, 02, 03, 04                    |       |\n * |                                 | qqq     | Q1, Q2, Q3, Q4                    |       |\n * |                                 | qqqq    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 | qqqqq   | 1, 2, 3, 4                        | 4     |\n * | Month (formatting)              | M       | 1, 2, ..., 12                     |       |\n * |                                 | Mo      | 1st, 2nd, ..., 12th               | 7     |\n * |                                 | MM      | 01, 02, ..., 12                   |       |\n * |                                 | MMM     | Jan, Feb, ..., Dec                |       |\n * |                                 | MMMM    | January, February, ..., December  | 2     |\n * |                                 | MMMMM   | J, F, ..., D                      |       |\n * | Month (stand-alone)             | L       | 1, 2, ..., 12                     |       |\n * |                                 | Lo      | 1st, 2nd, ..., 12th               | 7     |\n * |                                 | LL      | 01, 02, ..., 12                   |       |\n * |                                 | LLL     | Jan, Feb, ..., Dec                |       |\n * |                                 | LLLL    | January, February, ..., December  | 2     |\n * |                                 | LLLLL   | J, F, ..., D                      |       |\n * | Local week of year              | w       | 1, 2, ..., 53                     |       |\n * |                                 | wo      | 1st, 2nd, ..., 53th               | 7     |\n * |                                 | ww      | 01, 02, ..., 53                   |       |\n * | ISO week of year                | I       | 1, 2, ..., 53                     | 7     |\n * |                                 | Io      | 1st, 2nd, ..., 53th               | 7     |\n * |                                 | II      | 01, 02, ..., 53                   | 7     |\n * | Day of month                    | d       | 1, 2, ..., 31                     |       |\n * |                                 | do      | 1st, 2nd, ..., 31st               | 7     |\n * |                                 | dd      | 01, 02, ..., 31                   |       |\n * | Day of year                     | D       | 1, 2, ..., 365, 366               | 9     |\n * |                                 | Do      | 1st, 2nd, ..., 365th, 366th       | 7     |\n * |                                 | DD      | 01, 02, ..., 365, 366             | 9     |\n * |                                 | DDD     | 001, 002, ..., 365, 366           |       |\n * |                                 | DDDD    | ...                               | 3     |\n * | Day of week (formatting)        | E..EEE  | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 | EEEE    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | EEEEE   | M, T, W, T, F, S, S               |       |\n * |                                 | EEEEEE  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | ISO day of week (formatting)    | i       | 1, 2, 3, ..., 7                   | 7     |\n * |                                 | io      | 1st, 2nd, ..., 7th                | 7     |\n * |                                 | ii      | 01, 02, ..., 07                   | 7     |\n * |                                 | iii     | Mon, Tue, Wed, ..., Sun           | 7     |\n * |                                 | iiii    | Monday, Tuesday, ..., Sunday      | 2,7   |\n * |                                 | iiiii   | M, T, W, T, F, S, S               | 7     |\n * |                                 | iiiiii  | Mo, Tu, We, Th, Fr, Sa, Su        | 7     |\n * | Local day of week (formatting)  | e       | 2, 3, 4, ..., 1                   |       |\n * |                                 | eo      | 2nd, 3rd, ..., 1st                | 7     |\n * |                                 | ee      | 02, 03, ..., 01                   |       |\n * |                                 | eee     | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 | eeee    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | eeeee   | M, T, W, T, F, S, S               |       |\n * |                                 | eeeeee  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | Local day of week (stand-alone) | c       | 2, 3, 4, ..., 1                   |       |\n * |                                 | co      | 2nd, 3rd, ..., 1st                | 7     |\n * |                                 | cc      | 02, 03, ..., 01                   |       |\n * |                                 | ccc     | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 | cccc    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | ccccc   | M, T, W, T, F, S, S               |       |\n * |                                 | cccccc  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | AM, PM                          | a..aa   | AM, PM                            |       |\n * |                                 | aaa     | am, pm                            |       |\n * |                                 | aaaa    | a.m., p.m.                        | 2     |\n * |                                 | aaaaa   | a, p                              |       |\n * | AM, PM, noon, midnight          | b..bb   | AM, PM, noon, midnight            |       |\n * |                                 | bbb     | am, pm, noon, midnight            |       |\n * |                                 | bbbb    | a.m., p.m., noon, midnight        | 2     |\n * |                                 | bbbbb   | a, p, n, mi                       |       |\n * | Flexible day period             | B..BBB  | at night, in the morning, ...     |       |\n * |                                 | BBBB    | at night, in the morning, ...     | 2     |\n * |                                 | BBBBB   | at night, in the morning, ...     |       |\n * | Hour [1-12]                     | h       | 1, 2, ..., 11, 12                 |       |\n * |                                 | ho      | 1st, 2nd, ..., 11th, 12th         | 7     |\n * |                                 | hh      | 01, 02, ..., 11, 12               |       |\n * | Hour [0-23]                     | H       | 0, 1, 2, ..., 23                  |       |\n * |                                 | Ho      | 0th, 1st, 2nd, ..., 23rd          | 7     |\n * |                                 | HH      | 00, 01, 02, ..., 23               |       |\n * | Hour [0-11]                     | K       | 1, 2, ..., 11, 0                  |       |\n * |                                 | Ko      | 1st, 2nd, ..., 11th, 0th          | 7     |\n * |                                 | KK      | 01, 02, ..., 11, 00               |       |\n * | Hour [1-24]                     | k       | 24, 1, 2, ..., 23                 |       |\n * |                                 | ko      | 24th, 1st, 2nd, ..., 23rd         | 7     |\n * |                                 | kk      | 24, 01, 02, ..., 23               |       |\n * | Minute                          | m       | 0, 1, ..., 59                     |       |\n * |                                 | mo      | 0th, 1st, ..., 59th               | 7     |\n * |                                 | mm      | 00, 01, ..., 59                   |       |\n * | Second                          | s       | 0, 1, ..., 59                     |       |\n * |                                 | so      | 0th, 1st, ..., 59th               | 7     |\n * |                                 | ss      | 00, 01, ..., 59                   |       |\n * | Fraction of second              | S       | 0, 1, ..., 9                      |       |\n * |                                 | SS      | 00, 01, ..., 99                   |       |\n * |                                 | SSS     | 000, 001, ..., 999                |       |\n * |                                 | SSSS    | ...                               | 3     |\n * | Timezone (ISO-8601 w/ Z)        | X       | -08, +0530, Z                     |       |\n * |                                 | XX      | -0800, +0530, Z                   |       |\n * |                                 | XXX     | -08:00, +05:30, Z                 |       |\n * |                                 | XXXX    | -0800, +0530, Z, +123456          | 2     |\n * |                                 | XXXXX   | -08:00, +05:30, Z, +12:34:56      |       |\n * | Timezone (ISO-8601 w/o Z)       | x       | -08, +0530, +00                   |       |\n * |                                 | xx      | -0800, +0530, +0000               |       |\n * |                                 | xxx     | -08:00, +05:30, +00:00            | 2     |\n * |                                 | xxxx    | -0800, +0530, +0000, +123456      |       |\n * |                                 | xxxxx   | -08:00, +05:30, +00:00, +12:34:56 |       |\n * | Timezone (GMT)                  | O...OOO | GMT-8, GMT+5:30, GMT+0            |       |\n * |                                 | OOOO    | GMT-08:00, GMT+05:30, GMT+00:00   | 2     |\n * | Timezone (specific non-locat.)  | z...zzz | GMT-8, GMT+5:30, GMT+0            | 6     |\n * |                                 | zzzz    | GMT-08:00, GMT+05:30, GMT+00:00   | 2,6   |\n * | Seconds timestamp               | t       | 512969520                         | 7     |\n * |                                 | tt      | ...                               | 3,7   |\n * | Milliseconds timestamp          | T       | 512969520900                      | 7     |\n * |                                 | TT      | ...                               | 3,7   |\n * | Long localized date             | P       | 04/29/1453                        | 7     |\n * |                                 | PP      | Apr 29, 1453                      | 7     |\n * |                                 | PPP     | April 29th, 1453                  | 7     |\n * |                                 | PPPP    | Friday, April 29th, 1453          | 2,7   |\n * | Long localized time             | p       | 12:00 AM                          | 7     |\n * |                                 | pp      | 12:00:00 AM                       | 7     |\n * |                                 | ppp     | 12:00:00 AM GMT+2                 | 7     |\n * |                                 | pppp    | 12:00:00 AM GMT+02:00             | 2,7   |\n * | Combination of date and time    | Pp      | 04/29/1453, 12:00 AM              | 7     |\n * |                                 | PPpp    | Apr 29, 1453, 12:00:00 AM         | 7     |\n * |                                 | PPPppp  | April 29th, 1453 at ...           | 7     |\n * |                                 | PPPPpppp| Friday, April 29th, 1453 at ...   | 2,7   |\n * Notes:\n * 1. \"Formatting\" units (e.g. formatting quarter) in the default en-US locale\n *    are the same as \"stand-alone\" units, but are different in some languages.\n *    \"Formatting\" units are declined according to the rules of the language\n *    in the context of a date. \"Stand-alone\" units are always nominative singular:\n *\n *    `format(new Date(2017, 10, 6), 'do LLLL', {locale: cs}) //=> '6. listopad'`\n *\n *    `format(new Date(2017, 10, 6), 'do MMMM', {locale: cs}) //=> '6. listopadu'`\n *\n * 2. Any sequence of the identical letters is a pattern, unless it is escaped by\n *    the single quote characters (see below).\n *    If the sequence is longer than listed in table (e.g. `EEEEEEEEEEE`)\n *    the output will be the same as default pattern for this unit, usually\n *    the longest one (in case of ISO weekdays, `EEEE`). Default patterns for units\n *    are marked with \"2\" in the last column of the table.\n *\n *    `format(new Date(2017, 10, 6), 'MMM') //=> 'Nov'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMM') //=> 'November'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMM') //=> 'N'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMMM') //=> 'November'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMMMM') //=> 'November'`\n *\n * 3. Some patterns could be unlimited length (such as `yyyyyyyy`).\n *    The output will be padded with zeros to match the length of the pattern.\n *\n *    `format(new Date(2017, 10, 6), 'yyyyyyyy') //=> '00002017'`\n *\n * 4. `QQQQQ` and `qqqqq` could be not strictly numerical in some locales.\n *    These tokens represent the shortest form of the quarter.\n *\n * 5. The main difference between `y` and `u` patterns are B.C. years:\n *\n *    | Year | `y` | `u` |\n *    |------|-----|-----|\n *    | AC 1 |   1 |   1 |\n *    | BC 1 |   1 |   0 |\n *    | BC 2 |   2 |  -1 |\n *\n *    Also `yy` always returns the last two digits of a year,\n *    while `uu` pads single digit years to 2 characters and returns other years unchanged:\n *\n *    | Year | `yy` | `uu` |\n *    |------|------|------|\n *    | 1    |   01 |   01 |\n *    | 14   |   14 |   14 |\n *    | 376  |   76 |  376 |\n *    | 1453 |   53 | 1453 |\n *\n *    The same difference is true for local and ISO week-numbering years (`Y` and `R`),\n *    except local week-numbering years are dependent on `options.weekStartsOn`\n *    and `options.firstWeekContainsDate` (compare [getISOWeekYear](https://date-fns.org/docs/getISOWeekYear)\n *    and [getWeekYear](https://date-fns.org/docs/getWeekYear)).\n *\n * 6. Specific non-location timezones are currently unavailable in `date-fns`,\n *    so right now these tokens fall back to GMT timezones.\n *\n * 7. These patterns are not in the Unicode Technical Standard #35:\n *    - `i`: ISO day of week\n *    - `I`: ISO week of year\n *    - `R`: ISO week-numbering year\n *    - `t`: seconds timestamp\n *    - `T`: milliseconds timestamp\n *    - `o`: ordinal number modifier\n *    - `P`: long localized date\n *    - `p`: long localized time\n *\n * 8. `YY` and `YYYY` tokens represent week-numbering years but they are often confused with years.\n *    You should enable `options.useAdditionalWeekYearTokens` to use them. See: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n *\n * 9. `D` and `DD` tokens represent days of the year but they are often confused with days of the month.\n *    You should enable `options.useAdditionalDayOfYearTokens` to use them. See: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The original date\n * @param format - The string of tokens\n * @param options - An object with options\n *\n * @returns The formatted date string\n *\n * @throws `date` must not be Invalid Date\n * @throws `options.locale` must contain `localize` property\n * @throws `options.locale` must contain `formatLong` property\n * @throws use `yyyy` instead of `YYYY` for formatting years using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws use `yy` instead of `YY` for formatting years using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws use `d` instead of `D` for formatting days of the month using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws use `dd` instead of `DD` for formatting days of the month using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws format string contains an unescaped latin alphabet character\n *\n * @example\n * // Represent 11 February 2014 in middle-endian format:\n * const result = format(new Date(2014, 1, 11), 'MM/dd/yyyy')\n * //=> '02/11/2014'\n *\n * @example\n * // Represent 2 July 2014 in Esperanto:\n * import { eoLocale } from 'date-fns/locale/eo'\n * const result = format(new Date(2014, 6, 2), \"do 'de' MMMM yyyy\", {\n *   locale: eoLocale\n * })\n * //=> '2-a de julio 2014'\n *\n * @example\n * // Escape string by single quote characters:\n * const result = format(new Date(2014, 6, 2, 15), \"h 'o''clock'\")\n * //=> \"3 o'clock\"\n */\nexport function format(date, formatStr, options) {\n  const defaultOptions = getDefaultOptions();\n  const locale = options?.locale ?? defaultOptions.locale ?? defaultLocale;\n\n  const firstWeekContainsDate =\n    options?.firstWeekContainsDate ??\n    options?.locale?.options?.firstWeekContainsDate ??\n    defaultOptions.firstWeekContainsDate ??\n    defaultOptions.locale?.options?.firstWeekContainsDate ??\n    1;\n\n  const weekStartsOn =\n    options?.weekStartsOn ??\n    options?.locale?.options?.weekStartsOn ??\n    defaultOptions.weekStartsOn ??\n    defaultOptions.locale?.options?.weekStartsOn ??\n    0;\n\n  const originalDate = toDate(date);\n\n  if (!isValid(originalDate)) {\n    throw new RangeError(\"Invalid time value\");\n  }\n\n  let parts = formatStr\n    .match(longFormattingTokensRegExp)\n    .map((substring) => {\n      const firstCharacter = substring[0];\n      if (firstCharacter === \"p\" || firstCharacter === \"P\") {\n        const longFormatter = longFormatters[firstCharacter];\n        return longFormatter(substring, locale.formatLong);\n      }\n      return substring;\n    })\n    .join(\"\")\n    .match(formattingTokensRegExp)\n    .map((substring) => {\n      // Replace two single quote characters with one single quote character\n      if (substring === \"''\") {\n        return { isToken: false, value: \"'\" };\n      }\n\n      const firstCharacter = substring[0];\n      if (firstCharacter === \"'\") {\n        return { isToken: false, value: cleanEscapedString(substring) };\n      }\n\n      if (formatters[firstCharacter]) {\n        return { isToken: true, value: substring };\n      }\n\n      if (firstCharacter.match(unescapedLatinCharacterRegExp)) {\n        throw new RangeError(\n          \"Format string contains an unescaped latin alphabet character `\" +\n            firstCharacter +\n            \"`\",\n        );\n      }\n\n      return { isToken: false, value: substring };\n    });\n\n  // invoke localize preprocessor (only for french locales at the moment)\n  if (locale.localize.preprocessor) {\n    parts = locale.localize.preprocessor(originalDate, parts);\n  }\n\n  const formatterOptions = {\n    firstWeekContainsDate,\n    weekStartsOn,\n    locale,\n  };\n\n  return parts\n    .map((part) => {\n      if (!part.isToken) return part.value;\n\n      const token = part.value;\n\n      if (\n        (!options?.useAdditionalWeekYearTokens &&\n          isProtectedWeekYearToken(token)) ||\n        (!options?.useAdditionalDayOfYearTokens &&\n          isProtectedDayOfYearToken(token))\n      ) {\n        warnOrThrowProtectedError(token, formatStr, String(date));\n      }\n\n      const formatter = formatters[token[0]];\n      return formatter(originalDate, token, locale.localize, formatterOptions);\n    })\n    .join(\"\");\n}\n\nfunction cleanEscapedString(input) {\n  const matched = input.match(escapedStringRegExp);\n\n  if (!matched) {\n    return input;\n  }\n\n  return matched[1].replace(doubleQuoteRegExp, \"'\");\n}\n\n// Fallback for modularized imports:\nexport default format;\n","import { getDefaultOptions as getInternalDefaultOptions } from \"./_lib/defaultOptions.mjs\";\n\n/**\n * @name getDefaultOptions\n * @category Common Helpers\n * @summary Get default options.\n * @pure false\n *\n * @description\n * Returns an object that contains defaults for\n * `options.locale`, `options.weekStartsOn` and `options.firstWeekContainsDate`\n * arguments for all functions.\n *\n * You can change these with [setDefaultOptions](https://date-fns.org/docs/setDefaultOptions).\n *\n * @returns The default options\n *\n * @example\n * const result = getDefaultOptions()\n * //=> {}\n *\n * @example\n * setDefaultOptions({ weekStarsOn: 1, firstWeekContainsDate: 4 })\n * const result = getDefaultOptions()\n * //=> { weekStarsOn: 1, firstWeekContainsDate: 4 }\n */\nexport function getDefaultOptions() {\n  return Object.assign({}, getInternalDefaultOptions());\n}\n\n// Fallback for modularized imports:\nexport default getDefaultOptions;\n","import { toDate } from \"./toDate.mjs\";\n\n/**\n * @name getISODay\n * @category Weekday Helpers\n * @summary Get the day of the ISO week of the given date.\n *\n * @description\n * Get the day of the ISO week of the given date,\n * which is 7 for Sunday, 1 for Monday etc.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The given date\n *\n * @returns The day of ISO week\n *\n * @example\n * // Which day of the ISO week is 26 February 2012?\n * const result = getISODay(new Date(2012, 1, 26))\n * //=> 7\n */\nexport function getISODay(date) {\n  const _date = toDate(date);\n  let day = _date.getDay();\n\n  if (day === 0) {\n    day = 7;\n  }\n\n  return day;\n}\n\n// Fallback for modularized imports:\nexport default getISODay;\n","import { constructFrom } from \"./constructFrom.mjs\";\n\n/**\n * @name transpose\n * @category Generic Helpers\n * @summary Transpose the date to the given constructor.\n *\n * @description\n * The function transposes the date to the given constructor. It helps you\n * to transpose the date in the system time zone to say `UTCDate` or any other\n * date extension.\n *\n * @typeParam DateInputType - The input `Date` type derived from the passed argument.\n * @typeParam DateOutputType - The output `Date` type derived from the passed constructor.\n *\n * @param fromDate - The date to use values from\n * @param constructor - The date constructor to use\n *\n * @returns Date transposed to the given constructor\n *\n * @example\n * // Create July 10, 2022 00:00 in locale time zone\n * const date = new Date(2022, 6, 10)\n * //=> 'Sun Jul 10 2022 00:00:00 GMT+0800 (Singapore Standard Time)'\n *\n * @example\n * // Transpose the date to July 10, 2022 00:00 in UTC\n * transpose(date, UTCDate)\n * //=> 'Sun Jul 10 2022 00:00:00 GMT+0000 (Coordinated Universal Time)'\n */\nexport function transpose(fromDate, constructor) {\n  const date =\n    constructor instanceof Date\n      ? constructFrom(constructor, 0)\n      : new constructor(0);\n  date.setFullYear(\n    fromDate.getFullYear(),\n    fromDate.getMonth(),\n    fromDate.getDate(),\n  );\n  date.setHours(\n    fromDate.getHours(),\n    fromDate.getMinutes(),\n    fromDate.getSeconds(),\n    fromDate.getMilliseconds(),\n  );\n  return date;\n}\n\n// Fallback for modularized imports:\nexport default transpose;\n","import { transpose } from \"../../transpose.mjs\";\nimport { constructFrom } from \"../../constructFrom.mjs\";\n\nconst TIMEZONE_UNIT_PRIORITY = 10;\n\nexport class Setter {\n  subPriority = 0;\n\n  validate(_utcDate, _options) {\n    return true;\n  }\n}\n\nexport class ValueSetter extends Setter {\n  constructor(\n    value,\n\n    validateValue,\n\n    setValue,\n\n    priority,\n    subPriority,\n  ) {\n    super();\n    this.value = value;\n    this.validateValue = validateValue;\n    this.setValue = setValue;\n    this.priority = priority;\n    if (subPriority) {\n      this.subPriority = subPriority;\n    }\n  }\n\n  validate(date, options) {\n    return this.validateValue(date, this.value, options);\n  }\n\n  set(date, flags, options) {\n    return this.setValue(date, flags, this.value, options);\n  }\n}\n\nexport class DateToSystemTimezoneSetter extends Setter {\n  priority = TIMEZONE_UNIT_PRIORITY;\n  subPriority = -1;\n  set(date, flags) {\n    if (flags.timestampIsSet) return date;\n    return constructFrom(date, transpose(date, Date));\n  }\n}\n","import { ValueSetter } from \"./Setter.mjs\";\n\nexport class Parser {\n  run(dateString, token, match, options) {\n    const result = this.parse(dateString, token, match, options);\n    if (!result) {\n      return null;\n    }\n\n    return {\n      setter: new ValueSetter(\n        result.value,\n        this.validate,\n        this.set,\n        this.priority,\n        this.subPriority,\n      ),\n      rest: result.rest,\n    };\n  }\n\n  validate(_utcDate, _value, _options) {\n    return true;\n  }\n}\n","import { Parser } from \"../Parser.mjs\";\n\nexport class EraParser extends Parser {\n  priority = 140;\n\n  parse(dateString, token, match) {\n    switch (token) {\n      // AD, BC\n      case \"G\":\n      case \"GG\":\n      case \"GGG\":\n        return (\n          match.era(dateString, { width: \"abbreviated\" }) ||\n          match.era(dateString, { width: \"narrow\" })\n        );\n\n      // A, B\n      case \"GGGGG\":\n        return match.era(dateString, { width: \"narrow\" });\n      // Anno Domini, Before Christ\n      case \"GGGG\":\n      default:\n        return (\n          match.era(dateString, { width: \"wide\" }) ||\n          match.era(dateString, { width: \"abbreviated\" }) ||\n          match.era(dateString, { width: \"narrow\" })\n        );\n    }\n  }\n\n  set(date, flags, value) {\n    flags.era = value;\n    date.setFullYear(value, 0, 1);\n    date.setHours(0, 0, 0, 0);\n    return date;\n  }\n\n  incompatibleTokens = [\"R\", \"u\", \"t\", \"T\"];\n}\n","export const numericPatterns = {\n  month: /^(1[0-2]|0?\\d)/, // 0 to 12\n  date: /^(3[0-1]|[0-2]?\\d)/, // 0 to 31\n  dayOfYear: /^(36[0-6]|3[0-5]\\d|[0-2]?\\d?\\d)/, // 0 to 366\n  week: /^(5[0-3]|[0-4]?\\d)/, // 0 to 53\n  hour23h: /^(2[0-3]|[0-1]?\\d)/, // 0 to 23\n  hour24h: /^(2[0-4]|[0-1]?\\d)/, // 0 to 24\n  hour11h: /^(1[0-1]|0?\\d)/, // 0 to 11\n  hour12h: /^(1[0-2]|0?\\d)/, // 0 to 12\n  minute: /^[0-5]?\\d/, // 0 to 59\n  second: /^[0-5]?\\d/, // 0 to 59\n\n  singleDigit: /^\\d/, // 0 to 9\n  twoDigits: /^\\d{1,2}/, // 0 to 99\n  threeDigits: /^\\d{1,3}/, // 0 to 999\n  fourDigits: /^\\d{1,4}/, // 0 to 9999\n\n  anyDigitsSigned: /^-?\\d+/,\n  singleDigitSigned: /^-?\\d/, // 0 to 9, -0 to -9\n  twoDigitsSigned: /^-?\\d{1,2}/, // 0 to 99, -0 to -99\n  threeDigitsSigned: /^-?\\d{1,3}/, // 0 to 999, -0 to -999\n  fourDigitsSigned: /^-?\\d{1,4}/, // 0 to 9999, -0 to -9999\n};\n\nexport const timezonePatterns = {\n  basicOptionalMinutes: /^([+-])(\\d{2})(\\d{2})?|Z/,\n  basic: /^([+-])(\\d{2})(\\d{2})|Z/,\n  basicOptionalSeconds: /^([+-])(\\d{2})(\\d{2})((\\d{2}))?|Z/,\n  extended: /^([+-])(\\d{2}):(\\d{2})|Z/,\n  extendedOptionalSeconds: /^([+-])(\\d{2}):(\\d{2})(:(\\d{2}))?|Z/,\n};\n","import {\n  millisecondsInHour,\n  millisecondsInMinute,\n  millisecondsInSecond,\n} from \"../../constants.mjs\";\nimport { numericPatterns } from \"./constants.mjs\";\n\nexport function mapValue(parseFnResult, mapFn) {\n  if (!parseFnResult) {\n    return parseFnResult;\n  }\n\n  return {\n    value: mapFn(parseFnResult.value),\n    rest: parseFnResult.rest,\n  };\n}\n\nexport function parseNumericPattern(pattern, dateString) {\n  const matchResult = dateString.match(pattern);\n\n  if (!matchResult) {\n    return null;\n  }\n\n  return {\n    value: parseInt(matchResult[0], 10),\n    rest: dateString.slice(matchResult[0].length),\n  };\n}\n\nexport function parseTimezonePattern(pattern, dateString) {\n  const matchResult = dateString.match(pattern);\n\n  if (!matchResult) {\n    return null;\n  }\n\n  // Input is 'Z'\n  if (matchResult[0] === \"Z\") {\n    return {\n      value: 0,\n      rest: dateString.slice(1),\n    };\n  }\n\n  const sign = matchResult[1] === \"+\" ? 1 : -1;\n  const hours = matchResult[2] ? parseInt(matchResult[2], 10) : 0;\n  const minutes = matchResult[3] ? parseInt(matchResult[3], 10) : 0;\n  const seconds = matchResult[5] ? parseInt(matchResult[5], 10) : 0;\n\n  return {\n    value:\n      sign *\n      (hours * millisecondsInHour +\n        minutes * millisecondsInMinute +\n        seconds * millisecondsInSecond),\n    rest: dateString.slice(matchResult[0].length),\n  };\n}\n\nexport function parseAnyDigitsSigned(dateString) {\n  return parseNumericPattern(numericPatterns.anyDigitsSigned, dateString);\n}\n\nexport function parseNDigits(n, dateString) {\n  switch (n) {\n    case 1:\n      return parseNumericPattern(numericPatterns.singleDigit, dateString);\n    case 2:\n      return parseNumericPattern(numericPatterns.twoDigits, dateString);\n    case 3:\n      return parseNumericPattern(numericPatterns.threeDigits, dateString);\n    case 4:\n      return parseNumericPattern(numericPatterns.fourDigits, dateString);\n    default:\n      return parseNumericPattern(new RegExp(\"^\\\\d{1,\" + n + \"}\"), dateString);\n  }\n}\n\nexport function parseNDigitsSigned(n, dateString) {\n  switch (n) {\n    case 1:\n      return parseNumericPattern(numericPatterns.singleDigitSigned, dateString);\n    case 2:\n      return parseNumericPattern(numericPatterns.twoDigitsSigned, dateString);\n    case 3:\n      return parseNumericPattern(numericPatterns.threeDigitsSigned, dateString);\n    case 4:\n      return parseNumericPattern(numericPatterns.fourDigitsSigned, dateString);\n    default:\n      return parseNumericPattern(new RegExp(\"^-?\\\\d{1,\" + n + \"}\"), dateString);\n  }\n}\n\nexport function dayPeriodEnumToHours(dayPeriod) {\n  switch (dayPeriod) {\n    case \"morning\":\n      return 4;\n    case \"evening\":\n      return 17;\n    case \"pm\":\n    case \"noon\":\n    case \"afternoon\":\n      return 12;\n    case \"am\":\n    case \"midnight\":\n    case \"night\":\n    default:\n      return 0;\n  }\n}\n\nexport function normalizeTwoDigitYear(twoDigitYear, currentYear) {\n  const isCommonEra = currentYear > 0;\n  // Absolute number of the current year:\n  // 1 -> 1 AC\n  // 0 -> 1 BC\n  // -1 -> 2 BC\n  const absCurrentYear = isCommonEra ? currentYear : 1 - currentYear;\n\n  let result;\n  if (absCurrentYear <= 50) {\n    result = twoDigitYear || 100;\n  } else {\n    const rangeEnd = absCurrentYear + 50;\n    const rangeEndCentury = Math.trunc(rangeEnd / 100) * 100;\n    const isPreviousCentury = twoDigitYear >= rangeEnd % 100;\n    result = twoDigitYear + rangeEndCentury - (isPreviousCentury ? 100 : 0);\n  }\n\n  return isCommonEra ? result : 1 - result;\n}\n\nexport function isLeapYearIndex(year) {\n  return year % 400 === 0 || (year % 4 === 0 && year % 100 !== 0);\n}\n","import { Parser } from \"../Parser.mjs\";\nimport { mapValue, normalizeTwoDigitYear, parseNDigits } from \"../utils.mjs\";\n\n// From http://www.unicode.org/reports/tr35/tr35-31/tr35-dates.html#Date_Format_Patterns\n// | Year     |     y | yy |   yyy |  yyyy | yyyyy |\n// |----------|-------|----|-------|-------|-------|\n// | AD 1     |     1 | 01 |   001 |  0001 | 00001 |\n// | AD 12    |    12 | 12 |   012 |  0012 | 00012 |\n// | AD 123   |   123 | 23 |   123 |  0123 | 00123 |\n// | AD 1234  |  1234 | 34 |  1234 |  1234 | 01234 |\n// | AD 12345 | 12345 | 45 | 12345 | 12345 | 12345 |\nexport class YearParser extends Parser {\n  priority = 130;\n  incompatibleTokens = [\"Y\", \"R\", \"u\", \"w\", \"I\", \"i\", \"e\", \"c\", \"t\", \"T\"];\n\n  parse(dateString, token, match) {\n    const valueCallback = (year) => ({\n      year,\n      isTwoDigitYear: token === \"yy\",\n    });\n\n    switch (token) {\n      case \"y\":\n        return mapValue(parseNDigits(4, dateString), valueCallback);\n      case \"yo\":\n        return mapValue(\n          match.ordinalNumber(dateString, {\n            unit: \"year\",\n          }),\n          valueCallback,\n        );\n      default:\n        return mapValue(parseNDigits(token.length, dateString), valueCallback);\n    }\n  }\n\n  validate(_date, value) {\n    return value.isTwoDigitYear || value.year > 0;\n  }\n\n  set(date, flags, value) {\n    const currentYear = date.getFullYear();\n\n    if (value.isTwoDigitYear) {\n      const normalizedTwoDigitYear = normalizeTwoDigitYear(\n        value.year,\n        currentYear,\n      );\n      date.setFullYear(normalizedTwoDigitYear, 0, 1);\n      date.setHours(0, 0, 0, 0);\n      return date;\n    }\n\n    const year =\n      !(\"era\" in flags) || flags.era === 1 ? value.year : 1 - value.year;\n    date.setFullYear(year, 0, 1);\n    date.setHours(0, 0, 0, 0);\n    return date;\n  }\n}\n","import { getWeekYear } from \"../../../getWeekYear.mjs\";\nimport { startOfWeek } from \"../../../startOfWeek.mjs\";\nimport { Parser } from \"../Parser.mjs\";\nimport { mapValue, normalizeTwoDigitYear, parseNDigits } from \"../utils.mjs\";\n\n// Local week-numbering year\nexport class LocalWeekYearParser extends Parser {\n  priority = 130;\n\n  parse(dateString, token, match) {\n    const valueCallback = (year) => ({\n      year,\n      isTwoDigitYear: token === \"YY\",\n    });\n\n    switch (token) {\n      case \"Y\":\n        return mapValue(parseNDigits(4, dateString), valueCallback);\n      case \"Yo\":\n        return mapValue(\n          match.ordinalNumber(dateString, {\n            unit: \"year\",\n          }),\n          valueCallback,\n        );\n      default:\n        return mapValue(parseNDigits(token.length, dateString), valueCallback);\n    }\n  }\n\n  validate(_date, value) {\n    return value.isTwoDigitYear || value.year > 0;\n  }\n\n  set(date, flags, value, options) {\n    const currentYear = getWeekYear(date, options);\n\n    if (value.isTwoDigitYear) {\n      const normalizedTwoDigitYear = normalizeTwoDigitYear(\n        value.year,\n        currentYear,\n      );\n      date.setFullYear(\n        normalizedTwoDigitYear,\n        0,\n        options.firstWeekContainsDate,\n      );\n      date.setHours(0, 0, 0, 0);\n      return startOfWeek(date, options);\n    }\n\n    const year =\n      !(\"era\" in flags) || flags.era === 1 ? value.year : 1 - value.year;\n    date.setFullYear(year, 0, options.firstWeekContainsDate);\n    date.setHours(0, 0, 0, 0);\n    return startOfWeek(date, options);\n  }\n\n  incompatibleTokens = [\n    \"y\",\n    \"R\",\n    \"u\",\n    \"Q\",\n    \"q\",\n    \"M\",\n    \"L\",\n    \"I\",\n    \"d\",\n    \"D\",\n    \"i\",\n    \"t\",\n    \"T\",\n  ];\n}\n","import { startOfISOWeek } from \"../../../startOfISOWeek.mjs\";\nimport { constructFrom } from \"../../../constructFrom.mjs\";\nimport { Parser } from \"../Parser.mjs\";\nimport { parseNDigitsSigned } from \"../utils.mjs\";\n\n// ISO week-numbering year\nexport class ISOWeekYearParser extends Parser {\n  priority = 130;\n\n  parse(dateString, token) {\n    if (token === \"R\") {\n      return parseNDigitsSigned(4, dateString);\n    }\n\n    return parseNDigitsSigned(token.length, dateString);\n  }\n\n  set(date, _flags, value) {\n    const firstWeekOfYear = constructFrom(date, 0);\n    firstWeekOfYear.setFullYear(value, 0, 4);\n    firstWeekOfYear.setHours(0, 0, 0, 0);\n    return startOfISOWeek(firstWeekOfYear);\n  }\n\n  incompatibleTokens = [\n    \"G\",\n    \"y\",\n    \"Y\",\n    \"u\",\n    \"Q\",\n    \"q\",\n    \"M\",\n    \"L\",\n    \"w\",\n    \"d\",\n    \"D\",\n    \"e\",\n    \"c\",\n    \"t\",\n    \"T\",\n  ];\n}\n","import { Parser } from \"../Parser.mjs\";\nimport { parseNDigitsSigned } from \"../utils.mjs\";\n\nexport class ExtendedYearParser extends Parser {\n  priority = 130;\n\n  parse(dateString, token) {\n    if (token === \"u\") {\n      return parseNDigitsSigned(4, dateString);\n    }\n\n    return parseNDigitsSigned(token.length, dateString);\n  }\n\n  set(date, _flags, value) {\n    date.setFullYear(value, 0, 1);\n    date.setHours(0, 0, 0, 0);\n    return date;\n  }\n\n  incompatibleTokens = [\"G\", \"y\", \"Y\", \"R\", \"w\", \"I\", \"i\", \"e\", \"c\", \"t\", \"T\"];\n}\n","import { Parser } from \"../Parser.mjs\";\nimport { parseNDigits } from \"../utils.mjs\";\n\nexport class QuarterParser extends Parser {\n  priority = 120;\n\n  parse(dateString, token, match) {\n    switch (token) {\n      // 1, 2, 3, 4\n      case \"Q\":\n      case \"QQ\": // 01, 02, 03, 04\n        return parseNDigits(token.length, dateString);\n      // 1st, 2nd, 3rd, 4th\n      case \"Qo\":\n        return match.ordinalNumber(dateString, { unit: \"quarter\" });\n      // Q1, Q2, Q3, Q4\n      case \"QQQ\":\n        return (\n          match.quarter(dateString, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          }) ||\n          match.quarter(dateString, {\n            width: \"narrow\",\n            context: \"formatting\",\n          })\n        );\n\n      // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n      case \"QQQQQ\":\n        return match.quarter(dateString, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // 1st quarter, 2nd quarter, ...\n      case \"QQQQ\":\n      default:\n        return (\n          match.quarter(dateString, {\n            width: \"wide\",\n            context: \"formatting\",\n          }) ||\n          match.quarter(dateString, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          }) ||\n          match.quarter(dateString, {\n            width: \"narrow\",\n            context: \"formatting\",\n          })\n        );\n    }\n  }\n\n  validate(_date, value) {\n    return value >= 1 && value <= 4;\n  }\n\n  set(date, _flags, value) {\n    date.setMonth((value - 1) * 3, 1);\n    date.setHours(0, 0, 0, 0);\n    return date;\n  }\n\n  incompatibleTokens = [\n    \"Y\",\n    \"R\",\n    \"q\",\n    \"M\",\n    \"L\",\n    \"w\",\n    \"I\",\n    \"d\",\n    \"D\",\n    \"i\",\n    \"e\",\n    \"c\",\n    \"t\",\n    \"T\",\n  ];\n}\n","import { Parser } from \"../Parser.mjs\";\nimport { parseNDigits } from \"../utils.mjs\";\n\nexport class StandAloneQuarterParser extends Parser {\n  priority = 120;\n\n  parse(dateString, token, match) {\n    switch (token) {\n      // 1, 2, 3, 4\n      case \"q\":\n      case \"qq\": // 01, 02, 03, 04\n        return parseNDigits(token.length, dateString);\n      // 1st, 2nd, 3rd, 4th\n      case \"qo\":\n        return match.ordinalNumber(dateString, { unit: \"quarter\" });\n      // Q1, Q2, Q3, Q4\n      case \"qqq\":\n        return (\n          match.quarter(dateString, {\n            width: \"abbreviated\",\n            context: \"standalone\",\n          }) ||\n          match.quarter(dateString, {\n            width: \"narrow\",\n            context: \"standalone\",\n          })\n        );\n\n      // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n      case \"qqqqq\":\n        return match.quarter(dateString, {\n          width: \"narrow\",\n          context: \"standalone\",\n        });\n      // 1st quarter, 2nd quarter, ...\n      case \"qqqq\":\n      default:\n        return (\n          match.quarter(dateString, {\n            width: \"wide\",\n            context: \"standalone\",\n          }) ||\n          match.quarter(dateString, {\n            width: \"abbreviated\",\n            context: \"standalone\",\n          }) ||\n          match.quarter(dateString, {\n            width: \"narrow\",\n            context: \"standalone\",\n          })\n        );\n    }\n  }\n\n  validate(_date, value) {\n    return value >= 1 && value <= 4;\n  }\n\n  set(date, _flags, value) {\n    date.setMonth((value - 1) * 3, 1);\n    date.setHours(0, 0, 0, 0);\n    return date;\n  }\n\n  incompatibleTokens = [\n    \"Y\",\n    \"R\",\n    \"Q\",\n    \"M\",\n    \"L\",\n    \"w\",\n    \"I\",\n    \"d\",\n    \"D\",\n    \"i\",\n    \"e\",\n    \"c\",\n    \"t\",\n    \"T\",\n  ];\n}\n","import { numericPatterns } from \"../constants.mjs\";\nimport { Parser } from \"../Parser.mjs\";\nimport { mapValue, parseNDigits, parseNumericPattern } from \"../utils.mjs\";\n\nexport class MonthParser extends Parser {\n  incompatibleTokens = [\n    \"Y\",\n    \"R\",\n    \"q\",\n    \"Q\",\n    \"L\",\n    \"w\",\n    \"I\",\n    \"D\",\n    \"i\",\n    \"e\",\n    \"c\",\n    \"t\",\n    \"T\",\n  ];\n\n  priority = 110;\n\n  parse(dateString, token, match) {\n    const valueCallback = (value) => value - 1;\n\n    switch (token) {\n      // 1, 2, ..., 12\n      case \"M\":\n        return mapValue(\n          parseNumericPattern(numericPatterns.month, dateString),\n          valueCallback,\n        );\n      // 01, 02, ..., 12\n      case \"MM\":\n        return mapValue(parseNDigits(2, dateString), valueCallback);\n      // 1st, 2nd, ..., 12th\n      case \"Mo\":\n        return mapValue(\n          match.ordinalNumber(dateString, {\n            unit: \"month\",\n          }),\n          valueCallback,\n        );\n      // Jan, Feb, ..., Dec\n      case \"MMM\":\n        return (\n          match.month(dateString, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          }) ||\n          match.month(dateString, { width: \"narrow\", context: \"formatting\" })\n        );\n\n      // J, F, ..., D\n      case \"MMMMM\":\n        return match.month(dateString, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // January, February, ..., December\n      case \"MMMM\":\n      default:\n        return (\n          match.month(dateString, { width: \"wide\", context: \"formatting\" }) ||\n          match.month(dateString, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          }) ||\n          match.month(dateString, { width: \"narrow\", context: \"formatting\" })\n        );\n    }\n  }\n\n  validate(_date, value) {\n    return value >= 0 && value <= 11;\n  }\n\n  set(date, _flags, value) {\n    date.setMonth(value, 1);\n    date.setHours(0, 0, 0, 0);\n    return date;\n  }\n}\n","import { numericPatterns } from \"../constants.mjs\";\nimport { Parser } from \"../Parser.mjs\";\nimport { mapValue, parseNDigits, parseNumericPattern } from \"../utils.mjs\";\n\nexport class StandAloneMonthParser extends Parser {\n  priority = 110;\n\n  parse(dateString, token, match) {\n    const valueCallback = (value) => value - 1;\n\n    switch (token) {\n      // 1, 2, ..., 12\n      case \"L\":\n        return mapValue(\n          parseNumericPattern(numericPatterns.month, dateString),\n          valueCallback,\n        );\n      // 01, 02, ..., 12\n      case \"LL\":\n        return mapValue(parseNDigits(2, dateString), valueCallback);\n      // 1st, 2nd, ..., 12th\n      case \"Lo\":\n        return mapValue(\n          match.ordinalNumber(dateString, {\n            unit: \"month\",\n          }),\n          valueCallback,\n        );\n      // Jan, Feb, ..., Dec\n      case \"LLL\":\n        return (\n          match.month(dateString, {\n            width: \"abbreviated\",\n            context: \"standalone\",\n          }) ||\n          match.month(dateString, { width: \"narrow\", context: \"standalone\" })\n        );\n\n      // J, F, ..., D\n      case \"LLLLL\":\n        return match.month(dateString, {\n          width: \"narrow\",\n          context: \"standalone\",\n        });\n      // January, February, ..., December\n      case \"LLLL\":\n      default:\n        return (\n          match.month(dateString, { width: \"wide\", context: \"standalone\" }) ||\n          match.month(dateString, {\n            width: \"abbreviated\",\n            context: \"standalone\",\n          }) ||\n          match.month(dateString, { width: \"narrow\", context: \"standalone\" })\n        );\n    }\n  }\n\n  validate(_date, value) {\n    return value >= 0 && value <= 11;\n  }\n\n  set(date, _flags, value) {\n    date.setMonth(value, 1);\n    date.setHours(0, 0, 0, 0);\n    return date;\n  }\n\n  incompatibleTokens = [\n    \"Y\",\n    \"R\",\n    \"q\",\n    \"Q\",\n    \"M\",\n    \"w\",\n    \"I\",\n    \"D\",\n    \"i\",\n    \"e\",\n    \"c\",\n    \"t\",\n    \"T\",\n  ];\n}\n","import { getWeek } from \"./getWeek.mjs\";\nimport { toDate } from \"./toDate.mjs\";\n\n/**\n * The {@link setWeek} function options.\n */\n\n/**\n * @name setWeek\n * @category Week Helpers\n * @summary Set the local week to the given date.\n *\n * @description\n * Set the local week to the given date, saving the weekday number.\n * The exact calculation depends on the values of\n * `options.weekStartsOn` (which is the index of the first day of the week)\n * and `options.firstWeekContainsDate` (which is the day of January, which is always in\n * the first week of the week-numbering year)\n *\n * Week numbering: https://en.wikipedia.org/wiki/Week#The_ISO_week_date_system\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The date to be changed\n * @param week - The week of the new date\n * @param options - An object with options\n *\n * @returns The new date with the local week set\n *\n * @example\n * // Set the 1st week to 2 January 2005 with default options:\n * const result = setWeek(new Date(2005, 0, 2), 1)\n * //=> Sun Dec 26 2004 00:00:00\n *\n * @example\n * // Set the 1st week to 2 January 2005,\n * // if Monday is the first day of the week,\n * // and the first week of the year always contains 4 January:\n * const result = setWeek(new Date(2005, 0, 2), 1, {\n *   weekStartsOn: 1,\n *   firstWeekContainsDate: 4\n * })\n * //=> Sun Jan 4 2004 00:00:00\n */\nexport function setWeek(date, week, options) {\n  const _date = toDate(date);\n  const diff = getWeek(_date, options) - week;\n  _date.setDate(_date.getDate() - diff * 7);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default setWeek;\n","import { setWeek } from \"../../../setWeek.mjs\";\nimport { startOfWeek } from \"../../../startOfWeek.mjs\";\nimport { numericPatterns } from \"../constants.mjs\";\nimport { Parser } from \"../Parser.mjs\";\nimport { parseNDigits, parseNumericPattern } from \"../utils.mjs\";\n\n// Local week of year\nexport class LocalWeekParser extends Parser {\n  priority = 100;\n\n  parse(dateString, token, match) {\n    switch (token) {\n      case \"w\":\n        return parseNumericPattern(numericPatterns.week, dateString);\n      case \"wo\":\n        return match.ordinalNumber(dateString, { unit: \"week\" });\n      default:\n        return parseNDigits(token.length, dateString);\n    }\n  }\n\n  validate(_date, value) {\n    return value >= 1 && value <= 53;\n  }\n\n  set(date, _flags, value, options) {\n    return startOfWeek(setWeek(date, value, options), options);\n  }\n\n  incompatibleTokens = [\n    \"y\",\n    \"R\",\n    \"u\",\n    \"q\",\n    \"Q\",\n    \"M\",\n    \"L\",\n    \"I\",\n    \"d\",\n    \"D\",\n    \"i\",\n    \"t\",\n    \"T\",\n  ];\n}\n","import { getISOWeek } from \"./getISOWeek.mjs\";\nimport { toDate } from \"./toDate.mjs\";\n\n/**\n * @name setISOWeek\n * @category ISO Week Helpers\n * @summary Set the ISO week to the given date.\n *\n * @description\n * Set the ISO week to the given date, saving the weekday number.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The date to be changed\n * @param week - The ISO week of the new date\n *\n * @returns The new date with the ISO week set\n *\n * @example\n * // Set the 53rd ISO week to 7 August 2004:\n * const result = setISOWeek(new Date(2004, 7, 7), 53)\n * //=> Sat Jan 01 2005 00:00:00\n */\nexport function setISOWeek(date, week) {\n  const _date = toDate(date);\n  const diff = getISOWeek(_date) - week;\n  _date.setDate(_date.getDate() - diff * 7);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default setISOWeek;\n","import { setISOWeek } from \"../../../setISOWeek.mjs\";\nimport { startOfISOWeek } from \"../../../startOfISOWeek.mjs\";\nimport { numericPatterns } from \"../constants.mjs\";\nimport { Parser } from \"../Parser.mjs\";\nimport { parseNDigits, parseNumericPattern } from \"../utils.mjs\";\n\n// ISO week of year\nexport class ISOWeekParser extends Parser {\n  priority = 100;\n\n  parse(dateString, token, match) {\n    switch (token) {\n      case \"I\":\n        return parseNumericPattern(numericPatterns.week, dateString);\n      case \"Io\":\n        return match.ordinalNumber(dateString, { unit: \"week\" });\n      default:\n        return parseNDigits(token.length, dateString);\n    }\n  }\n\n  validate(_date, value) {\n    return value >= 1 && value <= 53;\n  }\n\n  set(date, _flags, value) {\n    return startOfISOWeek(setISOWeek(date, value));\n  }\n\n  incompatibleTokens = [\n    \"y\",\n    \"Y\",\n    \"u\",\n    \"q\",\n    \"Q\",\n    \"M\",\n    \"L\",\n    \"w\",\n    \"d\",\n    \"D\",\n    \"e\",\n    \"c\",\n    \"t\",\n    \"T\",\n  ];\n}\n","import { numericPatterns } from \"../constants.mjs\";\nimport { Parser } from \"../Parser.mjs\";\nimport {\n  isLeapYearIndex,\n  parseNDigits,\n  parseNumericPattern,\n} from \"../utils.mjs\";\n\nconst DAYS_IN_MONTH = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\nconst DAYS_IN_MONTH_LEAP_YEAR = [\n  31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31,\n];\n\n// Day of the month\nexport class DateParser extends Parser {\n  priority = 90;\n  subPriority = 1;\n\n  parse(dateString, token, match) {\n    switch (token) {\n      case \"d\":\n        return parseNumericPattern(numericPatterns.date, dateString);\n      case \"do\":\n        return match.ordinalNumber(dateString, { unit: \"date\" });\n      default:\n        return parseNDigits(token.length, dateString);\n    }\n  }\n\n  validate(date, value) {\n    const year = date.getFullYear();\n    const isLeapYear = isLeapYearIndex(year);\n    const month = date.getMonth();\n    if (isLeapYear) {\n      return value >= 1 && value <= DAYS_IN_MONTH_LEAP_YEAR[month];\n    } else {\n      return value >= 1 && value <= DAYS_IN_MONTH[month];\n    }\n  }\n\n  set(date, _flags, value) {\n    date.setDate(value);\n    date.setHours(0, 0, 0, 0);\n    return date;\n  }\n\n  incompatibleTokens = [\n    \"Y\",\n    \"R\",\n    \"q\",\n    \"Q\",\n    \"w\",\n    \"I\",\n    \"D\",\n    \"i\",\n    \"e\",\n    \"c\",\n    \"t\",\n    \"T\",\n  ];\n}\n","import { numericPatterns } from \"../constants.mjs\";\nimport { Parser } from \"../Parser.mjs\";\nimport {\n  isLeapYearIndex,\n  parseNDigits,\n  parseNumericPattern,\n} from \"../utils.mjs\";\n\nexport class DayOfYearParser extends Parser {\n  priority = 90;\n\n  subpriority = 1;\n\n  parse(dateString, token, match) {\n    switch (token) {\n      case \"D\":\n      case \"DD\":\n        return parseNumericPattern(numericPatterns.dayOfYear, dateString);\n      case \"Do\":\n        return match.ordinalNumber(dateString, { unit: \"date\" });\n      default:\n        return parseNDigits(token.length, dateString);\n    }\n  }\n\n  validate(date, value) {\n    const year = date.getFullYear();\n    const isLeapYear = isLeapYearIndex(year);\n    if (isLeapYear) {\n      return value >= 1 && value <= 366;\n    } else {\n      return value >= 1 && value <= 365;\n    }\n  }\n\n  set(date, _flags, value) {\n    date.setMonth(0, value);\n    date.setHours(0, 0, 0, 0);\n    return date;\n  }\n\n  incompatibleTokens = [\n    \"Y\",\n    \"R\",\n    \"q\",\n    \"Q\",\n    \"M\",\n    \"L\",\n    \"w\",\n    \"I\",\n    \"d\",\n    \"E\",\n    \"i\",\n    \"e\",\n    \"c\",\n    \"t\",\n    \"T\",\n  ];\n}\n","import { addDays } from \"./addDays.mjs\";\nimport { toDate } from \"./toDate.mjs\";\nimport { getDefaultOptions } from \"./_lib/defaultOptions.mjs\";\n\n/**\n * The {@link setDay} function options.\n */\n\n/**\n * @name setDay\n * @category Weekday Helpers\n * @summary Set the day of the week to the given date.\n *\n * @description\n * Set the day of the week to the given date.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The date to be changed\n * @param day - The day of the week of the new date\n * @param options - An object with options.\n *\n * @returns The new date with the day of the week set\n *\n * @example\n * // Set week day to Sunday, with the default weekStartsOn of Sunday:\n * const result = setDay(new Date(2014, 8, 1), 0)\n * //=> Sun Aug 31 2014 00:00:00\n *\n * @example\n * // Set week day to Sunday, with a weekStartsOn of Monday:\n * const result = setDay(new Date(2014, 8, 1), 0, { weekStartsOn: 1 })\n * //=> Sun Sep 07 2014 00:00:00\n */\nexport function setDay(date, day, options) {\n  const defaultOptions = getDefaultOptions();\n  const weekStartsOn =\n    options?.weekStartsOn ??\n    options?.locale?.options?.weekStartsOn ??\n    defaultOptions.weekStartsOn ??\n    defaultOptions.locale?.options?.weekStartsOn ??\n    0;\n\n  const _date = toDate(date);\n  const currentDay = _date.getDay();\n\n  const remainder = day % 7;\n  const dayIndex = (remainder + 7) % 7;\n\n  const delta = 7 - weekStartsOn;\n  const diff =\n    day < 0 || day > 6\n      ? day - ((currentDay + delta) % 7)\n      : ((dayIndex + delta) % 7) - ((currentDay + delta) % 7);\n  return addDays(_date, diff);\n}\n\n// Fallback for modularized imports:\nexport default setDay;\n","import { setDay } from \"../../../setDay.mjs\";\nimport { Parser } from \"../Parser.mjs\";\n\n// Day of week\nexport class DayParser extends Parser {\n  priority = 90;\n\n  parse(dateString, token, match) {\n    switch (token) {\n      // Tue\n      case \"E\":\n      case \"EE\":\n      case \"EEE\":\n        return (\n          match.day(dateString, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          }) ||\n          match.day(dateString, { width: \"short\", context: \"formatting\" }) ||\n          match.day(dateString, { width: \"narrow\", context: \"formatting\" })\n        );\n\n      // T\n      case \"EEEEE\":\n        return match.day(dateString, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // Tu\n      case \"EEEEEE\":\n        return (\n          match.day(dateString, { width: \"short\", context: \"formatting\" }) ||\n          match.day(dateString, { width: \"narrow\", context: \"formatting\" })\n        );\n\n      // Tuesday\n      case \"EEEE\":\n      default:\n        return (\n          match.day(dateString, { width: \"wide\", context: \"formatting\" }) ||\n          match.day(dateString, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          }) ||\n          match.day(dateString, { width: \"short\", context: \"formatting\" }) ||\n          match.day(dateString, { width: \"narrow\", context: \"formatting\" })\n        );\n    }\n  }\n\n  validate(_date, value) {\n    return value >= 0 && value <= 6;\n  }\n\n  set(date, _flags, value, options) {\n    date = setDay(date, value, options);\n    date.setHours(0, 0, 0, 0);\n    return date;\n  }\n\n  incompatibleTokens = [\"D\", \"i\", \"e\", \"c\", \"t\", \"T\"];\n}\n","import { setDay } from \"../../../setDay.mjs\";\nimport { Parser } from \"../Parser.mjs\";\nimport { mapValue, parseNDigits } from \"../utils.mjs\";\n\n// Local day of week\nexport class LocalDayParser extends Parser {\n  priority = 90;\n  parse(dateString, token, match, options) {\n    const valueCallback = (value) => {\n      // We want here floor instead of trunc, so we get -7 for value 0 instead of 0\n      const wholeWeekDays = Math.floor((value - 1) / 7) * 7;\n      return ((value + options.weekStartsOn + 6) % 7) + wholeWeekDays;\n    };\n\n    switch (token) {\n      // 3\n      case \"e\":\n      case \"ee\": // 03\n        return mapValue(parseNDigits(token.length, dateString), valueCallback);\n      // 3rd\n      case \"eo\":\n        return mapValue(\n          match.ordinalNumber(dateString, {\n            unit: \"day\",\n          }),\n          valueCallback,\n        );\n      // Tue\n      case \"eee\":\n        return (\n          match.day(dateString, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          }) ||\n          match.day(dateString, { width: \"short\", context: \"formatting\" }) ||\n          match.day(dateString, { width: \"narrow\", context: \"formatting\" })\n        );\n\n      // T\n      case \"eeeee\":\n        return match.day(dateString, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // Tu\n      case \"eeeeee\":\n        return (\n          match.day(dateString, { width: \"short\", context: \"formatting\" }) ||\n          match.day(dateString, { width: \"narrow\", context: \"formatting\" })\n        );\n\n      // Tuesday\n      case \"eeee\":\n      default:\n        return (\n          match.day(dateString, { width: \"wide\", context: \"formatting\" }) ||\n          match.day(dateString, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          }) ||\n          match.day(dateString, { width: \"short\", context: \"formatting\" }) ||\n          match.day(dateString, { width: \"narrow\", context: \"formatting\" })\n        );\n    }\n  }\n\n  validate(_date, value) {\n    return value >= 0 && value <= 6;\n  }\n\n  set(date, _flags, value, options) {\n    date = setDay(date, value, options);\n    date.setHours(0, 0, 0, 0);\n    return date;\n  }\n\n  incompatibleTokens = [\n    \"y\",\n    \"R\",\n    \"u\",\n    \"q\",\n    \"Q\",\n    \"M\",\n    \"L\",\n    \"I\",\n    \"d\",\n    \"D\",\n    \"E\",\n    \"i\",\n    \"c\",\n    \"t\",\n    \"T\",\n  ];\n}\n","import { setDay } from \"../../../setDay.mjs\";\nimport { Parser } from \"../Parser.mjs\";\nimport { mapValue, parseNDigits } from \"../utils.mjs\";\n\n// Stand-alone local day of week\nexport class StandAloneLocalDayParser extends Parser {\n  priority = 90;\n\n  parse(dateString, token, match, options) {\n    const valueCallback = (value) => {\n      // We want here floor instead of trunc, so we get -7 for value 0 instead of 0\n      const wholeWeekDays = Math.floor((value - 1) / 7) * 7;\n      return ((value + options.weekStartsOn + 6) % 7) + wholeWeekDays;\n    };\n\n    switch (token) {\n      // 3\n      case \"c\":\n      case \"cc\": // 03\n        return mapValue(parseNDigits(token.length, dateString), valueCallback);\n      // 3rd\n      case \"co\":\n        return mapValue(\n          match.ordinalNumber(dateString, {\n            unit: \"day\",\n          }),\n          valueCallback,\n        );\n      // Tue\n      case \"ccc\":\n        return (\n          match.day(dateString, {\n            width: \"abbreviated\",\n            context: \"standalone\",\n          }) ||\n          match.day(dateString, { width: \"short\", context: \"standalone\" }) ||\n          match.day(dateString, { width: \"narrow\", context: \"standalone\" })\n        );\n\n      // T\n      case \"ccccc\":\n        return match.day(dateString, {\n          width: \"narrow\",\n          context: \"standalone\",\n        });\n      // Tu\n      case \"cccccc\":\n        return (\n          match.day(dateString, { width: \"short\", context: \"standalone\" }) ||\n          match.day(dateString, { width: \"narrow\", context: \"standalone\" })\n        );\n\n      // Tuesday\n      case \"cccc\":\n      default:\n        return (\n          match.day(dateString, { width: \"wide\", context: \"standalone\" }) ||\n          match.day(dateString, {\n            width: \"abbreviated\",\n            context: \"standalone\",\n          }) ||\n          match.day(dateString, { width: \"short\", context: \"standalone\" }) ||\n          match.day(dateString, { width: \"narrow\", context: \"standalone\" })\n        );\n    }\n  }\n\n  validate(_date, value) {\n    return value >= 0 && value <= 6;\n  }\n\n  set(date, _flags, value, options) {\n    date = setDay(date, value, options);\n    date.setHours(0, 0, 0, 0);\n    return date;\n  }\n\n  incompatibleTokens = [\n    \"y\",\n    \"R\",\n    \"u\",\n    \"q\",\n    \"Q\",\n    \"M\",\n    \"L\",\n    \"I\",\n    \"d\",\n    \"D\",\n    \"E\",\n    \"i\",\n    \"e\",\n    \"t\",\n    \"T\",\n  ];\n}\n","import { addDays } from \"./addDays.mjs\";\nimport { getISODay } from \"./getISODay.mjs\";\nimport { toDate } from \"./toDate.mjs\";\n\n/**\n * @name setISODay\n * @category Weekday Helpers\n * @summary Set the day of the ISO week to the given date.\n *\n * @description\n * Set the day of the ISO week to the given date.\n * ISO week starts with Monday.\n * 7 is the index of Sunday, 1 is the index of Monday etc.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The date to be changed\n * @param day - The day of the ISO week of the new date\n *\n * @returns The new date with the day of the ISO week set\n *\n * @example\n * // Set Sunday to 1 September 2014:\n * const result = setISODay(new Date(2014, 8, 1), 7)\n * //=> Sun Sep 07 2014 00:00:00\n */\nexport function setISODay(date, day) {\n  const _date = toDate(date);\n  const currentDay = getISODay(_date);\n  const diff = day - currentDay;\n  return addDays(_date, diff);\n}\n\n// Fallback for modularized imports:\nexport default setISODay;\n","import { setISODay } from \"../../../setISODay.mjs\";\nimport { Parser } from \"../Parser.mjs\";\nimport { mapValue, parseNDigits } from \"../utils.mjs\";\n\n// ISO day of week\nexport class ISODayParser extends Parser {\n  priority = 90;\n\n  parse(dateString, token, match) {\n    const valueCallback = (value) => {\n      if (value === 0) {\n        return 7;\n      }\n      return value;\n    };\n\n    switch (token) {\n      // 2\n      case \"i\":\n      case \"ii\": // 02\n        return parseNDigits(token.length, dateString);\n      // 2nd\n      case \"io\":\n        return match.ordinalNumber(dateString, { unit: \"day\" });\n      // Tue\n      case \"iii\":\n        return mapValue(\n          match.day(dateString, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          }) ||\n            match.day(dateString, {\n              width: \"short\",\n              context: \"formatting\",\n            }) ||\n            match.day(dateString, {\n              width: \"narrow\",\n              context: \"formatting\",\n            }),\n          valueCallback,\n        );\n      // T\n      case \"iiiii\":\n        return mapValue(\n          match.day(dateString, {\n            width: \"narrow\",\n            context: \"formatting\",\n          }),\n          valueCallback,\n        );\n      // Tu\n      case \"iiiiii\":\n        return mapValue(\n          match.day(dateString, {\n            width: \"short\",\n            context: \"formatting\",\n          }) ||\n            match.day(dateString, {\n              width: \"narrow\",\n              context: \"formatting\",\n            }),\n          valueCallback,\n        );\n      // Tuesday\n      case \"iiii\":\n      default:\n        return mapValue(\n          match.day(dateString, {\n            width: \"wide\",\n            context: \"formatting\",\n          }) ||\n            match.day(dateString, {\n              width: \"abbreviated\",\n              context: \"formatting\",\n            }) ||\n            match.day(dateString, {\n              width: \"short\",\n              context: \"formatting\",\n            }) ||\n            match.day(dateString, {\n              width: \"narrow\",\n              context: \"formatting\",\n            }),\n          valueCallback,\n        );\n    }\n  }\n\n  validate(_date, value) {\n    return value >= 1 && value <= 7;\n  }\n\n  set(date, _flags, value) {\n    date = setISODay(date, value);\n    date.setHours(0, 0, 0, 0);\n    return date;\n  }\n\n  incompatibleTokens = [\n    \"y\",\n    \"Y\",\n    \"u\",\n    \"q\",\n    \"Q\",\n    \"M\",\n    \"L\",\n    \"w\",\n    \"d\",\n    \"D\",\n    \"E\",\n    \"e\",\n    \"c\",\n    \"t\",\n    \"T\",\n  ];\n}\n","import { Parser } from \"../Parser.mjs\";\nimport { dayPeriodEnumToHours } from \"../utils.mjs\";\n\nexport class AMPMParser extends Parser {\n  priority = 80;\n\n  parse(dateString, token, match) {\n    switch (token) {\n      case \"a\":\n      case \"aa\":\n      case \"aaa\":\n        return (\n          match.dayPeriod(dateString, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          }) ||\n          match.dayPeriod(dateString, {\n            width: \"narrow\",\n            context: \"formatting\",\n          })\n        );\n\n      case \"aaaaa\":\n        return match.dayPeriod(dateString, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      case \"aaaa\":\n      default:\n        return (\n          match.dayPeriod(dateString, {\n            width: \"wide\",\n            context: \"formatting\",\n          }) ||\n          match.dayPeriod(dateString, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          }) ||\n          match.dayPeriod(dateString, {\n            width: \"narrow\",\n            context: \"formatting\",\n          })\n        );\n    }\n  }\n\n  set(date, _flags, value) {\n    date.setHours(dayPeriodEnumToHours(value), 0, 0, 0);\n    return date;\n  }\n\n  incompatibleTokens = [\"b\", \"B\", \"H\", \"k\", \"t\", \"T\"];\n}\n","import { Parser } from \"../Parser.mjs\";\nimport { dayPeriodEnumToHours } from \"../utils.mjs\";\n\nexport class AMPMMidnightParser extends Parser {\n  priority = 80;\n\n  parse(dateString, token, match) {\n    switch (token) {\n      case \"b\":\n      case \"bb\":\n      case \"bbb\":\n        return (\n          match.dayPeriod(dateString, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          }) ||\n          match.dayPeriod(dateString, {\n            width: \"narrow\",\n            context: \"formatting\",\n          })\n        );\n\n      case \"bbbbb\":\n        return match.dayPeriod(dateString, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      case \"bbbb\":\n      default:\n        return (\n          match.dayPeriod(dateString, {\n            width: \"wide\",\n            context: \"formatting\",\n          }) ||\n          match.dayPeriod(dateString, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          }) ||\n          match.dayPeriod(dateString, {\n            width: \"narrow\",\n            context: \"formatting\",\n          })\n        );\n    }\n  }\n\n  set(date, _flags, value) {\n    date.setHours(dayPeriodEnumToHours(value), 0, 0, 0);\n    return date;\n  }\n\n  incompatibleTokens = [\"a\", \"B\", \"H\", \"k\", \"t\", \"T\"];\n}\n","import { Parser } from \"../Parser.mjs\";\nimport { dayPeriodEnumToHours } from \"../utils.mjs\";\n\n// in the morning, in the afternoon, in the evening, at night\nexport class DayPeriodParser extends Parser {\n  priority = 80;\n\n  parse(dateString, token, match) {\n    switch (token) {\n      case \"B\":\n      case \"BB\":\n      case \"BBB\":\n        return (\n          match.dayPeriod(dateString, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          }) ||\n          match.dayPeriod(dateString, {\n            width: \"narrow\",\n            context: \"formatting\",\n          })\n        );\n\n      case \"BBBBB\":\n        return match.dayPeriod(dateString, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      case \"BBBB\":\n      default:\n        return (\n          match.dayPeriod(dateString, {\n            width: \"wide\",\n            context: \"formatting\",\n          }) ||\n          match.dayPeriod(dateString, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          }) ||\n          match.dayPeriod(dateString, {\n            width: \"narrow\",\n            context: \"formatting\",\n          })\n        );\n    }\n  }\n\n  set(date, _flags, value) {\n    date.setHours(dayPeriodEnumToHours(value), 0, 0, 0);\n    return date;\n  }\n\n  incompatibleTokens = [\"a\", \"b\", \"t\", \"T\"];\n}\n","import { numericPatterns } from \"../constants.mjs\";\nimport { Parser } from \"../Parser.mjs\";\nimport { parseNDigits, parseNumericPattern } from \"../utils.mjs\";\n\nexport class Hour1to12Parser extends Parser {\n  priority = 70;\n\n  parse(dateString, token, match) {\n    switch (token) {\n      case \"h\":\n        return parseNumericPattern(numericPatterns.hour12h, dateString);\n      case \"ho\":\n        return match.ordinalNumber(dateString, { unit: \"hour\" });\n      default:\n        return parseNDigits(token.length, dateString);\n    }\n  }\n\n  validate(_date, value) {\n    return value >= 1 && value <= 12;\n  }\n\n  set(date, _flags, value) {\n    const isPM = date.getHours() >= 12;\n    if (isPM && value < 12) {\n      date.setHours(value + 12, 0, 0, 0);\n    } else if (!isPM && value === 12) {\n      date.setHours(0, 0, 0, 0);\n    } else {\n      date.setHours(value, 0, 0, 0);\n    }\n    return date;\n  }\n\n  incompatibleTokens = [\"H\", \"K\", \"k\", \"t\", \"T\"];\n}\n","import { numericPatterns } from \"../constants.mjs\";\nimport { Parser } from \"../Parser.mjs\";\nimport { parseNDigits, parseNumericPattern } from \"../utils.mjs\";\n\nexport class Hour0to23Parser extends Parser {\n  priority = 70;\n\n  parse(dateString, token, match) {\n    switch (token) {\n      case \"H\":\n        return parseNumericPattern(numericPatterns.hour23h, dateString);\n      case \"Ho\":\n        return match.ordinalNumber(dateString, { unit: \"hour\" });\n      default:\n        return parseNDigits(token.length, dateString);\n    }\n  }\n\n  validate(_date, value) {\n    return value >= 0 && value <= 23;\n  }\n\n  set(date, _flags, value) {\n    date.setHours(value, 0, 0, 0);\n    return date;\n  }\n\n  incompatibleTokens = [\"a\", \"b\", \"h\", \"K\", \"k\", \"t\", \"T\"];\n}\n","import { numericPatterns } from \"../constants.mjs\";\nimport { Parser } from \"../Parser.mjs\";\nimport { parseNDigits, parseNumericPattern } from \"../utils.mjs\";\n\nexport class Hour0To11Parser extends Parser {\n  priority = 70;\n\n  parse(dateString, token, match) {\n    switch (token) {\n      case \"K\":\n        return parseNumericPattern(numericPatterns.hour11h, dateString);\n      case \"Ko\":\n        return match.ordinalNumber(dateString, { unit: \"hour\" });\n      default:\n        return parseNDigits(token.length, dateString);\n    }\n  }\n\n  validate(_date, value) {\n    return value >= 0 && value <= 11;\n  }\n\n  set(date, _flags, value) {\n    const isPM = date.getHours() >= 12;\n    if (isPM && value < 12) {\n      date.setHours(value + 12, 0, 0, 0);\n    } else {\n      date.setHours(value, 0, 0, 0);\n    }\n    return date;\n  }\n\n  incompatibleTokens = [\"h\", \"H\", \"k\", \"t\", \"T\"];\n}\n","import { numericPatterns } from \"../constants.mjs\";\nimport { Parser } from \"../Parser.mjs\";\nimport { parseNDigits, parseNumericPattern } from \"../utils.mjs\";\n\nexport class Hour1To24Parser extends Parser {\n  priority = 70;\n\n  parse(dateString, token, match) {\n    switch (token) {\n      case \"k\":\n        return parseNumericPattern(numericPatterns.hour24h, dateString);\n      case \"ko\":\n        return match.ordinalNumber(dateString, { unit: \"hour\" });\n      default:\n        return parseNDigits(token.length, dateString);\n    }\n  }\n\n  validate(_date, value) {\n    return value >= 1 && value <= 24;\n  }\n\n  set(date, _flags, value) {\n    const hours = value <= 24 ? value % 24 : value;\n    date.setHours(hours, 0, 0, 0);\n    return date;\n  }\n\n  incompatibleTokens = [\"a\", \"b\", \"h\", \"H\", \"K\", \"t\", \"T\"];\n}\n","import { numericPatterns } from \"../constants.mjs\";\nimport { Parser } from \"../Parser.mjs\";\nimport { parseNDigits, parseNumericPattern } from \"../utils.mjs\";\n\nexport class MinuteParser extends Parser {\n  priority = 60;\n\n  parse(dateString, token, match) {\n    switch (token) {\n      case \"m\":\n        return parseNumericPattern(numericPatterns.minute, dateString);\n      case \"mo\":\n        return match.ordinalNumber(dateString, { unit: \"minute\" });\n      default:\n        return parseNDigits(token.length, dateString);\n    }\n  }\n\n  validate(_date, value) {\n    return value >= 0 && value <= 59;\n  }\n\n  set(date, _flags, value) {\n    date.setMinutes(value, 0, 0);\n    return date;\n  }\n\n  incompatibleTokens = [\"t\", \"T\"];\n}\n","import { numericPatterns } from \"../constants.mjs\";\nimport { Parser } from \"../Parser.mjs\";\nimport { parseNDigits, parseNumericPattern } from \"../utils.mjs\";\n\nexport class SecondParser extends Parser {\n  priority = 50;\n\n  parse(dateString, token, match) {\n    switch (token) {\n      case \"s\":\n        return parseNumericPattern(numericPatterns.second, dateString);\n      case \"so\":\n        return match.ordinalNumber(dateString, { unit: \"second\" });\n      default:\n        return parseNDigits(token.length, dateString);\n    }\n  }\n\n  validate(_date, value) {\n    return value >= 0 && value <= 59;\n  }\n\n  set(date, _flags, value) {\n    date.setSeconds(value, 0);\n    return date;\n  }\n\n  incompatibleTokens = [\"t\", \"T\"];\n}\n","import { Parser } from \"../Parser.mjs\";\nimport { mapValue, parseNDigits } from \"../utils.mjs\";\n\nexport class FractionOfSecondParser extends Parser {\n  priority = 30;\n\n  parse(dateString, token) {\n    const valueCallback = (value) =>\n      Math.trunc(value * Math.pow(10, -token.length + 3));\n    return mapValue(parseNDigits(token.length, dateString), valueCallback);\n  }\n\n  set(date, _flags, value) {\n    date.setMilliseconds(value);\n    return date;\n  }\n\n  incompatibleTokens = [\"t\", \"T\"];\n}\n","import { constructFrom } from \"../../../constructFrom.mjs\";\nimport { getTimezoneOffsetInMilliseconds } from \"../../../_lib/getTimezoneOffsetInMilliseconds.mjs\";\nimport { timezonePatterns } from \"../constants.mjs\";\nimport { Parser } from \"../Parser.mjs\";\nimport { parseTimezonePattern } from \"../utils.mjs\";\n\n// Timezone (ISO-8601. +00:00 is `'Z'`)\nexport class ISOTimezoneWithZParser extends Parser {\n  priority = 10;\n\n  parse(dateString, token) {\n    switch (token) {\n      case \"X\":\n        return parseTimezonePattern(\n          timezonePatterns.basicOptionalMinutes,\n          dateString,\n        );\n      case \"XX\":\n        return parseTimezonePattern(timezonePatterns.basic, dateString);\n      case \"XXXX\":\n        return parseTimezonePattern(\n          timezonePatterns.basicOptionalSeconds,\n          dateString,\n        );\n      case \"XXXXX\":\n        return parseTimezonePattern(\n          timezonePatterns.extendedOptionalSeconds,\n          dateString,\n        );\n      case \"XXX\":\n      default:\n        return parseTimezonePattern(timezonePatterns.extended, dateString);\n    }\n  }\n\n  set(date, flags, value) {\n    if (flags.timestampIsSet) return date;\n    return constructFrom(\n      date,\n      date.getTime() - getTimezoneOffsetInMilliseconds(date) - value,\n    );\n  }\n\n  incompatibleTokens = [\"t\", \"T\", \"x\"];\n}\n","import { constructFrom } from \"../../../constructFrom.mjs\";\nimport { getTimezoneOffsetInMilliseconds } from \"../../../_lib/getTimezoneOffsetInMilliseconds.mjs\";\nimport { timezonePatterns } from \"../constants.mjs\";\nimport { Parser } from \"../Parser.mjs\";\nimport { parseTimezonePattern } from \"../utils.mjs\";\n\n// Timezone (ISO-8601)\nexport class ISOTimezoneParser extends Parser {\n  priority = 10;\n\n  parse(dateString, token) {\n    switch (token) {\n      case \"x\":\n        return parseTimezonePattern(\n          timezonePatterns.basicOptionalMinutes,\n          dateString,\n        );\n      case \"xx\":\n        return parseTimezonePattern(timezonePatterns.basic, dateString);\n      case \"xxxx\":\n        return parseTimezonePattern(\n          timezonePatterns.basicOptionalSeconds,\n          dateString,\n        );\n      case \"xxxxx\":\n        return parseTimezonePattern(\n          timezonePatterns.extendedOptionalSeconds,\n          dateString,\n        );\n      case \"xxx\":\n      default:\n        return parseTimezonePattern(timezonePatterns.extended, dateString);\n    }\n  }\n\n  set(date, flags, value) {\n    if (flags.timestampIsSet) return date;\n    return constructFrom(\n      date,\n      date.getTime() - getTimezoneOffsetInMilliseconds(date) - value,\n    );\n  }\n\n  incompatibleTokens = [\"t\", \"T\", \"X\"];\n}\n","import { constructFrom } from \"../../../constructFrom.mjs\";\nimport { Parser } from \"../Parser.mjs\";\nimport { parseAnyDigitsSigned } from \"../utils.mjs\";\n\nexport class TimestampSecondsParser extends Parser {\n  priority = 40;\n\n  parse(dateString) {\n    return parseAnyDigitsSigned(dateString);\n  }\n\n  set(date, _flags, value) {\n    return [constructFrom(date, value * 1000), { timestampIsSet: true }];\n  }\n\n  incompatibleTokens = \"*\";\n}\n","import { constructFrom } from \"../../../constructFrom.mjs\";\nimport { Parser } from \"../Parser.mjs\";\nimport { parseAnyDigitsSigned } from \"../utils.mjs\";\n\nexport class TimestampMillisecondsParser extends Parser {\n  priority = 20;\n\n  parse(dateString) {\n    return parseAnyDigitsSigned(dateString);\n  }\n\n  set(date, _flags, value) {\n    return [constructFrom(date, value), { timestampIsSet: true }];\n  }\n\n  incompatibleTokens = \"*\";\n}\n","import { EraParser } from \"./parsers/EraParser.mjs\";\nimport { YearParser } from \"./parsers/YearParser.mjs\";\nimport { LocalWeekYearParser } from \"./parsers/LocalWeekYearParser.mjs\";\nimport { ISOWeekYearParser } from \"./parsers/ISOWeekYearParser.mjs\";\nimport { ExtendedYearParser } from \"./parsers/ExtendedYearParser.mjs\";\nimport { QuarterParser } from \"./parsers/QuarterParser.mjs\";\nimport { StandAloneQuarterParser } from \"./parsers/StandAloneQuarterParser.mjs\";\nimport { MonthParser } from \"./parsers/MonthParser.mjs\";\nimport { StandAloneMonthParser } from \"./parsers/StandAloneMonthParser.mjs\";\nimport { LocalWeekParser } from \"./parsers/LocalWeekParser.mjs\";\nimport { ISOWeekParser } from \"./parsers/ISOWeekParser.mjs\";\nimport { DateParser } from \"./parsers/DateParser.mjs\";\nimport { DayOfYearParser } from \"./parsers/DayOfYearParser.mjs\";\nimport { DayParser } from \"./parsers/DayParser.mjs\";\nimport { LocalDayParser } from \"./parsers/LocalDayParser.mjs\";\nimport { StandAloneLocalDayParser } from \"./parsers/StandAloneLocalDayParser.mjs\";\nimport { ISODayParser } from \"./parsers/ISODayParser.mjs\";\nimport { AMPMParser } from \"./parsers/AMPMParser.mjs\";\nimport { AMPMMidnightParser } from \"./parsers/AMPMMidnightParser.mjs\";\nimport { DayPeriodParser } from \"./parsers/DayPeriodParser.mjs\";\nimport { Hour1to12Parser } from \"./parsers/Hour1to12Parser.mjs\";\nimport { Hour0to23Parser } from \"./parsers/Hour0to23Parser.mjs\";\nimport { Hour0To11Parser } from \"./parsers/Hour0To11Parser.mjs\";\nimport { Hour1To24Parser } from \"./parsers/Hour1To24Parser.mjs\";\nimport { MinuteParser } from \"./parsers/MinuteParser.mjs\";\nimport { SecondParser } from \"./parsers/SecondParser.mjs\";\nimport { FractionOfSecondParser } from \"./parsers/FractionOfSecondParser.mjs\";\nimport { ISOTimezoneWithZParser } from \"./parsers/ISOTimezoneWithZParser.mjs\";\nimport { ISOTimezoneParser } from \"./parsers/ISOTimezoneParser.mjs\";\nimport { TimestampSecondsParser } from \"./parsers/TimestampSecondsParser.mjs\";\nimport { TimestampMillisecondsParser } from \"./parsers/TimestampMillisecondsParser.mjs\";\n\n/*\n * |     | Unit                           |     | Unit                           |\n * |-----|--------------------------------|-----|--------------------------------|\n * |  a  | AM, PM                         |  A* | Milliseconds in day            |\n * |  b  | AM, PM, noon, midnight         |  B  | Flexible day period            |\n * |  c  | Stand-alone local day of week  |  C* | Localized hour w/ day period   |\n * |  d  | Day of month                   |  D  | Day of year                    |\n * |  e  | Local day of week              |  E  | Day of week                    |\n * |  f  |                                |  F* | Day of week in month           |\n * |  g* | Modified Julian day            |  G  | Era                            |\n * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |\n * |  i! | ISO day of week                |  I! | ISO week of year               |\n * |  j* | Localized hour w/ day period   |  J* | Localized hour w/o day period  |\n * |  k  | Hour [1-24]                    |  K  | Hour [0-11]                    |\n * |  l* | (deprecated)                   |  L  | Stand-alone month              |\n * |  m  | Minute                         |  M  | Month                          |\n * |  n  |                                |  N  |                                |\n * |  o! | Ordinal number modifier        |  O* | Timezone (GMT)                 |\n * |  p  |                                |  P  |                                |\n * |  q  | Stand-alone quarter            |  Q  | Quarter                        |\n * |  r* | Related Gregorian year         |  R! | ISO week-numbering year        |\n * |  s  | Second                         |  S  | Fraction of second             |\n * |  t! | Seconds timestamp              |  T! | Milliseconds timestamp         |\n * |  u  | Extended year                  |  U* | Cyclic year                    |\n * |  v* | Timezone (generic non-locat.)  |  V* | Timezone (location)            |\n * |  w  | Local week of year             |  W* | Week of month                  |\n * |  x  | Timezone (ISO-8601 w/o Z)      |  X  | Timezone (ISO-8601)            |\n * |  y  | Year (abs)                     |  Y  | Local week-numbering year      |\n * |  z* | Timezone (specific non-locat.) |  Z* | Timezone (aliases)             |\n *\n * Letters marked by * are not implemented but reserved by Unicode standard.\n *\n * Letters marked by ! are non-standard, but implemented by date-fns:\n * - `o` modifies the previous token to turn it into an ordinal (see `parse` docs)\n * - `i` is ISO day of week. For `i` and `ii` is returns numeric ISO week days,\n *   i.e. 7 for Sunday, 1 for Monday, etc.\n * - `I` is ISO week of year, as opposed to `w` which is local week of year.\n * - `R` is ISO week-numbering year, as opposed to `Y` which is local week-numbering year.\n *   `R` is supposed to be used in conjunction with `I` and `i`\n *   for universal ISO week-numbering date, whereas\n *   `Y` is supposed to be used in conjunction with `w` and `e`\n *   for week-numbering date specific to the locale.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any -- It's ok, we want any here\nexport const parsers = {\n  G: new EraParser(),\n  y: new YearParser(),\n  Y: new LocalWeekYearParser(),\n  R: new ISOWeekYearParser(),\n  u: new ExtendedYearParser(),\n  Q: new QuarterParser(),\n  q: new StandAloneQuarterParser(),\n  M: new MonthParser(),\n  L: new StandAloneMonthParser(),\n  w: new LocalWeekParser(),\n  I: new ISOWeekParser(),\n  d: new DateParser(),\n  D: new DayOfYearParser(),\n  E: new DayParser(),\n  e: new LocalDayParser(),\n  c: new StandAloneLocalDayParser(),\n  i: new ISODayParser(),\n  a: new AMPMParser(),\n  b: new AMPMMidnightParser(),\n  B: new DayPeriodParser(),\n  h: new Hour1to12Parser(),\n  H: new Hour0to23Parser(),\n  K: new Hour0To11Parser(),\n  k: new Hour1To24Parser(),\n  m: new MinuteParser(),\n  s: new SecondParser(),\n  S: new FractionOfSecondParser(),\n  X: new ISOTimezoneWithZParser(),\n  x: new ISOTimezoneParser(),\n  t: new TimestampSecondsParser(),\n  T: new TimestampMillisecondsParser(),\n};\n","import { constructFrom } from \"./constructFrom.mjs\";\nimport { getDefaultOptions } from \"./getDefaultOptions.mjs\";\nimport { defaultLocale } from \"./_lib/defaultLocale.mjs\";\nimport { toDate } from \"./toDate.mjs\";\nimport { longFormatters } from \"./_lib/format/longFormatters.mjs\";\nimport {\n  isProtectedDayOfYearToken,\n  isProtectedWeekYearToken,\n  warnOrThrowProtectedError,\n} from \"./_lib/protectedTokens.mjs\";\nimport { parsers } from \"./parse/_lib/parsers.mjs\";\nimport { DateToSystemTimezoneSetter } from \"./parse/_lib/Setter.mjs\";\n\n// Rexports of internal for libraries to use.\n// See: https://github.com/date-fns/date-fns/issues/3638#issuecomment-1877082874\nexport { longFormatters, parsers };\n\n/**\n * The {@link parse} function options.\n */\n\n// This RegExp consists of three parts separated by `|`:\n// - [yYQqMLwIdDecihHKkms]o matches any available ordinal number token\n//   (one of the certain letters followed by `o`)\n// - (\\w)\\1* matches any sequences of the same letter\n// - '' matches two quote characters in a row\n// - '(''|[^'])+('|$) matches anything surrounded by two quote characters ('),\n//   except a single quote symbol, which ends the sequence.\n//   Two quote characters do not end the sequence.\n//   If there is no matching single quote\n//   then the sequence will continue until the end of the string.\n// - . matches any single character unmatched by previous parts of the RegExps\nconst formattingTokensRegExp =\n  /[yYQqMLwIdDecihHKkms]o|(\\w)\\1*|''|'(''|[^'])+('|$)|./g;\n\n// This RegExp catches symbols escaped by quotes, and also\n// sequences of symbols P, p, and the combinations like `PPPPPPPppppp`\nconst longFormattingTokensRegExp = /P+p+|P+|p+|''|'(''|[^'])+('|$)|./g;\n\nconst escapedStringRegExp = /^'([^]*?)'?$/;\nconst doubleQuoteRegExp = /''/g;\n\nconst notWhitespaceRegExp = /\\S/;\nconst unescapedLatinCharacterRegExp = /[a-zA-Z]/;\n\n/**\n * @name parse\n * @category Common Helpers\n * @summary Parse the date.\n *\n * @description\n * Return the date parsed from string using the given format string.\n *\n * > ⚠️ Please note that the `format` tokens differ from Moment.js and other libraries.\n * > See: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n *\n * The characters in the format string wrapped between two single quotes characters (') are escaped.\n * Two single quotes in a row, whether inside or outside a quoted sequence, represent a 'real' single quote.\n *\n * Format of the format string is based on Unicode Technical Standard #35:\n * https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table\n * with a few additions (see note 5 below the table).\n *\n * Not all tokens are compatible. Combinations that don't make sense or could lead to bugs are prohibited\n * and will throw `RangeError`. For example usage of 24-hour format token with AM/PM token will throw an exception:\n *\n * ```javascript\n * parse('23 AM', 'HH a', new Date())\n * //=> RangeError: The format string mustn't contain `HH` and `a` at the same time\n * ```\n *\n * See the compatibility table: https://docs.google.com/spreadsheets/d/e/2PACX-1vQOPU3xUhplll6dyoMmVUXHKl_8CRDs6_ueLmex3SoqwhuolkuN3O05l4rqx5h1dKX8eb46Ul-CCSrq/pubhtml?gid=0&single=true\n *\n * Accepted format string patterns:\n * | Unit                            |Prior| Pattern | Result examples                   | Notes |\n * |---------------------------------|-----|---------|-----------------------------------|-------|\n * | Era                             | 140 | G..GGG  | AD, BC                            |       |\n * |                                 |     | GGGG    | Anno Domini, Before Christ        | 2     |\n * |                                 |     | GGGGG   | A, B                              |       |\n * | Calendar year                   | 130 | y       | 44, 1, 1900, 2017, 9999           | 4     |\n * |                                 |     | yo      | 44th, 1st, 1900th, 9999999th      | 4,5   |\n * |                                 |     | yy      | 44, 01, 00, 17                    | 4     |\n * |                                 |     | yyy     | 044, 001, 123, 999                | 4     |\n * |                                 |     | yyyy    | 0044, 0001, 1900, 2017            | 4     |\n * |                                 |     | yyyyy   | ...                               | 2,4   |\n * | Local week-numbering year       | 130 | Y       | 44, 1, 1900, 2017, 9000           | 4     |\n * |                                 |     | Yo      | 44th, 1st, 1900th, 9999999th      | 4,5   |\n * |                                 |     | YY      | 44, 01, 00, 17                    | 4,6   |\n * |                                 |     | YYY     | 044, 001, 123, 999                | 4     |\n * |                                 |     | YYYY    | 0044, 0001, 1900, 2017            | 4,6   |\n * |                                 |     | YYYYY   | ...                               | 2,4   |\n * | ISO week-numbering year         | 130 | R       | -43, 1, 1900, 2017, 9999, -9999   | 4,5   |\n * |                                 |     | RR      | -43, 01, 00, 17                   | 4,5   |\n * |                                 |     | RRR     | -043, 001, 123, 999, -999         | 4,5   |\n * |                                 |     | RRRR    | -0043, 0001, 2017, 9999, -9999    | 4,5   |\n * |                                 |     | RRRRR   | ...                               | 2,4,5 |\n * | Extended year                   | 130 | u       | -43, 1, 1900, 2017, 9999, -999    | 4     |\n * |                                 |     | uu      | -43, 01, 99, -99                  | 4     |\n * |                                 |     | uuu     | -043, 001, 123, 999, -999         | 4     |\n * |                                 |     | uuuu    | -0043, 0001, 2017, 9999, -9999    | 4     |\n * |                                 |     | uuuuu   | ...                               | 2,4   |\n * | Quarter (formatting)            | 120 | Q       | 1, 2, 3, 4                        |       |\n * |                                 |     | Qo      | 1st, 2nd, 3rd, 4th                | 5     |\n * |                                 |     | QQ      | 01, 02, 03, 04                    |       |\n * |                                 |     | QQQ     | Q1, Q2, Q3, Q4                    |       |\n * |                                 |     | QQQQ    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 |     | QQQQQ   | 1, 2, 3, 4                        | 4     |\n * | Quarter (stand-alone)           | 120 | q       | 1, 2, 3, 4                        |       |\n * |                                 |     | qo      | 1st, 2nd, 3rd, 4th                | 5     |\n * |                                 |     | qq      | 01, 02, 03, 04                    |       |\n * |                                 |     | qqq     | Q1, Q2, Q3, Q4                    |       |\n * |                                 |     | qqqq    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 |     | qqqqq   | 1, 2, 3, 4                        | 3     |\n * | Month (formatting)              | 110 | M       | 1, 2, ..., 12                     |       |\n * |                                 |     | Mo      | 1st, 2nd, ..., 12th               | 5     |\n * |                                 |     | MM      | 01, 02, ..., 12                   |       |\n * |                                 |     | MMM     | Jan, Feb, ..., Dec                |       |\n * |                                 |     | MMMM    | January, February, ..., December  | 2     |\n * |                                 |     | MMMMM   | J, F, ..., D                      |       |\n * | Month (stand-alone)             | 110 | L       | 1, 2, ..., 12                     |       |\n * |                                 |     | Lo      | 1st, 2nd, ..., 12th               | 5     |\n * |                                 |     | LL      | 01, 02, ..., 12                   |       |\n * |                                 |     | LLL     | Jan, Feb, ..., Dec                |       |\n * |                                 |     | LLLL    | January, February, ..., December  | 2     |\n * |                                 |     | LLLLL   | J, F, ..., D                      |       |\n * | Local week of year              | 100 | w       | 1, 2, ..., 53                     |       |\n * |                                 |     | wo      | 1st, 2nd, ..., 53th               | 5     |\n * |                                 |     | ww      | 01, 02, ..., 53                   |       |\n * | ISO week of year                | 100 | I       | 1, 2, ..., 53                     | 5     |\n * |                                 |     | Io      | 1st, 2nd, ..., 53th               | 5     |\n * |                                 |     | II      | 01, 02, ..., 53                   | 5     |\n * | Day of month                    |  90 | d       | 1, 2, ..., 31                     |       |\n * |                                 |     | do      | 1st, 2nd, ..., 31st               | 5     |\n * |                                 |     | dd      | 01, 02, ..., 31                   |       |\n * | Day of year                     |  90 | D       | 1, 2, ..., 365, 366               | 7     |\n * |                                 |     | Do      | 1st, 2nd, ..., 365th, 366th       | 5     |\n * |                                 |     | DD      | 01, 02, ..., 365, 366             | 7     |\n * |                                 |     | DDD     | 001, 002, ..., 365, 366           |       |\n * |                                 |     | DDDD    | ...                               | 2     |\n * | Day of week (formatting)        |  90 | E..EEE  | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 |     | EEEE    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 |     | EEEEE   | M, T, W, T, F, S, S               |       |\n * |                                 |     | EEEEEE  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | ISO day of week (formatting)    |  90 | i       | 1, 2, 3, ..., 7                   | 5     |\n * |                                 |     | io      | 1st, 2nd, ..., 7th                | 5     |\n * |                                 |     | ii      | 01, 02, ..., 07                   | 5     |\n * |                                 |     | iii     | Mon, Tue, Wed, ..., Sun           | 5     |\n * |                                 |     | iiii    | Monday, Tuesday, ..., Sunday      | 2,5   |\n * |                                 |     | iiiii   | M, T, W, T, F, S, S               | 5     |\n * |                                 |     | iiiiii  | Mo, Tu, We, Th, Fr, Sa, Su        | 5     |\n * | Local day of week (formatting)  |  90 | e       | 2, 3, 4, ..., 1                   |       |\n * |                                 |     | eo      | 2nd, 3rd, ..., 1st                | 5     |\n * |                                 |     | ee      | 02, 03, ..., 01                   |       |\n * |                                 |     | eee     | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 |     | eeee    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 |     | eeeee   | M, T, W, T, F, S, S               |       |\n * |                                 |     | eeeeee  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | Local day of week (stand-alone) |  90 | c       | 2, 3, 4, ..., 1                   |       |\n * |                                 |     | co      | 2nd, 3rd, ..., 1st                | 5     |\n * |                                 |     | cc      | 02, 03, ..., 01                   |       |\n * |                                 |     | ccc     | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 |     | cccc    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 |     | ccccc   | M, T, W, T, F, S, S               |       |\n * |                                 |     | cccccc  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | AM, PM                          |  80 | a..aaa  | AM, PM                            |       |\n * |                                 |     | aaaa    | a.m., p.m.                        | 2     |\n * |                                 |     | aaaaa   | a, p                              |       |\n * | AM, PM, noon, midnight          |  80 | b..bbb  | AM, PM, noon, midnight            |       |\n * |                                 |     | bbbb    | a.m., p.m., noon, midnight        | 2     |\n * |                                 |     | bbbbb   | a, p, n, mi                       |       |\n * | Flexible day period             |  80 | B..BBB  | at night, in the morning, ...     |       |\n * |                                 |     | BBBB    | at night, in the morning, ...     | 2     |\n * |                                 |     | BBBBB   | at night, in the morning, ...     |       |\n * | Hour [1-12]                     |  70 | h       | 1, 2, ..., 11, 12                 |       |\n * |                                 |     | ho      | 1st, 2nd, ..., 11th, 12th         | 5     |\n * |                                 |     | hh      | 01, 02, ..., 11, 12               |       |\n * | Hour [0-23]                     |  70 | H       | 0, 1, 2, ..., 23                  |       |\n * |                                 |     | Ho      | 0th, 1st, 2nd, ..., 23rd          | 5     |\n * |                                 |     | HH      | 00, 01, 02, ..., 23               |       |\n * | Hour [0-11]                     |  70 | K       | 1, 2, ..., 11, 0                  |       |\n * |                                 |     | Ko      | 1st, 2nd, ..., 11th, 0th          | 5     |\n * |                                 |     | KK      | 01, 02, ..., 11, 00               |       |\n * | Hour [1-24]                     |  70 | k       | 24, 1, 2, ..., 23                 |       |\n * |                                 |     | ko      | 24th, 1st, 2nd, ..., 23rd         | 5     |\n * |                                 |     | kk      | 24, 01, 02, ..., 23               |       |\n * | Minute                          |  60 | m       | 0, 1, ..., 59                     |       |\n * |                                 |     | mo      | 0th, 1st, ..., 59th               | 5     |\n * |                                 |     | mm      | 00, 01, ..., 59                   |       |\n * | Second                          |  50 | s       | 0, 1, ..., 59                     |       |\n * |                                 |     | so      | 0th, 1st, ..., 59th               | 5     |\n * |                                 |     | ss      | 00, 01, ..., 59                   |       |\n * | Seconds timestamp               |  40 | t       | 512969520                         |       |\n * |                                 |     | tt      | ...                               | 2     |\n * | Fraction of second              |  30 | S       | 0, 1, ..., 9                      |       |\n * |                                 |     | SS      | 00, 01, ..., 99                   |       |\n * |                                 |     | SSS     | 000, 001, ..., 999                |       |\n * |                                 |     | SSSS    | ...                               | 2     |\n * | Milliseconds timestamp          |  20 | T       | 512969520900                      |       |\n * |                                 |     | TT      | ...                               | 2     |\n * | Timezone (ISO-8601 w/ Z)        |  10 | X       | -08, +0530, Z                     |       |\n * |                                 |     | XX      | -0800, +0530, Z                   |       |\n * |                                 |     | XXX     | -08:00, +05:30, Z                 |       |\n * |                                 |     | XXXX    | -0800, +0530, Z, +123456          | 2     |\n * |                                 |     | XXXXX   | -08:00, +05:30, Z, +12:34:56      |       |\n * | Timezone (ISO-8601 w/o Z)       |  10 | x       | -08, +0530, +00                   |       |\n * |                                 |     | xx      | -0800, +0530, +0000               |       |\n * |                                 |     | xxx     | -08:00, +05:30, +00:00            | 2     |\n * |                                 |     | xxxx    | -0800, +0530, +0000, +123456      |       |\n * |                                 |     | xxxxx   | -08:00, +05:30, +00:00, +12:34:56 |       |\n * | Long localized date             |  NA | P       | 05/29/1453                        | 5,8   |\n * |                                 |     | PP      | May 29, 1453                      |       |\n * |                                 |     | PPP     | May 29th, 1453                    |       |\n * |                                 |     | PPPP    | Sunday, May 29th, 1453            | 2,5,8 |\n * | Long localized time             |  NA | p       | 12:00 AM                          | 5,8   |\n * |                                 |     | pp      | 12:00:00 AM                       |       |\n * | Combination of date and time    |  NA | Pp      | 05/29/1453, 12:00 AM              |       |\n * |                                 |     | PPpp    | May 29, 1453, 12:00:00 AM         |       |\n * |                                 |     | PPPpp   | May 29th, 1453 at ...             |       |\n * |                                 |     | PPPPpp  | Sunday, May 29th, 1453 at ...     | 2,5,8 |\n * Notes:\n * 1. \"Formatting\" units (e.g. formatting quarter) in the default en-US locale\n *    are the same as \"stand-alone\" units, but are different in some languages.\n *    \"Formatting\" units are declined according to the rules of the language\n *    in the context of a date. \"Stand-alone\" units are always nominative singular.\n *    In `format` function, they will produce different result:\n *\n *    `format(new Date(2017, 10, 6), 'do LLLL', {locale: cs}) //=> '6. listopad'`\n *\n *    `format(new Date(2017, 10, 6), 'do MMMM', {locale: cs}) //=> '6. listopadu'`\n *\n *    `parse` will try to match both formatting and stand-alone units interchangably.\n *\n * 2. Any sequence of the identical letters is a pattern, unless it is escaped by\n *    the single quote characters (see below).\n *    If the sequence is longer than listed in table:\n *    - for numerical units (`yyyyyyyy`) `parse` will try to match a number\n *      as wide as the sequence\n *    - for text units (`MMMMMMMM`) `parse` will try to match the widest variation of the unit.\n *      These variations are marked with \"2\" in the last column of the table.\n *\n * 3. `QQQQQ` and `qqqqq` could be not strictly numerical in some locales.\n *    These tokens represent the shortest form of the quarter.\n *\n * 4. The main difference between `y` and `u` patterns are B.C. years:\n *\n *    | Year | `y` | `u` |\n *    |------|-----|-----|\n *    | AC 1 |   1 |   1 |\n *    | BC 1 |   1 |   0 |\n *    | BC 2 |   2 |  -1 |\n *\n *    Also `yy` will try to guess the century of two digit year by proximity with `referenceDate`:\n *\n *    `parse('50', 'yy', new Date(2018, 0, 1)) //=> Sat Jan 01 2050 00:00:00`\n *\n *    `parse('75', 'yy', new Date(2018, 0, 1)) //=> Wed Jan 01 1975 00:00:00`\n *\n *    while `uu` will just assign the year as is:\n *\n *    `parse('50', 'uu', new Date(2018, 0, 1)) //=> Sat Jan 01 0050 00:00:00`\n *\n *    `parse('75', 'uu', new Date(2018, 0, 1)) //=> Tue Jan 01 0075 00:00:00`\n *\n *    The same difference is true for local and ISO week-numbering years (`Y` and `R`),\n *    except local week-numbering years are dependent on `options.weekStartsOn`\n *    and `options.firstWeekContainsDate` (compare [setISOWeekYear](https://date-fns.org/docs/setISOWeekYear)\n *    and [setWeekYear](https://date-fns.org/docs/setWeekYear)).\n *\n * 5. These patterns are not in the Unicode Technical Standard #35:\n *    - `i`: ISO day of week\n *    - `I`: ISO week of year\n *    - `R`: ISO week-numbering year\n *    - `o`: ordinal number modifier\n *    - `P`: long localized date\n *    - `p`: long localized time\n *\n * 6. `YY` and `YYYY` tokens represent week-numbering years but they are often confused with years.\n *    You should enable `options.useAdditionalWeekYearTokens` to use them. See: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n *\n * 7. `D` and `DD` tokens represent days of the year but they are ofthen confused with days of the month.\n *    You should enable `options.useAdditionalDayOfYearTokens` to use them. See: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n *\n * 8. `P+` tokens do not have a defined priority since they are merely aliases to other tokens based\n *    on the given locale.\n *\n *    using `en-US` locale: `P` => `MM/dd/yyyy`\n *    using `en-US` locale: `p` => `hh:mm a`\n *    using `pt-BR` locale: `P` => `dd/MM/yyyy`\n *    using `pt-BR` locale: `p` => `HH:mm`\n *\n * Values will be assigned to the date in the descending order of its unit's priority.\n * Units of an equal priority overwrite each other in the order of appearance.\n *\n * If no values of higher priority are parsed (e.g. when parsing string 'January 1st' without a year),\n * the values will be taken from 3rd argument `referenceDate` which works as a context of parsing.\n *\n * `referenceDate` must be passed for correct work of the function.\n * If you're not sure which `referenceDate` to supply, create a new instance of Date:\n * `parse('02/11/2014', 'MM/dd/yyyy', new Date())`\n * In this case parsing will be done in the context of the current date.\n * If `referenceDate` is `Invalid Date` or a value not convertible to valid `Date`,\n * then `Invalid Date` will be returned.\n *\n * The result may vary by locale.\n *\n * If `formatString` matches with `dateString` but does not provides tokens, `referenceDate` will be returned.\n *\n * If parsing failed, `Invalid Date` will be returned.\n * Invalid Date is a Date, whose time value is NaN.\n * Time value of Date: http://es5.github.io/#x15.9.1.1\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param dateStr - The string to parse\n * @param formatStr - The string of tokens\n * @param referenceDate - defines values missing from the parsed dateString\n * @param options - An object with options.\n *   see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n *   see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n *\n * @returns The parsed date\n *\n * @throws `options.locale` must contain `match` property\n * @throws use `yyyy` instead of `YYYY` for formatting years using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws use `yy` instead of `YY` for formatting years using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws use `d` instead of `D` for formatting days of the month using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws use `dd` instead of `DD` for formatting days of the month using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws format string contains an unescaped latin alphabet character\n *\n * @example\n * // Parse 11 February 2014 from middle-endian format:\n * var result = parse('02/11/2014', 'MM/dd/yyyy', new Date())\n * //=> Tue Feb 11 2014 00:00:00\n *\n * @example\n * // Parse 28th of February in Esperanto locale in the context of 2010 year:\n * import eo from 'date-fns/locale/eo'\n * var result = parse('28-a de februaro', \"do 'de' MMMM\", new Date(2010, 0, 1), {\n *   locale: eo\n * })\n * //=> Sun Feb 28 2010 00:00:00\n */\nexport function parse(dateStr, formatStr, referenceDate, options) {\n  const defaultOptions = getDefaultOptions();\n  const locale = options?.locale ?? defaultOptions.locale ?? defaultLocale;\n\n  const firstWeekContainsDate =\n    options?.firstWeekContainsDate ??\n    options?.locale?.options?.firstWeekContainsDate ??\n    defaultOptions.firstWeekContainsDate ??\n    defaultOptions.locale?.options?.firstWeekContainsDate ??\n    1;\n\n  const weekStartsOn =\n    options?.weekStartsOn ??\n    options?.locale?.options?.weekStartsOn ??\n    defaultOptions.weekStartsOn ??\n    defaultOptions.locale?.options?.weekStartsOn ??\n    0;\n\n  if (formatStr === \"\") {\n    if (dateStr === \"\") {\n      return toDate(referenceDate);\n    } else {\n      return constructFrom(referenceDate, NaN);\n    }\n  }\n\n  const subFnOptions = {\n    firstWeekContainsDate,\n    weekStartsOn,\n    locale,\n  };\n\n  // If timezone isn't specified, it will be set to the system timezone\n  const setters = [new DateToSystemTimezoneSetter()];\n\n  const tokens = formatStr\n    .match(longFormattingTokensRegExp)\n    .map((substring) => {\n      const firstCharacter = substring[0];\n      if (firstCharacter in longFormatters) {\n        const longFormatter = longFormatters[firstCharacter];\n        return longFormatter(substring, locale.formatLong);\n      }\n      return substring;\n    })\n    .join(\"\")\n    .match(formattingTokensRegExp);\n\n  const usedTokens = [];\n\n  for (let token of tokens) {\n    if (\n      !options?.useAdditionalWeekYearTokens &&\n      isProtectedWeekYearToken(token)\n    ) {\n      warnOrThrowProtectedError(token, formatStr, dateStr);\n    }\n    if (\n      !options?.useAdditionalDayOfYearTokens &&\n      isProtectedDayOfYearToken(token)\n    ) {\n      warnOrThrowProtectedError(token, formatStr, dateStr);\n    }\n\n    const firstCharacter = token[0];\n    const parser = parsers[firstCharacter];\n    if (parser) {\n      const { incompatibleTokens } = parser;\n      if (Array.isArray(incompatibleTokens)) {\n        const incompatibleToken = usedTokens.find(\n          (usedToken) =>\n            incompatibleTokens.includes(usedToken.token) ||\n            usedToken.token === firstCharacter,\n        );\n        if (incompatibleToken) {\n          throw new RangeError(\n            `The format string mustn't contain \\`${incompatibleToken.fullToken}\\` and \\`${token}\\` at the same time`,\n          );\n        }\n      } else if (parser.incompatibleTokens === \"*\" && usedTokens.length > 0) {\n        throw new RangeError(\n          `The format string mustn't contain \\`${token}\\` and any other token at the same time`,\n        );\n      }\n\n      usedTokens.push({ token: firstCharacter, fullToken: token });\n\n      const parseResult = parser.run(\n        dateStr,\n        token,\n        locale.match,\n        subFnOptions,\n      );\n\n      if (!parseResult) {\n        return constructFrom(referenceDate, NaN);\n      }\n\n      setters.push(parseResult.setter);\n\n      dateStr = parseResult.rest;\n    } else {\n      if (firstCharacter.match(unescapedLatinCharacterRegExp)) {\n        throw new RangeError(\n          \"Format string contains an unescaped latin alphabet character `\" +\n            firstCharacter +\n            \"`\",\n        );\n      }\n\n      // Replace two single quote characters with one single quote character\n      if (token === \"''\") {\n        token = \"'\";\n      } else if (firstCharacter === \"'\") {\n        token = cleanEscapedString(token);\n      }\n\n      // Cut token from string, or, if string doesn't match the token, return Invalid Date\n      if (dateStr.indexOf(token) === 0) {\n        dateStr = dateStr.slice(token.length);\n      } else {\n        return constructFrom(referenceDate, NaN);\n      }\n    }\n  }\n\n  // Check if the remaining input contains something other than whitespace\n  if (dateStr.length > 0 && notWhitespaceRegExp.test(dateStr)) {\n    return constructFrom(referenceDate, NaN);\n  }\n\n  const uniquePrioritySetters = setters\n    .map((setter) => setter.priority)\n    .sort((a, b) => b - a)\n    .filter((priority, index, array) => array.indexOf(priority) === index)\n    .map((priority) =>\n      setters\n        .filter((setter) => setter.priority === priority)\n        .sort((a, b) => b.subPriority - a.subPriority),\n    )\n    .map((setterArray) => setterArray[0]);\n\n  let date = toDate(referenceDate);\n\n  if (isNaN(date.getTime())) {\n    return constructFrom(referenceDate, NaN);\n  }\n\n  const flags = {};\n  for (const setter of uniquePrioritySetters) {\n    if (!setter.validate(date, subFnOptions)) {\n      return constructFrom(referenceDate, NaN);\n    }\n\n    const result = setter.set(date, flags, subFnOptions);\n    // Result is tuple (date, flags)\n    if (Array.isArray(result)) {\n      date = result[0];\n      Object.assign(flags, result[1]);\n      // Result is date\n    } else {\n      date = result;\n    }\n  }\n\n  return constructFrom(referenceDate, date);\n}\n\nfunction cleanEscapedString(input) {\n  return input.match(escapedStringRegExp)[1].replace(doubleQuoteRegExp, \"'\");\n}\n\n// Fallback for modularized imports:\nexport default parse;\n","const createStoreImpl = (createState) => {\n  let state;\n  const listeners = /* @__PURE__ */ new Set();\n  const setState = (partial, replace) => {\n    const nextState = typeof partial === \"function\" ? partial(state) : partial;\n    if (!Object.is(nextState, state)) {\n      const previousState = state;\n      state = (replace != null ? replace : typeof nextState !== \"object\" || nextState === null) ? nextState : Object.assign({}, state, nextState);\n      listeners.forEach((listener) => listener(state, previousState));\n    }\n  };\n  const getState = () => state;\n  const getInitialState = () => initialState;\n  const subscribe = (listener) => {\n    listeners.add(listener);\n    return () => listeners.delete(listener);\n  };\n  const destroy = () => {\n    if ((import.meta.env ? import.meta.env.MODE : void 0) !== \"production\") {\n      console.warn(\n        \"[DEPRECATED] The `destroy` method will be unsupported in a future version. Instead use unsubscribe function returned by subscribe. Everything will be garbage-collected if store is garbage-collected.\"\n      );\n    }\n    listeners.clear();\n  };\n  const api = { setState, getState, getInitialState, subscribe, destroy };\n  const initialState = state = createState(setState, getState, api);\n  return api;\n};\nconst createStore = (createState) => createState ? createStoreImpl(createState) : createStoreImpl;\nvar vanilla = (createState) => {\n  if ((import.meta.env ? import.meta.env.MODE : void 0) !== \"production\") {\n    console.warn(\n      \"[DEPRECATED] Default export is deprecated. Instead use import { createStore } from 'zustand/vanilla'.\"\n    );\n  }\n  return createStore(createState);\n};\n\nexport { createStore, vanilla as default };\n","/**\n * @license React\n * use-sync-external-store-shim.production.js\n *\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\"use strict\";\nvar React = require(\"react\");\nfunction is(x, y) {\n  return (x === y && (0 !== x || 1 / x === 1 / y)) || (x !== x && y !== y);\n}\nvar objectIs = \"function\" === typeof Object.is ? Object.is : is,\n  useState = React.useState,\n  useEffect = React.useEffect,\n  useLayoutEffect = React.useLayoutEffect,\n  useDebugValue = React.useDebugValue;\nfunction useSyncExternalStore$2(subscribe, getSnapshot) {\n  var value = getSnapshot(),\n    _useState = useState({ inst: { value: value, getSnapshot: getSnapshot } }),\n    inst = _useState[0].inst,\n    forceUpdate = _useState[1];\n  useLayoutEffect(\n    function () {\n      inst.value = value;\n      inst.getSnapshot = getSnapshot;\n      checkIfSnapshotChanged(inst) && forceUpdate({ inst: inst });\n    },\n    [subscribe, value, getSnapshot]\n  );\n  useEffect(\n    function () {\n      checkIfSnapshotChanged(inst) && forceUpdate({ inst: inst });\n      return subscribe(function () {\n        checkIfSnapshotChanged(inst) && forceUpdate({ inst: inst });\n      });\n    },\n    [subscribe]\n  );\n  useDebugValue(value);\n  return value;\n}\nfunction checkIfSnapshotChanged(inst) {\n  var latestGetSnapshot = inst.getSnapshot;\n  inst = inst.value;\n  try {\n    var nextValue = latestGetSnapshot();\n    return !objectIs(inst, nextValue);\n  } catch (error) {\n    return !0;\n  }\n}\nfunction useSyncExternalStore$1(subscribe, getSnapshot) {\n  return getSnapshot();\n}\nvar shim =\n  \"undefined\" === typeof window ||\n  \"undefined\" === typeof window.document ||\n  \"undefined\" === typeof window.document.createElement\n    ? useSyncExternalStore$1\n    : useSyncExternalStore$2;\nexports.useSyncExternalStore =\n  void 0 !== React.useSyncExternalStore ? React.useSyncExternalStore : shim;\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('../cjs/use-sync-external-store-shim.production.js');\n} else {\n  module.exports = require('../cjs/use-sync-external-store-shim.development.js');\n}\n","/**\n * @license React\n * use-sync-external-store-shim/with-selector.production.js\n *\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\"use strict\";\nvar React = require(\"react\"),\n  shim = require(\"use-sync-external-store/shim\");\nfunction is(x, y) {\n  return (x === y && (0 !== x || 1 / x === 1 / y)) || (x !== x && y !== y);\n}\nvar objectIs = \"function\" === typeof Object.is ? Object.is : is,\n  useSyncExternalStore = shim.useSyncExternalStore,\n  useRef = React.useRef,\n  useEffect = React.useEffect,\n  useMemo = React.useMemo,\n  useDebugValue = React.useDebugValue;\nexports.useSyncExternalStoreWithSelector = function (\n  subscribe,\n  getSnapshot,\n  getServerSnapshot,\n  selector,\n  isEqual\n) {\n  var instRef = useRef(null);\n  if (null === instRef.current) {\n    var inst = { hasValue: !1, value: null };\n    instRef.current = inst;\n  } else inst = instRef.current;\n  instRef = useMemo(\n    function () {\n      function memoizedSelector(nextSnapshot) {\n        if (!hasMemo) {\n          hasMemo = !0;\n          memoizedSnapshot = nextSnapshot;\n          nextSnapshot = selector(nextSnapshot);\n          if (void 0 !== isEqual && inst.hasValue) {\n            var currentSelection = inst.value;\n            if (isEqual(currentSelection, nextSnapshot))\n              return (memoizedSelection = currentSelection);\n          }\n          return (memoizedSelection = nextSnapshot);\n        }\n        currentSelection = memoizedSelection;\n        if (objectIs(memoizedSnapshot, nextSnapshot)) return currentSelection;\n        var nextSelection = selector(nextSnapshot);\n        if (void 0 !== isEqual && isEqual(currentSelection, nextSelection))\n          return (memoizedSnapshot = nextSnapshot), currentSelection;\n        memoizedSnapshot = nextSnapshot;\n        return (memoizedSelection = nextSelection);\n      }\n      var hasMemo = !1,\n        memoizedSnapshot,\n        memoizedSelection,\n        maybeGetServerSnapshot =\n          void 0 === getServerSnapshot ? null : getServerSnapshot;\n      return [\n        function () {\n          return memoizedSelector(getSnapshot());\n        },\n        null === maybeGetServerSnapshot\n          ? void 0\n          : function () {\n              return memoizedSelector(maybeGetServerSnapshot());\n            }\n      ];\n    },\n    [getSnapshot, getServerSnapshot, selector, isEqual]\n  );\n  var value = useSyncExternalStore(subscribe, instRef[0], instRef[1]);\n  useEffect(\n    function () {\n      inst.hasValue = !0;\n      inst.value = value;\n    },\n    [value]\n  );\n  useDebugValue(value);\n  return value;\n};\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('../cjs/use-sync-external-store-shim/with-selector.production.js');\n} else {\n  module.exports = require('../cjs/use-sync-external-store-shim/with-selector.development.js');\n}\n","import { createStore } from 'zustand/vanilla';\nexport * from 'zustand/vanilla';\nimport ReactExports from 'react';\nimport useSyncExternalStoreExports from 'use-sync-external-store/shim/with-selector.js';\n\nconst { useDebugValue } = ReactExports;\nconst { useSyncExternalStoreWithSelector } = useSyncExternalStoreExports;\nlet didWarnAboutEqualityFn = false;\nconst identity = (arg) => arg;\nfunction useStore(api, selector = identity, equalityFn) {\n  if ((import.meta.env ? import.meta.env.MODE : void 0) !== \"production\" && equalityFn && !didWarnAboutEqualityFn) {\n    console.warn(\n      \"[DEPRECATED] Use `createWithEqualityFn` instead of `create` or use `useStoreWithEqualityFn` instead of `useStore`. They can be imported from 'zustand/traditional'. https://github.com/pmndrs/zustand/discussions/1937\"\n    );\n    didWarnAboutEqualityFn = true;\n  }\n  const slice = useSyncExternalStoreWithSelector(\n    api.subscribe,\n    api.getState,\n    api.getServerState || api.getInitialState,\n    selector,\n    equalityFn\n  );\n  useDebugValue(slice);\n  return slice;\n}\nconst createImpl = (createState) => {\n  if ((import.meta.env ? import.meta.env.MODE : void 0) !== \"production\" && typeof createState !== \"function\") {\n    console.warn(\n      \"[DEPRECATED] Passing a vanilla store will be unsupported in a future version. Instead use `import { useStore } from 'zustand'`.\"\n    );\n  }\n  const api = typeof createState === \"function\" ? createStore(createState) : createState;\n  const useBoundStore = (selector, equalityFn) => useStore(api, selector, equalityFn);\n  Object.assign(useBoundStore, api);\n  return useBoundStore;\n};\nconst create = (createState) => createState ? createImpl(createState) : createImpl;\nvar react = (createState) => {\n  if ((import.meta.env ? import.meta.env.MODE : void 0) !== \"production\") {\n    console.warn(\n      \"[DEPRECATED] Default export is deprecated. Instead use `import { create } from 'zustand'`.\"\n    );\n  }\n  return create(createState);\n};\n\nexport { create, react as default, useStore };\n","import { CashAccount, Event } from '../types';\n\ninterface ValidationError {\n  field: string;\n  message: string;\n}\n\ninterface ValidationResult {\n  isValid: boolean;\n  errors: ValidationError[];\n}\n\nexport class ValidationService {\n  static validateAccount(account: Partial<CashAccount>): ValidationResult {\n    const errors: ValidationError[] = [];\n\n    // Required fields validation\n    if (!account.name?.trim()) {\n      errors.push({ field: 'name', message: 'Account name is required' });\n    } else if (account.name.length > 100) {\n      errors.push({ field: 'name', message: 'Account name must be less than 100 characters' });\n    }\n\n    if (!account.type) {\n      errors.push({ field: 'type', message: 'Account type is required' });\n    } else if (!['checking', 'savings'].includes(account.type)) {\n      errors.push({ field: 'type', message: 'Invalid account type' });\n    }\n\n    if (!account.accountNumber?.trim()) {\n      errors.push({ field: 'accountNumber', message: 'Account number is required' });\n    } else if (!/^\\d{4,17}$/.test(account.accountNumber.replace(/[- ]/g, ''))) {\n      errors.push({ field: 'accountNumber', message: 'Invalid account number format' });\n    }\n\n    // Numeric fields validation\n    if (typeof account.currentBalance !== 'number') {\n      errors.push({ field: 'currentBalance', message: 'Current balance must be a number' });\n    } else if (account.currentBalance < 0) {\n      errors.push({ field: 'currentBalance', message: 'Current balance cannot be negative' });\n    }\n\n    if (typeof account.currentInflows !== 'number') {\n      errors.push({ field: 'currentInflows', message: 'Current inflows must be a number' });\n    } else if (account.currentInflows < 0) {\n      errors.push({ field: 'currentInflows', message: 'Current inflows cannot be negative' });\n    }\n\n    if (typeof account.currentOutflows !== 'number') {\n      errors.push({ field: 'currentOutflows', message: 'Current outflows must be a number' });\n    } else if (account.currentOutflows < 0) {\n      errors.push({ field: 'currentOutflows', message: 'Current outflows cannot be negative' });\n    }\n\n    if (typeof account.yearEndProjected !== 'number') {\n      errors.push({ field: 'yearEndProjected', message: 'Year end projection must be a number' });\n    }\n\n    // Owner validation\n    if (!account.owner?.name?.trim()) {\n      errors.push({ field: 'owner.name', message: 'Owner name is required' });\n    }\n\n    return {\n      isValid: errors.length === 0,\n      errors\n    };\n  }\n\n  static validateEvent(event: Partial<Event>): ValidationResult {\n    const errors: ValidationError[] = [];\n\n    // Required fields validation\n    if (!event.name?.trim()) {\n      errors.push({ field: 'name', message: 'Event name is required' });\n    } else if (event.name.length > 100) {\n      errors.push({ field: 'name', message: 'Event name must be less than 100 characters' });\n    }\n\n    if (!event.type) {\n      errors.push({ field: 'type', message: 'Event type is required' });\n    } else if (!['Emergency Savings', 'Sabbatical', 'Vacation'].includes(event.type)) {\n      errors.push({ field: 'type', message: 'Invalid event type' });\n    }\n\n    // Amount validation\n    if (typeof event.amount !== 'number') {\n      errors.push({ field: 'amount', message: 'Amount must be a number' });\n    } else if (event.amount <= 0) {\n      errors.push({ field: 'amount', message: 'Amount must be greater than 0' });\n    }\n\n    // Date validation\n    if (!event.date) {\n      errors.push({ field: 'date', message: 'Date is required' });\n    } else {\n      const dateRegex = /^\\d{4}-\\d{2}-\\d{2}$/;\n      if (!dateRegex.test(event.date)) {\n        errors.push({ field: 'date', message: 'Invalid date format (YYYY-MM-DD)' });\n      } else {\n        const date = new Date(event.date);\n        if (isNaN(date.getTime())) {\n          errors.push({ field: 'date', message: 'Invalid date' });\n        }\n      }\n    }\n\n    // Progress validation\n    if (!event.progress) {\n      errors.push({ field: 'progress', message: 'Progress status is required' });\n    } else if (!['On Track', 'Off Track'].includes(event.progress)) {\n      errors.push({ field: 'progress', message: 'Invalid progress status' });\n    }\n\n    return {\n      isValid: errors.length === 0,\n      errors\n    };\n  }\n\n  static sanitizeAccount(account: CashAccount): CashAccount {\n    return {\n      ...account,\n      name: account.name.trim(),\n      accountNumber: account.accountNumber.replace(/[- ]/g, ''),\n      currentBalance: Math.max(0, Number(account.currentBalance)),\n      currentInflows: Math.max(0, Number(account.currentInflows)),\n      currentOutflows: Math.max(0, Number(account.currentOutflows)),\n      yearEndProjected: Number(account.yearEndProjected),\n      owner: {\n        name: account.owner.name.trim(),\n        avatar: account.owner.avatar?.trim()\n      }\n    };\n  }\n\n  static sanitizeEvent(event: Event): Event {\n    return {\n      ...event,\n      name: event.name.trim(),\n      amount: Math.max(0, Number(event.amount)),\n      date: event.date.trim()\n    };\n  }\n} ","import { CashAccount, Event } from '../types';\nimport { ValidationService } from './validation';\n\ninterface StorageData {\n  accounts: CashAccount[];\n  events: Event[];\n  lastUpdated: string;\n  version: number;\n}\n\nconst STORAGE_KEY = 'trayecto_cash_flow_data';\nconst CURRENT_VERSION = 1;\n\nexport class StorageService {\n  static validateData(data: Partial<StorageData>): boolean {\n    if (data.accounts) {\n      for (const account of data.accounts) {\n        const result = ValidationService.validateAccount(account);\n        if (!result.isValid) {\n          console.error('Invalid account data:', result.errors);\n          return false;\n        }\n      }\n    }\n\n    if (data.events) {\n      for (const event of data.events) {\n        const result = ValidationService.validateEvent(event);\n        if (!result.isValid) {\n          console.error('Invalid event data:', result.errors);\n          return false;\n        }\n      }\n    }\n\n    return true;\n  }\n\n  static sanitizeData(data: Partial<StorageData>): Partial<StorageData> {\n    return {\n      ...data,\n      accounts: data.accounts?.map(account => ValidationService.sanitizeAccount(account)),\n      events: data.events?.map(event => ValidationService.sanitizeEvent(event))\n    };\n  }\n\n  static saveData(data: Partial<StorageData>): boolean {\n    try {\n      const existingData = StorageService.loadData();\n      const sanitizedData = StorageService.sanitizeData(data);\n      \n      if (!StorageService.validateData(sanitizedData)) {\n        throw new Error('Invalid data');\n      }\n\n      const newData: StorageData = {\n        ...existingData,\n        ...sanitizedData,\n        lastUpdated: new Date().toISOString(),\n        version: CURRENT_VERSION\n      };\n\n      localStorage.setItem(STORAGE_KEY, JSON.stringify(newData));\n      return true;\n    } catch (error) {\n      console.error('Error saving data:', error);\n      return false;\n    }\n  }\n\n  static loadData(): StorageData {\n    try {\n      const data = localStorage.getItem(STORAGE_KEY);\n      if (data) {\n        const parsedData = JSON.parse(data);\n        \n        // Version check and migration could be added here\n        if (parsedData.version !== CURRENT_VERSION) {\n          console.warn('Data version mismatch, migrations may be needed');\n        }\n\n        const sanitizedData = StorageService.sanitizeData(parsedData);\n        if (!StorageService.validateData(sanitizedData)) {\n          throw new Error('Invalid stored data');\n        }\n\n        return sanitizedData as StorageData;\n      }\n    } catch (error) {\n      console.error('Error loading data:', error);\n    }\n    \n    return {\n      accounts: [],\n      events: [],\n      lastUpdated: new Date().toISOString(),\n      version: CURRENT_VERSION\n    };\n  }\n\n  static clearData(): boolean {\n    try {\n      localStorage.removeItem(STORAGE_KEY);\n      return true;\n    } catch (error) {\n      console.error('Error clearing data:', error);\n      return false;\n    }\n  }\n} ","import { create } from 'zustand';\nimport { CashAccount, Event, ValidationError } from '../types';\nimport { StorageService } from '../services/storage';\nimport { ValidationService } from '../services/validation';\n\nconst mockAccounts: CashAccount[] = [\n  {\n    id: '1',\n    name: 'Ally Checking-5678',\n    type: 'checking',\n    accountNumber: '5678',\n    currentBalance: 12000,\n    currentInflows: 5202,\n    currentOutflows: 3202,\n    surplusDeficit: 2000,\n    yearEndProjected: 20999,\n    owner: {\n      name: 'Colin Overcash',\n      avatar: 'https://ui-avatars.com/api/?name=Colin+Overcash'\n    }\n  },\n  {\n    id: '2',\n    name: 'Chase Savings-5678',\n    type: 'savings',\n    accountNumber: '5678',\n    currentBalance: 12000,\n    currentInflows: 5202,\n    currentOutflows: 3202,\n    surplusDeficit: 2000,\n    yearEndProjected: 20999,\n    owner: {\n      name: 'Colin Overcash',\n      avatar: 'https://ui-avatars.com/api/?name=Colin+Overcash'\n    }\n  }\n];\n\nconst mockEvents: Event[] = [\n  {\n    id: '1',\n    type: 'Emergency Savings',\n    name: 'Emergency Fund',\n    amount: 20000,\n    date: '2024-03-01',\n    progress: 'On Track'\n  },\n  {\n    id: '2',\n    type: 'Sabbatical',\n    name: 'Summer Break',\n    amount: 20000,\n    date: '2024-06-01',\n    progress: 'Off Track'\n  },\n  {\n    id: '3',\n    type: 'Vacation',\n    name: 'Thanksgiving Family Vacation',\n    amount: 20000,\n    date: '2024-11-01',\n    progress: 'Off Track'\n  }\n];\n\ninterface CashFlowState {\n  accounts: CashAccount[];\n  events: Event[];\n  totalBalance: number;\n  totalEarmarked: number;\n  totalInflows: number;\n  totalOutflows: number;\n  surplusDeficit: number;\n  isLoading: boolean;\n  error: string | null;\n  validationErrors: ValidationError[];\n  \n  // Actions\n  initializeStore: () => Promise<void>;\n  setAccounts: (accounts: CashAccount[]) => Promise<void>;\n  setEvents: (events: Event[]) => Promise<void>;\n  updateAccount: (account: CashAccount) => Promise<void>;\n  deleteAccount: (accountId: string) => Promise<void>;\n  addEvent: (event: Event) => Promise<void>;\n  updateEvent: (event: Event) => Promise<void>;\n  deleteEvent: (eventId: string) => Promise<void>;\n  recalculateTotals: () => void;\n  clearValidationErrors: () => void;\n}\n\nexport const useCashFlowStore = create<CashFlowState>((set, get) => ({\n  accounts: [],\n  events: [],\n  totalBalance: 0,\n  totalEarmarked: 0,\n  totalInflows: 0,\n  totalOutflows: 0,\n  surplusDeficit: 0,\n  isLoading: true,\n  error: null,\n  validationErrors: [],\n\n  initializeStore: async () => {\n    try {\n      set({ isLoading: true, error: null });\n      const data = StorageService.loadData();\n      \n      if (data.accounts.length === 0 && data.events.length === 0) {\n        // Load mock data only if no data exists\n        data.accounts = mockAccounts;\n        data.events = mockEvents;\n        StorageService.saveData(data);\n      }\n\n      set({ \n        accounts: data.accounts,\n        events: data.events,\n        isLoading: false\n      });\n      \n      get().recalculateTotals();\n    } catch (error) {\n      set({ \n        error: 'Failed to initialize data',\n        isLoading: false\n      });\n    }\n  },\n  \n  setAccounts: async (accounts) => {\n    try {\n      set({ accounts });\n      await StorageService.saveData({ accounts });\n      get().recalculateTotals();\n    } catch (error) {\n      set({ error: 'Failed to save accounts' });\n    }\n  },\n  \n  setEvents: async (events) => {\n    try {\n      set({ events });\n      await StorageService.saveData({ events });\n      get().recalculateTotals();\n    } catch (error) {\n      set({ error: 'Failed to save events' });\n    }\n  },\n  \n  updateAccount: async (updatedAccount) => {\n    try {\n      const accounts = get().accounts.map(account =>\n        account.id === updatedAccount.id ? updatedAccount : account\n      );\n      set({ accounts });\n      await StorageService.saveData({ accounts });\n      get().recalculateTotals();\n    } catch (error) {\n      set({ error: 'Failed to update account' });\n    }\n  },\n  \n  deleteAccount: async (accountId) => {\n    try {\n      const accounts = get().accounts.filter(account => account.id !== accountId);\n      set({ accounts });\n      await StorageService.saveData({ accounts });\n      get().recalculateTotals();\n    } catch (error) {\n      set({ error: 'Failed to delete account' });\n    }\n  },\n  \n  addEvent: async (event) => {\n    try {\n      const validation = ValidationService.validateEvent(event);\n      if (!validation.isValid) {\n        set({ validationErrors: validation.errors });\n        throw new Error('Validation failed');\n      }\n\n      const sanitizedEvent = ValidationService.sanitizeEvent(event);\n      const events = [...get().events, sanitizedEvent];\n      set({ events, validationErrors: [] });\n      await StorageService.saveData({ events });\n      get().recalculateTotals();\n    } catch (error) {\n      set({ error: 'Failed to add event' });\n    }\n  },\n  \n  updateEvent: async (updatedEvent) => {\n    try {\n      const events = get().events.map(event =>\n        event.id === updatedEvent.id ? updatedEvent : event\n      );\n      set({ events });\n      await StorageService.saveData({ events });\n      get().recalculateTotals();\n    } catch (error) {\n      set({ error: 'Failed to update event' });\n    }\n  },\n  \n  deleteEvent: async (eventId) => {\n    try {\n      const events = get().events.filter(event => event.id !== eventId);\n      set({ events });\n      await StorageService.saveData({ events });\n      get().recalculateTotals();\n    } catch (error) {\n      set({ error: 'Failed to delete event' });\n    }\n  },\n\n  recalculateTotals: () => {\n    const { accounts, events } = get();\n    \n    const totalBalance = accounts.reduce((sum, account) => sum + account.currentBalance, 0);\n    const totalEarmarked = events.reduce((sum, event) => sum + event.amount, 0);\n    const totalInflows = accounts.reduce((sum, account) => sum + account.currentInflows, 0);\n    const totalOutflows = accounts.reduce((sum, account) => sum + account.currentOutflows, 0);\n    const surplusDeficit = totalInflows - totalOutflows;\n\n    set({\n      totalBalance,\n      totalEarmarked,\n      totalInflows,\n      totalOutflows,\n      surplusDeficit\n    });\n  },\n\n  clearValidationErrors: () => set({ validationErrors: [] })\n})); ","import React from 'react';\nimport { ResponsiveLine } from '@nivo/line';\nimport { Box, Typography, Chip, useTheme } from '@mui/material';\nimport { format, parse } from 'date-fns';\nimport { useCashFlowStore } from '../stores/cashFlowStore';\nimport { Event } from '../types';\n\ninterface ChartDataPoint {\n  id: string;\n  data: Array<{\n    x: string;\n    y: number;\n  }>;\n}\n\ninterface ProjectedBalance {\n  month: string;\n  balance: number;\n  events: Event[];\n}\n\nconst calculateProjectedBalances = (\n  startBalance: number,\n  monthlyChange: number,\n  events: Event[],\n  months: number\n): ProjectedBalance[] => {\n  const balances: ProjectedBalance[] = [];\n  let currentBalance = startBalance;\n\n  for (let i = 0; i < months; i++) {\n    const date = new Date(2024, i, 1);\n    const month = format(date, 'MMM');\n    const monthEvents = events.filter(event => {\n      const eventDate = parse(event.date, 'yyyy-MM-dd', new Date());\n      return format(eventDate, 'MMM') === month;\n    });\n\n    // Apply monthly change\n    currentBalance += monthlyChange;\n\n    // Apply event impacts\n    const eventImpact = monthEvents.reduce((sum, event) => sum - event.amount, 0);\n    currentBalance += eventImpact;\n\n    balances.push({\n      month,\n      balance: currentBalance,\n      events: monthEvents\n    });\n  }\n\n  return balances;\n};\n\nconst generateProjectedData = (\n  startBalance: number,\n  monthlyChange: number,\n  months: number,\n  events: Event[]\n): ChartDataPoint['data'] => {\n  const projectedBalances = calculateProjectedBalances(startBalance, monthlyChange, events, months);\n  return projectedBalances.map(({ month, balance }) => ({\n    x: month,\n    y: Math.max(0, balance) // Ensure we don't show negative balances\n  }));\n};\n\nexport const CashFlowChart: React.FC = () => {\n  const theme = useTheme();\n  const { events, accounts } = useCashFlowStore();\n\n  // Calculate total monthly inflows and outflows\n  const totalMonthlyInflow = accounts.reduce((sum, account) => sum + account.currentInflows, 0);\n  const totalMonthlyOutflow = accounts.reduce((sum, account) => sum + account.currentOutflows, 0);\n  const netMonthlyChange = totalMonthlyInflow - totalMonthlyOutflow;\n\n  const chartData: ChartDataPoint[] = [\n    {\n      id: \"Ally Checking\",\n      data: generateProjectedData(65000, -2000, 12, events.filter(e => e.type === 'Emergency Savings'))\n    },\n    {\n      id: \"Chase Checking\",\n      data: generateProjectedData(45000, -1000, 12, events.filter(e => e.type === 'Sabbatical'))\n    },\n    {\n      id: \"Chase Savings\",\n      data: generateProjectedData(35000, 500, 12, events.filter(e => e.type === 'Vacation'))\n    },\n    {\n      id: \"Projected Total\",\n      data: generateProjectedData(\n        accounts.reduce((sum, account) => sum + account.currentBalance, 0),\n        netMonthlyChange,\n        12,\n        events\n      )\n    }\n  ];\n\n  // Enhanced tooltip to show event impacts\n  const CustomTooltip = ({ point }: any) => {\n    const month = point.data.x;\n    const monthEvents = events.filter(event => {\n      const eventDate = parse(event.date, 'yyyy-MM-dd', new Date());\n      return format(eventDate, 'MMM') === month;\n    });\n\n    return (\n      <Box\n        sx={{\n          background: theme.palette.background.paper,\n          padding: 1,\n          border: `1px solid ${theme.palette.divider}`,\n          borderRadius: 1,\n          minWidth: 200\n        }}\n      >\n        <Typography variant=\"body2\" sx={{ mb: 1 }}>\n          {point.serieId}: ${point.data.y.toLocaleString()}\n        </Typography>\n        <Typography variant=\"caption\" color=\"text.secondary\">\n          {month}\n        </Typography>\n        \n        {monthEvents.length > 0 && (\n          <Box sx={{ mt: 1, pt: 1, borderTop: `1px solid ${theme.palette.divider}` }}>\n            <Typography variant=\"caption\" color=\"text.secondary\">\n              Events this month:\n            </Typography>\n            {monthEvents.map(event => (\n              <Box key={event.id} sx={{ mt: 0.5 }}>\n                <Typography variant=\"caption\" sx={{ display: 'flex', justifyContent: 'space-between' }}>\n                  <span>{event.name}</span>\n                  <span style={{ color: theme.palette.error.main }}>\n                    -${event.amount.toLocaleString()}\n                  </span>\n                </Typography>\n              </Box>\n            ))}\n          </Box>\n        )}\n      </Box>\n    );\n  };\n\n  return (\n    <Box sx={{ height: 400 }}>\n      <Box sx={{ display: 'flex', justifyContent: 'space-between', mb: 2 }}>\n        <Typography variant=\"h6\">Events</Typography>\n        <Box>\n          {events.map(event => (\n            <Chip \n              key={event.id}\n              label={event.type} \n              sx={{ mr: 1 }} \n              color={\n                event.type === 'Emergency Savings' ? 'default' :\n                event.type === 'Sabbatical' ? 'primary' : 'secondary'\n              }\n              variant=\"outlined\"\n            />\n          ))}\n        </Box>\n      </Box>\n      \n      <ResponsiveLine\n        data={chartData}\n        margin={{ top: 50, right: 110, bottom: 50, left: 60 }}\n        xScale={{ type: 'point' }}\n        yScale={{ \n          type: 'linear', \n          min: 0, \n          max: 'auto' \n        }}\n        curve=\"monotoneX\"\n        enablePoints={true}\n        pointSize={8}\n        pointColor={{ theme: 'background' }}\n        pointBorderWidth={1}\n        pointBorderColor={{ from: 'serieColor' }}\n        enableGridX={false}\n        enableArea={true}\n        areaOpacity={0.1}\n        useMesh={true}\n        colors={{ scheme: 'category10' }}\n        lineWidth={2}\n        axisBottom={{\n          tickSize: 5,\n          tickPadding: 5,\n          tickRotation: 0,\n        }}\n        axisLeft={{\n          tickSize: 5,\n          tickPadding: 5,\n          tickRotation: 0,\n          format: value => `$${(value as number).toLocaleString()}`\n        }}\n        legends={[\n          {\n            anchor: 'right',\n            direction: 'column',\n            justify: false,\n            translateX: 100,\n            translateY: 0,\n            itemsSpacing: 0,\n            itemDirection: 'left-to-right',\n            itemWidth: 140,\n            itemHeight: 20,\n            symbolSize: 12,\n            symbolShape: 'circle',\n            effects: [\n              {\n                on: 'hover',\n                style: {\n                  itemBackground: 'rgba(0, 0, 0, .03)',\n                  itemOpacity: 1\n                }\n              }\n            ]\n          }\n        ]}\n        theme={{\n          axis: {\n            ticks: {\n              text: {\n                fill: theme.palette.text.secondary,\n                fontSize: 12\n              }\n            }\n          },\n          grid: {\n            line: {\n              stroke: theme.palette.divider,\n              strokeWidth: 1\n            }\n          },\n          legends: {\n            text: {\n              fill: theme.palette.text.primary,\n              fontSize: 12\n            }\n          }\n        }}\n        tooltip={({ point }) => <CustomTooltip point={point} />}\n        layers={[\n          'grid',\n          'markers',\n          'axes',\n          'areas',\n          'crosshair',\n          'lines',\n          'points',\n          'slices',\n          'mesh',\n          'legends'\n        ]}\n      />\n    </Box>\n  );\n}; ","\"use strict\";\n'use client';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"default\", {\n  enumerable: true,\n  get: function () {\n    return _utils.createSvgIcon;\n  }\n});\nvar _utils = require(\"@mui/material/utils\");","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = exports.default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M11 7h2v2h-2zm0 4h2v6h-2zm1-9C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2m0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8\"\n}), 'InfoOutlined');","import React from 'react';\nimport { Box, Paper, Typography, Grid } from '@mui/material';\nimport InfoOutlinedIcon from '@mui/icons-material/InfoOutlined';\n\ninterface SummaryItemProps {\n  label: string;\n  value: number;\n  yearEnd?: number;\n  showInfo?: boolean;\n}\n\nconst SummaryItem: React.FC<SummaryItemProps> = ({ label, value, yearEnd, showInfo = true }) => (\n  <Box sx={{ textAlign: 'center', p: 2 }}>\n    <Typography variant=\"body2\" color=\"text.secondary\" sx={{ mb: 1, display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\n      {label}\n      {showInfo && <InfoOutlinedIcon sx={{ ml: 0.5, fontSize: 16 }} />}\n    </Typography>\n    <Typography variant=\"h5\" sx={{ mb: 0.5 }}>${value.toLocaleString()}</Typography>\n    {yearEnd && (\n      <Typography variant=\"caption\" color=\"text.secondary\">\n        Year End ${yearEnd.toLocaleString()}\n      </Typography>\n    )}\n  </Box>\n);\n\ninterface CashFlowSummaryProps {\n  totalBalance: number;\n  totalEarmarked: number;\n  totalInflows: number;\n  totalOutflows: number;\n  surplusDeficit: number;\n}\n\nexport const CashFlowSummary: React.FC<CashFlowSummaryProps> = ({\n  totalBalance,\n  totalEarmarked,\n  totalInflows,\n  totalOutflows,\n  surplusDeficit\n}) => {\n  return (\n    <Paper sx={{ mb: 3 }}>\n      <Grid container>\n        <Grid item xs={12} sm={2.4}>\n          <SummaryItem \n            label=\"Total Balances from Cash Accounts\" \n            value={totalBalance}\n            yearEnd={140999}\n          />\n        </Grid>\n        <Grid item xs={12} sm={2.4}>\n          <SummaryItem \n            label=\"Total Earmarked for Events\" \n            value={totalEarmarked}\n            yearEnd={100999}\n          />\n        </Grid>\n        <Grid item xs={12} sm={2.4}>\n          <SummaryItem \n            label=\"Total Inflows\" \n            value={totalInflows}\n            yearEnd={40999}\n          />\n        </Grid>\n        <Grid item xs={12} sm={2.4}>\n          <SummaryItem \n            label=\"Total Outflows\" \n            value={totalOutflows}\n            yearEnd={30999}\n          />\n        </Grid>\n        <Grid item xs={12} sm={2.4}>\n          <SummaryItem \n            label=\"Surplus/Deficit\" \n            value={surplusDeficit}\n            yearEnd={20999}\n          />\n        </Grid>\n      </Grid>\n    </Paper>\n  );\n}; ","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = exports.default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M3 17.25V21h3.75L17.81 9.94l-3.75-3.75zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34a.9959.9959 0 0 0-1.41 0l-1.83 1.83 3.75 3.75z\"\n}), 'Edit');","import React from 'react';\nimport {\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  Button,\n  TextField,\n  MenuItem,\n  Box,\n  Typography\n} from '@mui/material';\nimport { useCashFlowStore } from '../stores/cashFlowStore';\nimport { CashAccount } from '../types';\n\ninterface AddCashAccountDialogProps {\n  open: boolean;\n  onClose: () => void;\n}\n\nexport const AddCashAccountDialog: React.FC<AddCashAccountDialogProps> = ({ open, onClose }) => {\n  const [formData, setFormData] = React.useState<Partial<CashAccount>>({\n    type: 'checking',\n    currentBalance: 0,\n    currentInflows: 0,\n    currentOutflows: 0,\n    yearEndProjected: 0,\n    owner: {\n      name: 'Colin Overcash'\n    }\n  });\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    // TODO: Add validation\n    const newAccount: CashAccount = {\n      id: crypto.randomUUID(),\n      name: formData.name || '',\n      type: formData.type || 'checking',\n      accountNumber: formData.accountNumber || '',\n      currentBalance: formData.currentBalance || 0,\n      currentInflows: formData.currentInflows || 0,\n      currentOutflows: formData.currentOutflows || 0,\n      surplusDeficit: (formData.currentInflows || 0) - (formData.currentOutflows || 0),\n      yearEndProjected: formData.yearEndProjected || 0,\n      owner: {\n        name: formData.owner?.name || 'Colin Overcash'\n      }\n    };\n\n    useCashFlowStore.getState().setAccounts([\n      ...useCashFlowStore.getState().accounts,\n      newAccount\n    ]);\n    \n    onClose();\n  };\n\n  const handleChange = (field: keyof CashAccount) => (\n    e: React.ChangeEvent<HTMLInputElement>\n  ) => {\n    const value = e.target.type === 'number' ? Number(e.target.value) : e.target.value;\n    setFormData(prev => ({ ...prev, [field]: value }));\n  };\n\n  return (\n    <Dialog open={open} onClose={onClose} maxWidth=\"sm\" fullWidth>\n      <form onSubmit={handleSubmit}>\n        <DialogTitle>Add Cash Account</DialogTitle>\n        <DialogContent>\n          <Box sx={{ display: 'flex', flexDirection: 'column', gap: 2, mt: 2 }}>\n            <TextField\n              label=\"Account Name\"\n              required\n              value={formData.name || ''}\n              onChange={handleChange('name')}\n            />\n            \n            <TextField\n              select\n              label=\"Account Type\"\n              required\n              value={formData.type || 'checking'}\n              onChange={handleChange('type')}\n            >\n              <MenuItem value=\"checking\">Checking</MenuItem>\n              <MenuItem value=\"savings\">Savings</MenuItem>\n            </TextField>\n\n            <TextField\n              label=\"Account Number\"\n              required\n              value={formData.accountNumber || ''}\n              onChange={handleChange('accountNumber')}\n            />\n\n            <Typography variant=\"subtitle2\" color=\"text.secondary\" sx={{ mt: 2 }}>\n              Initial Balances\n            </Typography>\n\n            <TextField\n              type=\"number\"\n              label=\"Current Balance\"\n              required\n              value={formData.currentBalance || ''}\n              onChange={handleChange('currentBalance')}\n            />\n\n            <TextField\n              type=\"number\"\n              label=\"Current Inflows\"\n              required\n              value={formData.currentInflows || ''}\n              onChange={handleChange('currentInflows')}\n            />\n\n            <TextField\n              type=\"number\"\n              label=\"Current Outflows\"\n              required\n              value={formData.currentOutflows || ''}\n              onChange={handleChange('currentOutflows')}\n            />\n\n            <TextField\n              type=\"number\"\n              label=\"Year End Projected\"\n              required\n              value={formData.yearEndProjected || ''}\n              onChange={handleChange('yearEndProjected')}\n            />\n          </Box>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={onClose}>Cancel</Button>\n          <Button type=\"submit\" variant=\"contained\">Add Account</Button>\n        </DialogActions>\n      </form>\n    </Dialog>\n  );\n}; ","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = exports.default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 6.41 17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n}), 'Close');","import React from 'react';\nimport {\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  Button,\n  TextField,\n  MenuItem,\n  Box,\n  Typography,\n  IconButton\n} from '@mui/material';\nimport CloseIcon from '@mui/icons-material/Close';\nimport { useCashFlowStore } from '../stores/cashFlowStore';\nimport { CashAccount } from '../types';\n\ninterface EditCashAccountDialogProps {\n  open: boolean;\n  onClose: () => void;\n  account: CashAccount;\n}\n\nexport const EditCashAccountDialog: React.FC<EditCashAccountDialogProps> = ({ \n  open, \n  onClose, \n  account \n}) => {\n  const [formData, setFormData] = React.useState<CashAccount>(account);\n\n  React.useEffect(() => {\n    setFormData(account);\n  }, [account]);\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    \n    const updatedAccount: CashAccount = {\n      ...formData,\n      surplusDeficit: formData.currentInflows - formData.currentOutflows\n    };\n\n    useCashFlowStore.getState().updateAccount(updatedAccount);\n    onClose();\n  };\n\n  const handleChange = (field: keyof CashAccount) => (\n    e: React.ChangeEvent<HTMLInputElement>\n  ) => {\n    const value = e.target.type === 'number' ? Number(e.target.value) : e.target.value;\n    setFormData(prev => ({ ...prev, [field]: value }));\n  };\n\n  const handleDelete = () => {\n    if (window.confirm('Are you sure you want to delete this account?')) {\n      useCashFlowStore.getState().deleteAccount(account.id);\n      onClose();\n    }\n  };\n\n  return (\n    <Dialog open={open} onClose={onClose} maxWidth=\"sm\" fullWidth>\n      <form onSubmit={handleSubmit}>\n        <DialogTitle>\n          <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\n            Edit Cash Account\n            <IconButton onClick={onClose} size=\"small\">\n              <CloseIcon />\n            </IconButton>\n          </Box>\n        </DialogTitle>\n        <DialogContent>\n          <Box sx={{ display: 'flex', flexDirection: 'column', gap: 2, mt: 2 }}>\n            <TextField\n              label=\"Account Name\"\n              required\n              value={formData.name}\n              onChange={handleChange('name')}\n            />\n            \n            <TextField\n              select\n              label=\"Account Type\"\n              required\n              value={formData.type}\n              onChange={handleChange('type')}\n            >\n              <MenuItem value=\"checking\">Checking</MenuItem>\n              <MenuItem value=\"savings\">Savings</MenuItem>\n            </TextField>\n\n            <TextField\n              label=\"Account Number\"\n              required\n              value={formData.accountNumber}\n              onChange={handleChange('accountNumber')}\n            />\n\n            <Typography variant=\"subtitle2\" color=\"text.secondary\" sx={{ mt: 2 }}>\n              Current Balances\n            </Typography>\n\n            <TextField\n              type=\"number\"\n              label=\"Current Balance\"\n              required\n              value={formData.currentBalance}\n              onChange={handleChange('currentBalance')}\n            />\n\n            <TextField\n              type=\"number\"\n              label=\"Current Inflows\"\n              required\n              value={formData.currentInflows}\n              onChange={handleChange('currentInflows')}\n            />\n\n            <TextField\n              type=\"number\"\n              label=\"Current Outflows\"\n              required\n              value={formData.currentOutflows}\n              onChange={handleChange('currentOutflows')}\n            />\n\n            <TextField\n              type=\"number\"\n              label=\"Year End Projected\"\n              required\n              value={formData.yearEndProjected}\n              onChange={handleChange('yearEndProjected')}\n            />\n          </Box>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleDelete} color=\"error\">\n            Delete Account\n          </Button>\n          <Box sx={{ flex: 1 }} />\n          <Button onClick={onClose}>Cancel</Button>\n          <Button type=\"submit\" variant=\"contained\">Save Changes</Button>\n        </DialogActions>\n      </form>\n    </Dialog>\n  );\n}; ","import React from 'react';\nimport { Box, Paper, Typography, Button, IconButton, Grid } from '@mui/material';\nimport EditIcon from '@mui/icons-material/Edit';\nimport { useCashFlowStore } from '../stores/cashFlowStore';\nimport { CashAccount } from '../types';\nimport { AddCashAccountDialog } from './AddCashAccountDialog';\nimport { EditCashAccountDialog } from './EditCashAccountDialog';\n\ninterface AccountCardProps {\n  account: CashAccount;\n}\n\nconst AccountCard: React.FC<AccountCardProps> = ({ account }) => {\n  const [isEditDialogOpen, setIsEditDialogOpen] = React.useState(false);\n\n  const handleOpenEditDialog = () => setIsEditDialogOpen(true);\n  const handleCloseEditDialog = () => setIsEditDialogOpen(false);\n\n  return (\n    <>\n      <Paper sx={{ mb: 2, p: 3 }}>\n        <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'flex-start', mb: 2 }}>\n          <Box sx={{ display: 'flex', alignItems: 'center' }}>\n            <Typography variant=\"h6\">{account.name}</Typography>\n            <Box \n              component=\"img\" \n              src={account.owner.avatar} \n              sx={{ width: 24, height: 24, borderRadius: '50%', ml: 1 }}\n              alt={account.owner.name}\n            />\n          </Box>\n          <IconButton size=\"small\" onClick={handleOpenEditDialog}>\n            <EditIcon />\n          </IconButton>\n        </Box>\n\n        <Grid container spacing={3}>\n          <Grid item xs={3}>\n            <Typography variant=\"body2\" color=\"text.secondary\">Current Balance</Typography>\n            <Typography variant=\"h6\">${account.currentBalance.toLocaleString()}</Typography>\n            <Typography variant=\"caption\" color=\"text.secondary\">\n              Year End ${account.yearEndProjected.toLocaleString()}\n            </Typography>\n          </Grid>\n          <Grid item xs={3}>\n            <Typography variant=\"body2\" color=\"text.secondary\">Current Inflows</Typography>\n            <Typography variant=\"h6\">${account.currentInflows.toLocaleString()}</Typography>\n            <Typography variant=\"caption\" color=\"text.secondary\">\n              Year End ${account.yearEndProjected.toLocaleString()}\n            </Typography>\n          </Grid>\n          <Grid item xs={3}>\n            <Typography variant=\"body2\" color=\"text.secondary\">Current Outflows</Typography>\n            <Typography variant=\"h6\">${account.currentOutflows.toLocaleString()}</Typography>\n            <Typography variant=\"caption\" color=\"text.secondary\">\n              Year End ${account.yearEndProjected.toLocaleString()}\n            </Typography>\n          </Grid>\n          <Grid item xs={3}>\n            <Typography variant=\"body2\" color=\"text.secondary\">Surplus/Deficit</Typography>\n            <Typography variant=\"h6\">${account.surplusDeficit.toLocaleString()}</Typography>\n            <Typography variant=\"caption\" color=\"text.secondary\">\n              Year End ${account.yearEndProjected.toLocaleString()}\n            </Typography>\n          </Grid>\n        </Grid>\n      </Paper>\n\n      <EditCashAccountDialog\n        open={isEditDialogOpen}\n        onClose={handleCloseEditDialog}\n        account={account}\n      />\n    </>\n  );\n};\n\nexport const CashAccountsList: React.FC = () => {\n  const { accounts } = useCashFlowStore();\n  const [isAddDialogOpen, setIsAddDialogOpen] = React.useState(false);\n\n  const handleOpenAddDialog = () => setIsAddDialogOpen(true);\n  const handleCloseAddDialog = () => setIsAddDialogOpen(false);\n\n  return (\n    <Box>\n      <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 2 }}>\n        <Typography variant=\"h6\">Cash Accounts</Typography>\n        <Button variant=\"outlined\" onClick={handleOpenAddDialog}>\n          Add Cash Account\n        </Button>\n      </Box>\n      \n      {accounts.map(account => (\n        <AccountCard key={account.id} account={account} />\n      ))}\n\n      <AddCashAccountDialog \n        open={isAddDialogOpen}\n        onClose={handleCloseAddDialog}\n      />\n    </Box>\n  );\n}; ","import React from 'react';\nimport { Box, Typography, Paper } from '@mui/material';\nimport { CashFlowChart } from './CashFlowChart';\nimport { CashFlowSummary } from './CashFlowSummary';\nimport { CashAccountsList } from './CashAccountsList';\nimport { useCashFlowStore } from '../stores/cashFlowStore';\n\nexport const CashFlow: React.FC = () => {\n  const { \n    totalBalance,\n    totalEarmarked,\n    totalInflows,\n    totalOutflows,\n    surplusDeficit\n  } = useCashFlowStore();\n\n  return (\n    <Box sx={{ p: 3 }}>\n      <Typography variant=\"h4\" sx={{ mb: 3 }}>Cash Flow</Typography>\n      \n      <Paper sx={{ p: 3, mb: 3 }}>\n        <CashFlowChart />\n      </Paper>\n\n      <CashFlowSummary \n        totalBalance={totalBalance}\n        totalEarmarked={totalEarmarked}\n        totalInflows={totalInflows}\n        totalOutflows={totalOutflows}\n        surplusDeficit={surplusDeficit}\n      />\n\n      <CashAccountsList />\n    </Box>\n  );\n}; ","import React from 'react';\nimport { Box, CircularProgress, Alert } from '@mui/material';\nimport { CashFlow } from './components/CashFlow';\nimport { useCashFlowStore } from './stores/cashFlowStore';\n\nexport const App: React.FC = () => {\n  const { initializeStore, isLoading, error } = useCashFlowStore();\n\n  React.useEffect(() => {\n    initializeStore();\n  }, [initializeStore]);\n\n  if (isLoading) {\n    return (\n      <Box sx={{ display: 'flex', justifyContent: 'center', alignItems: 'center', height: '100vh' }}>\n        <CircularProgress />\n      </Box>\n    );\n  }\n\n  if (error) {\n    return (\n      <Box sx={{ p: 3 }}>\n        <Alert severity=\"error\">{error}</Alert>\n      </Box>\n    );\n  }\n\n  return <CashFlow />;\n}; ","import { StrictMode } from 'react'\nimport { createRoot } from 'react-dom/client'\nimport './index.css'\nimport { App } from './App'\n\ncreateRoot(document.getElementById('root')!).render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n) "],"names":["m","require$$0","createRoot","toDate","argument","argStr","constructFrom","date","value","addDays","amount","_date","millisecondsInWeek","millisecondsInDay","millisecondsInMinute","millisecondsInHour","millisecondsInSecond","defaultOptions","getDefaultOptions","startOfWeek","options","weekStartsOn","_b","_a","_d","_c","day","diff","startOfISOWeek","getISOWeekYear","year","fourthOfJanuaryOfNextYear","startOfNextYear","fourthOfJanuaryOfThisYear","startOfThisYear","startOfDay","getTimezoneOffsetInMilliseconds","utcDate","differenceInCalendarDays","dateLeft","dateRight","startOfDayLeft","startOfDayRight","timestampLeft","timestampRight","startOfISOWeekYear","fourthOfJanuary","isDate","isValid","startOfYear","cleanDate","formatDistanceLocale","formatDistance","token","count","result","tokenValue","buildFormatLongFn","args","width","dateFormats","timeFormats","dateTimeFormats","formatLong","formatRelativeLocale","formatRelative","_baseDate","_options","buildLocalizeFn","context","valuesArray","defaultWidth","index","eraValues","quarterValues","monthValues","dayValues","dayPeriodValues","formattingDayPeriodValues","ordinalNumber","dirtyNumber","number","rem100","localize","quarter","buildMatchFn","string","matchPattern","matchResult","matchedString","parsePatterns","key","findIndex","pattern","findKey","rest","object","predicate","array","buildMatchPatternFn","parseResult","matchOrdinalNumberPattern","parseOrdinalNumberPattern","matchEraPatterns","parseEraPatterns","matchQuarterPatterns","parseQuarterPatterns","matchMonthPatterns","parseMonthPatterns","matchDayPatterns","parseDayPatterns","matchDayPeriodPatterns","parseDayPeriodPatterns","match","enUS","getDayOfYear","getISOWeek","getWeekYear","firstWeekContainsDate","firstWeekOfNextYear","firstWeekOfThisYear","startOfWeekYear","firstWeek","getWeek","addLeadingZeros","targetLength","sign","output","lightFormatters","signedYear","month","dayPeriodEnumValue","numberOfDigits","milliseconds","fractionalSeconds","dayPeriodEnum","formatters","era","signedWeekYear","weekYear","twoDigitYear","isoWeekYear","week","isoWeek","dayOfYear","dayOfWeek","localDayOfWeek","isoDayOfWeek","hours","_localize","timezoneOffset","formatTimezoneWithOptionalMinutes","formatTimezone","formatTimezoneShort","timestamp","offset","delimiter","absOffset","minutes","dateLongFormatter","timeLongFormatter","dateTimeLongFormatter","datePattern","timePattern","dateTimeFormat","longFormatters","dayOfYearTokenRE","weekYearTokenRE","throwTokens","isProtectedDayOfYearToken","isProtectedWeekYearToken","warnOrThrowProtectedError","format","input","_message","message","subject","formattingTokensRegExp","longFormattingTokensRegExp","escapedStringRegExp","doubleQuoteRegExp","unescapedLatinCharacterRegExp","formatStr","locale","defaultLocale","originalDate","parts","substring","firstCharacter","longFormatter","cleanEscapedString","formatterOptions","part","formatter","matched","getInternalDefaultOptions","getISODay","transpose","fromDate","constructor","TIMEZONE_UNIT_PRIORITY","Setter","__publicField","_utcDate","ValueSetter","validateValue","setValue","priority","subPriority","flags","DateToSystemTimezoneSetter","Parser","dateString","_value","EraParser","numericPatterns","timezonePatterns","mapValue","parseFnResult","mapFn","parseNumericPattern","parseTimezonePattern","seconds","parseAnyDigitsSigned","parseNDigits","parseNDigitsSigned","dayPeriodEnumToHours","dayPeriod","normalizeTwoDigitYear","currentYear","isCommonEra","absCurrentYear","rangeEnd","rangeEndCentury","isPreviousCentury","isLeapYearIndex","YearParser","valueCallback","normalizedTwoDigitYear","LocalWeekYearParser","ISOWeekYearParser","_flags","firstWeekOfYear","ExtendedYearParser","QuarterParser","StandAloneQuarterParser","MonthParser","StandAloneMonthParser","setWeek","LocalWeekParser","setISOWeek","ISOWeekParser","DAYS_IN_MONTH","DAYS_IN_MONTH_LEAP_YEAR","DateParser","isLeapYear","DayOfYearParser","setDay","currentDay","dayIndex","delta","DayParser","LocalDayParser","wholeWeekDays","StandAloneLocalDayParser","setISODay","ISODayParser","AMPMParser","AMPMMidnightParser","DayPeriodParser","Hour1to12Parser","isPM","Hour0to23Parser","Hour0To11Parser","Hour1To24Parser","MinuteParser","SecondParser","FractionOfSecondParser","ISOTimezoneWithZParser","ISOTimezoneParser","TimestampSecondsParser","TimestampMillisecondsParser","parsers","notWhitespaceRegExp","parse","dateStr","referenceDate","subFnOptions","setters","tokens","usedTokens","parser","incompatibleTokens","incompatibleToken","usedToken","uniquePrioritySetters","setter","a","b","setterArray","createStoreImpl","createState","state","listeners","setState","partial","replace","nextState","previousState","listener","getState","api","initialState","createStore","React","is","x","y","objectIs","useState","useEffect","useLayoutEffect","useDebugValue","useSyncExternalStore$2","subscribe","getSnapshot","_useState","inst","forceUpdate","checkIfSnapshotChanged","latestGetSnapshot","nextValue","useSyncExternalStore$1","shim","useSyncExternalStoreShim_production","shimModule","require$$1","useSyncExternalStore","useRef","useMemo","withSelector_production","getServerSnapshot","selector","isEqual","instRef","memoizedSelector","nextSnapshot","hasMemo","memoizedSnapshot","currentSelection","memoizedSelection","nextSelection","maybeGetServerSnapshot","withSelectorModule","ReactExports","useSyncExternalStoreWithSelector","useSyncExternalStoreExports","identity","arg","useStore","equalityFn","slice","createImpl","useBoundStore","create","ValidationService","account","errors","event","STORAGE_KEY","CURRENT_VERSION","StorageService","data","existingData","sanitizedData","newData","error","parsedData","mockAccounts","mockEvents","useCashFlowStore","set","get","accounts","events","updatedAccount","accountId","validation","sanitizedEvent","updatedEvent","eventId","totalBalance","sum","totalEarmarked","totalInflows","totalOutflows","surplusDeficit","calculateProjectedBalances","startBalance","monthlyChange","months","balances","currentBalance","monthEvents","eventDate","eventImpact","generateProjectedData","balance","CashFlowChart","theme","useTheme","totalMonthlyInflow","totalMonthlyOutflow","netMonthlyChange","chartData","e","CustomTooltip","point","jsxs","Box","Typography","jsx","Chip","ResponsiveLine","exports","_utils","_interopRequireDefault","InfoOutlined","default_1","_createSvgIcon","_jsxRuntime","require$$2","SummaryItem","label","yearEnd","showInfo","InfoOutlinedIcon","CashFlowSummary","Paper","Grid","Edit","AddCashAccountDialog","open","onClose","formData","setFormData","handleSubmit","newAccount","handleChange","field","prev","Dialog","DialogTitle","DialogContent","TextField","MenuItem","DialogActions","Button","Close","EditCashAccountDialog","handleDelete","IconButton","CloseIcon","AccountCard","isEditDialogOpen","setIsEditDialogOpen","handleOpenEditDialog","handleCloseEditDialog","Fragment","EditIcon","CashAccountsList","isAddDialogOpen","setIsAddDialogOpen","handleOpenAddDialog","handleCloseAddDialog","CashFlow","App","initializeStore","isLoading","CircularProgress","Alert","StrictMode"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,91,92,94,96]}